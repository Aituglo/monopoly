{"version":3,"sources":["NewGame.js","Player.js","Card.js","middleScreen/NavTabs.js","middleScreen/MyInfoTab.js","middleScreen/MyPropertiesTab.js","middleScreen/Logs.js","middleScreen/Actions.js","middleScreen/PlayersTab.js","middleScreen/TradeTab.js","middleScreen/TradesTab.js","middleScreen/MousedOverTileTab.js","middleScreen/MainView.js","Board.js","MainApp.js","App.js","store/Store.js","serviceWorker.js","index.js"],"names":["URL","process","REACT_APP_URL","NewGame","state","game_name","game_password","plate","money","username","password","selectedTab","searchGameName","gamesFound","gamesFoundSelected","joinGamePassword","joinGameUsername","joinGameUsernamePassword","formError","submitNewGame","e","preventDefault","fetch","concat","_this","method","headers","Content-Type","body","JSON","stringify","then","res","json","response","localStorage","setItem","game_id","console","log","props","history","push","joinGame","_id","error","setState","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","auth","keyPress","keyCode","searchForGames","data","games","removeItem","_this2","this","react_default","a","createElement","lib","className","href","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","style","paddingTop","class","src","alt","role","onSubmit","required","value","onChange","_ref","target","placeholder","_ref2","_ref3","_ref4","_ref5","_ref6","_ref7","onKeyDown","length","map","game","index","key","player_info","game_state","readOnly","_ref8","_ref9","_ref10","Component","withRouter","inject","observer","Player","moving","backgroundColor","store","playerNumber","color","Card","boxShadow","right","board","left","top","bottom","Object","objectSpread","backgroundImage","url","mortgaged","onMouseLeave","clearMousedOverTile","onMouseEnter","setMousedOverTile","filter","player","i","src_Player","animated_players_move","moves","tileIndex","owned","upgrades","NavTabs","selectTab","changeDropDown","dropdownExpanded","aria-haspopup","gameAuthInfo","selectedPlayer","MyInfoTab","_this$props$store$get","slicedToArray","getPlayer","dice","diceOne","diceTwo","playerIndex","playerTile","name","netWorth","MyPropertiesTab","scope","playersProperties","property","calculatedRent","parseInt","upgrade","disabled","canUpgrade","upgradeProperty","canDowngrade","downgradeProperty","cost","el","group","every","mortgageProperty","checked","Logs","prevProps","prevState","snapshot","div","refs","logs","scrollTop","scrollHeight","ref","Actions","startGame","playerState","jail_turns","startTurn","currentPlayerTurn","utilityChanceCardPayment","jail_state","payOutOfJail","buyTile","rejectBuyTile","payPercentTax","payFlatTax","endTurn","giveUp","PlayersTab","netWorthOfPlayer","TradeTab","proposeTrade","createTrade","currentProposingTrade","givenProperties","takenProperties","moneyGiven","moneyTaken","refreshCurrentProposingTrade","yourCash","playersCash","setCurrentProposingTrade","min","hasHousesOnAny","findIndex","toConsumableArray","slice","TradesTab","selectedTrade","trades","firstIndex","initiating_player","trading_player","initiatingPlayer","tradingPlayer","areYouInitiating","rightProperties","taken_properties","given_properties","leftProperties","initiatingPlayerHasAllProperties","tradingPlayerHasAllProperties","trade","given_money","taken_money","acceptTrade","marginRight","rejectTrade","cancelTrade","MousedOverTileTab","tile","mousedOverTile","playersOnTile","relatedTiles","relTile","calcRentCostTile","rent","MainView","middleScreen_MousedOverTileTab","Fragment","middleScreen_NavTabs","middleScreen_MyInfoTab","middleScreen_Actions","middleScreen_Logs","middleScreen_MyPropertiesTab","middleScreen_PlayersTab","middleScreen_TradeTab","middleScreen_TradesTab","Board","gameInfo","getItem","parse","setGameAuthInfo","connectToGame","inGame","outline","middleScreen_MainView","src_Card","margin","textAlign","fontSize","MainApp","location","pathname","src_Board","RedirectHome","Redirect","to","App","Switch","Route","exact","path","component","configure","enforceActions","Store","classCallCheck","socket","io","forceNew","emit","updatePlayerJailRolls","player_index","playerJailState","setPlayerState","rollDice","setJailState","syncPlayerJailState","syncPlayerState","movePlayer","checkTile","updatePlayerMoney","player_money","movePlayerDev","circularAdd","movingPlayer","setInterval","runInAction","shift","clearInterval","movePlayerToTile","new_position","devMoveHere","tile_position","mergeTradeData","tradeIndex","forEach","propIndex","addToLog","trade_index","newCurrentPlayer","findNextPlayerInGame","winningPlayer","find","winning_player","newBoard","next_player","new_board","givenMoney","takenMoney","payPlayer","receivingPlayer","givingPlayer","pay_multiplier","giving_player","receiving_player","giving_player_money","receiving_player_money","newLog","time","Date","doubles_rolled","updatePlayerDoublesRolled","checkAndUpdateDoublesRolled","diceSum","checkIfPlayerPassedGo","payLuxuryTax","handleModifierCard","goToJail","roll","Math","floor","random","newCardIndex","newCard","last_chance_card","chance","last_chest_card","chest","playerPassedGoMoneyIncrease","utility","findNearestType","rail_road","amount","payAllPlayers","nearest","ceil","tile_index","tile_bought","auction","auction_tile","old_player","property_index","socketActions","on","mortgage_value","setGameInfo","preDiceRoll","numOwns","base_rent","pow","ownsAll","noneMortgaged","val","num","max","worth","liquidWorthofPlayer","offByOneUp","offByOneDown","sort","b","propertyIndex","decorate","players","observable","computed","liquidWorth","action","setUsername","connectedFromNew","store_Store","Boolean","window","hostname","match","ReactDOM","render","index_module","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.06ffa508.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {ToastContainer, toast} from 'react-toastify';\n\nconst URL = process.env.REACT_APP_URL || 'https://monopoly.cassimkhouani.com';\n\nclass NewGame extends Component {\n    state = {\n        game_name: \"\",\n        game_password: \"\",\n        plate: \"mp\",\n        money: 1500,\n        username: \"\",\n        password: \"\",\n        selectedTab: \"home\",\n        searchGameName: \"\",\n        gamesFound: [],\n        gamesFoundSelected: -1,\n        joinGamePassword: \"\",\n        joinGameUsername: \"\",\n        joinGameUsernamePassword: \"\",\n        formError: \"\",\n    };\n\n    componentDidMount() {\n        localStorage.removeItem(\"username\");\n    }\n\n    submitNewGame = (e) => {\n        e.preventDefault();\n        fetch(`${URL}/${this.state.plate}/${this.state.money}/create_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_name: this.state.game_name,\n                game_password: this.state.game_password,\n                username: this.state.username,\n                password: this.state.password\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                localStorage.setItem(\"previous_game\", JSON.stringify({\n                    game_name: this.state.game_name,\n                    game_password: this.state.game_password,\n                    username: this.state.username,\n                    password: this.state.password,\n                    game_id: response.game_id,\n                }));\n                console.log(response);\n                this.props.history.push(\"/play-game\");\n            });\n    };\n    joinGame = (e) => {\n        e.preventDefault();\n        console.log(this.state.gamesFound[this.state.gamesFoundSelected]._id);\n        fetch(`${URL}/join_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                game_password: this.state.joinGamePassword,\n                username: this.state.joinGameUsername,\n                password: this.state.joinGameUsernamePassword\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response)\n                if (response.error) {\n                    this.setState({formError: response.error}, () => {\n                        if (this.state.formError === \"incorrect_game_pw\") {\n                            toast.error(\"Mot de passe de partie incorrect.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"player_not_in_game\") {\n                            toast.error(\"Vous n'êtes pas dans cette partie.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"incorrect_player_pw\") {\n                            toast.error(\"Mot de passe du joueur incorrect.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        }\n                    });\n                    return;\n                }\n                if (response.success) {\n                    localStorage.setItem(\"previous_game\", JSON.stringify({\n                        game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                        game_name: this.state.gamesFound[this.state.gamesFoundSelected].auth.game_name,\n                        game_password: this.state.joinGamePassword,\n                        username: this.state.joinGameUsername,\n                        password: this.state.joinGameUsernamePassword,\n                    }));\n                    console.log(response);\n                    this.props.history.push(\"/play-game\");\n                }\n            });\n    };\n    keyPress = (e) => {\n        if (e.keyCode === 13) {\n            this.searchForGames();\n        }\n    };\n    searchForGames = () => {\n        this.setState({gamesFound: [], gamesFoundSelected: -1});\n        fetch(`${URL}/search_for_games?game_name=${this.state.searchGameName}`)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({gamesFound: data.games});\n            })\n    };\n\n    render() {\n\n        return (\n            <div>\n                <ToastContainer/>\n                <nav className=\"navbar navbar-expand-lg navbar-light bg-primary\">\n                <a className=\"navbar-brand text-white\" href=\"#\" onClick={() => this.setState({selectedTab: \"home\"})}>Monopoly</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"create_game\"})}>\n                            <div className={`nav-link text-white ${this.state.selectedTab === \"create_game\" ? \"active\" : \"\"}`}>\n                                Créer une partie\n                            </div>\n                        </li>\n                        <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"join_game\"})}>\n                            <div className={`nav-link text-white ${this.state.selectedTab === \"join_game\" ? \"active\" : \"\"}`}>\n                                Rejoindre une partie\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n                </nav>\n                {this.state.selectedTab === \"home\" && (\n                    <div className=\"container\" style={{paddingTop: \"50px\"}}>\n                        <div class=\"jumbotron\">\n                        <img \n                            src=\"https://upload.wikimedia.org/wikipedia/fr/thumb/c/ca/Monopoly.svg/1200px-Monopoly.svg.png\"\n                            className=\"center\"\n                            alt=\"monopoly\"\n                        />\n                        <hr class=\"my-4\" />\n                        <p class=\"lead\">\n                            <a class=\"btn btn-primary btn-lg center\" onClick={() => this.setState({selectedTab: \"create_game\"})} href=\"#\" role=\"button\">Jouer</a>\n                        </p>\n                        </div>\n                    </div>\n                )}\n                {this.state.selectedTab === \"create_game\" && (\n                    <div className=\"create-game-input\">\n                        <form onSubmit={this.submitNewGame}>\n                            <h5>Créer une partie</h5>\n                            <small className=\"form-text text-muted align-self-start\">Nom de la partie</small>\n                            <input required value={this.state.game_name}\n                                   onChange={({target}) => this.setState({game_name: target.value})}\n                                   type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Nom partie\"/>\n                            <small className=\"form-text text-muted align-self-start\">Mot de passe de la partie</small>\n                            <input required value={this.state.game_password}\n                                   onChange={({target}) => this.setState({game_password: target.value})}\n                                   type=\"password\" className=\"form-control mb-2\"\n                                   placeholder=\"Mot de passe\"/>\n                            <small className=\"form-text text-muted align-self-start\">Ton nom</small>\n                            <input required value={this.state.username}\n                                   onChange={({target}) => this.setState({username: target.value})}\n                                   type=\"text\" className=\"form-control mb-2\"\n                                   placeholder=\"Nom\"/>\n                            <small className=\"form-text text-muted align-self-start\">Ton mot de passe</small>\n                            <input required value={this.state.password}\n                                   onChange={({target}) => this.setState({password: target.value})} type=\"password\"\n                                   className=\"form-control mb-2\"\n                                   placeholder=\"Mot de passe\"/>\n                            <small className=\"form-text text-muted align-self-start\">Plateau</small>\n                            <select required value={this.state.plate}\n                                   onChange={({target}) => this.setState({plate: target.value})}\n                                   className=\"form-control mb-2\">\n                                <option value=\"social\">Réseaux sociaux</option>\n                                <option value=\"mp\">MP</option>\n                                <option value=\"mpcouple\">MP Couples</option>\n                                <option value=\"hp\">Harry Potter</option>\n                            </select>\n                            <small className=\"form-text text-muted align-self-start\">Argent de départ</small>\n                            <input required value={this.state.money}\n                                   onChange={({target}) => this.setState({money: target.value})}\n                                   type=\"number\" className=\"form-control mb-2\"\n                                   placeholder=\"Argent de départ\"/>\n                            <button type=\"submit\" className=\"btn btn-primary\">Créer</button>\n                        </form>\n                    </div>\n                )}\n                {this.state.selectedTab === \"join_game\" && (\n                    <div className=\"create-game-input\">\n                        <h5>Rejoindre une partie</h5>\n                        <small className=\"form-text text-muted align-self-start\">Chercher une partie</small>\n                        <div className=\"input-group\">\n                            <input required value={this.state.searchGameName}\n                                   onChange={({target}) => this.setState({searchGameName: target.value})} type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Search...\"\n                                   onKeyDown={this.keyPress}\n                            />\n                            <div className=\"input-group-append\">\n                                <button onClick={this.searchForGames} className=\"btn btn-outline-secondary\"\n                                        type=\"button\">\n                                    <i className=\"fas fa-search\"/>\n                                </button>\n                            </div>\n                        </div>\n                        {this.state.gamesFound.length > 0 && (\n                            <div className=\"mt-3\">\n                                <h5>Parties trouvées</h5>\n                                <ul className=\"list-group\">\n                                    {this.state.gamesFound.map((game, index) => {\n                                        return (\n                                            <li key={game._id}\n                                                onClick={() => {\n                                                    if (this.state.gamesFoundSelected !== index) {\n                                                        this.setState({\n                                                            gamesFoundSelected: index,\n                                                            joinGamePassword: \"\",\n                                                            joinGameUsername: \"\",\n                                                            joinGameUsernamePassword: \"\",\n                                                        })\n                                                    }\n                                                }}\n                                                className=\"cursor list-group-item\">\n                                                {this.state.gamesFoundSelected !== index && (\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                                        <div className=\"d-flex flex-column\">\n                                                            <div>{game.auth.game_name}</div>\n                                                            <small>Crée par: {game.player_info[0].username}</small>\n                                                        </div>\n                                                        <i className=\"fas fa-arrow-circle-right\"/>\n                                                    </div>\n                                                )}\n                                                {this.state.gamesFoundSelected === index && (\n                                                    <div className=\"\">\n                                                        {game.game_state === \"INVITING_PLAYERS\" && (\n                                                            <div>\n                                                                <small>La partie n'est pas commencé, vous pouvez rejoindre...\n                                                                </small>\n                                                            </div>\n                                                        )}\n                                                        <form onSubmit={this.joinGame}>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Nom de la partie\n                                                            </small>\n                                                            <input required value={game.auth.game_name}\n                                                                   type=\"text\"\n                                                                   readOnly\n                                                                   className=\"form-control\"\n                                                                   placeholder=\"Nom de la partie\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Mot de passe de la partie\n                                                            </small>\n                                                            <input required value={this.state.joinGamePassword}\n                                                                   onChange={({target}) => this.setState({joinGamePassword: target.value})}\n                                                                   type=\"password\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Mot de passe de la partie\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Ton nom\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsername}\n                                                                   onChange={({target}) => this.setState({joinGameUsername: target.value})}\n                                                                   type=\"text\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Ton nom\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Ton mot de passe\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsernamePassword}\n                                                                   onChange={({target}) => this.setState({joinGameUsernamePassword: target.value})}\n                                                                   type=\"password\"\n                                                                   className=\"form-control mb-2\"\n                                                                   placeholder=\"Mot de passe de la partie\"/>\n                                                            <button type=\"submit\" className=\"btn btn-primary\">Rejoindre\n                                                            </button>\n                                                        </form>\n                                                    </div>\n                                                )}\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(NewGame)));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\n\nclass Player extends Component {\n    render() {\n        return (\n            <div\n                className={`${this.props.moving ? \"player-moving\" : \"player\"} d-flex justify-content-center align-items-center`}\n                style={{backgroundColor: !this.props.moving ? this.props.store.game.player_info[this.props.playerNumber].color : null}}\n            >\n                {this.props.moving && (\n                    <i className=\"fas fa-circle\"/>\n                )}\n                {!this.props.moving && (\n                    <b>{this.props.playerNumber + 1}</b>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Player));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\nimport Player from './Player';\n\n// import tiles from '../../server/monopoly';\n\nclass Card extends Component {\n    render() {\n        const boxShadow = {};\n        if (this.props.right) {\n            boxShadow.boxShadow = `-5px 0px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.left) {\n            boxShadow.boxShadow = `5px 0px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.top) {\n            boxShadow.boxShadow = `0px 5px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.bottom) {\n            boxShadow.boxShadow = `0px -5px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        return (\n            <div\n                // onClick={() => this.props.store.devMoveHere(this.props.position)}\n                style={{\n                    backgroundImage: `url(${this.props.store.game.board[this.props.position].url})`,\n                    ...boxShadow,\n                }}\n                className={`game-tile d-flex flex-wrap align-content-between justify-content-between ${this.props.store.game.board[this.props.position].mortgaged ? \"grey-card\" : \"\"}`}\n                onMouseLeave={this.props.store.clearMousedOverTile}\n                onMouseEnter={() => this.props.store.setMousedOverTile(this.props.position)}\n            >\n                {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.position).map((player, i) => {\n                    return <Player playerNumber={player.id} key={i}/>\n                })}\n                {this.props.store.game.animated_players_move.moves.filter(tileIndex => tileIndex === this.props.position).map((tileIndex, i) => {\n                    return <Player key={i} moving={true}/>\n                })}\n                {this.props.right && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-right\"/>}\n                {this.props.right && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-column left-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {/*{this.props.bottom && this.props.store.game.board[this.props.position].color && (*/}\n                {/*<div style={{backgroundColor: this.props.store.game.board[this.props.position].color}}*/}\n                {/*className=\"d-flex flex-row top-tiles-color\"/>*/}\n                {/*)}*/}\n                {this.props.bottom && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-bottom\"/>}\n                {this.props.bottom && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-row top-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {this.props.left && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-left\"/>}\n                {this.props.left && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-column right-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {this.props.top && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-top\"/>}\n                {this.props.top && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-row bottom-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Card));\n","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass NavTabs extends Component {\n    render() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"my_info\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"my_info\" ? \"active\" : \"\"}`}>Mes infos\n                    </div>\n                </li>\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"my_properties\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"my_properties\" ? \"active\" : \"\"}`}>Mes Propriétés\n                    </div>\n                </li>\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"trades\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"trades\" ? \"active\" : \"\"}`}>Mes échanges\n                    </div>\n                </li>\n                <li className=\"nav-item dropdown cursor\"\n                    onMouseEnter={() => this.props.changeDropDown({dropdownExpanded: true})}\n                    onMouseLeave={() => this.props.changeDropDown({dropdownExpanded: false})}\n                >\n                    <div className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\"\n                         aria-haspopup=\"true\" aria-expanded=\"false\">Joueurs\n                    </div>\n                    <div className={`dropdown-menu ${this.props.dropdownExpanded ? \"show\" : \"\"}`}>\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length === 1 && (\n                            <div className=\"dropdown-item\">Pas de joueurs</div>\n                        )}\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length > 1 && this.props.store.game.player_info.filter(player => player.state !== \"OUT\").map((player, index) => ({\n                            ...player,\n                            index\n                        })).filter(player => player.username !== this.props.store.gameAuthInfo.username).map(player =>\n                            <div onClick={() => this.props.selectTab({\n                                selectedTab: \"player_info\",\n                                selectedPlayer: player.id,\n                                dropdownExpanded: false,\n                            })} key={player.id} className=\"dropdown-item\">{player.username} - ({player.id + 1})</div>\n                        )}\n                    </div>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(NavTabs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MyInfoTab extends Component {\n    render() {\n        const [diceOne, diceTwo] = this.props.store.getPlayer.dice;\n        return (\n            <div className=\"info-tab d-flex flex-column\">\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Nom: </span>\n                            <span\n                                className=\"flex-fill\">({this.props.store.playerIndex + 1}) - {this.props.store.getPlayer.username}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Case: </span>\n                            <span className=\"flex-fill\">{this.props.store.playerTile.name}</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Argent: </span>\n                            <span className=\"flex-fill\">${this.props.store.getPlayer.money}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Net: </span>\n                            <span className=\"flex-fill\">${this.props.store.netWorth}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex flex-row justify-content-center align-items-center dice-content\">\n                    {diceOne === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceOne === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceOne === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceOne === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceOne === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceOne === 6 && <i className=\"fas fa-dice-six\"/>}\n                    <div className=\"space-between-dice\"/>\n                    {diceTwo === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceTwo === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceTwo === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceTwo === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceTwo === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceTwo === 6 && <i className=\"fas fa-dice-six\"/>}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(MyInfoTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MyPropertiesTab extends Component {\n    render() {\n        return (\n\n            <div className=\"properties-tab d-flex flex-row justify-content-around my-properties-table\">\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th className=\"text-center\" scope=\"col\">Nom</th>\n                        <th className=\"text-center\" scope=\"col\">Loyer</th>\n                        <th className=\"text-center\" scope=\"col\">Améliorations</th>\n                        <th className=\"text-center\" scope=\"col\">Hypothéqué?</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"\">\n                    {this.props.store.playersProperties(this.props.store.playerIndex).map((property, i) => {\n                        return (\n                            <tr key={i}>\n                                <th scope=\"row\">\n                                    <div className=\"my-properties-pic\"/>\n                                </th>\n                                <td className=\"text-center\">{property.name}</td>\n                                <td className=\"text-center\">{property.calculatedRent === parseInt(property.calculatedRent, 10) ? `$${property.calculatedRent}` : property.calculatedRent}</td>\n                                {property.upgrade ?\n                                    <td className=\"text-center upgrade-col\">\n                                        <div className=\"d-flex upgrade-bar\">\n                                            <div\n                                                className={`bar-component bar-component-left ${property.upgrades > 0 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 1 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 2 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 3 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 4 ? \"bar-component-filled\" : \"\"}`}/>\n                                        </div>\n                                        <div className=\"d-flex justify-content-center\">\n                                            <button\n                                                disabled={!property.canUpgrade}\n                                                className='btn btn-sm shadow-none'\n                                                style={{backgroundColor: \"transparent\"}}\n                                                onClick={() => this.props.store.upgradeProperty(property.index)}\n                                            >\n                                                <i className=\"far fa-arrow-alt-circle-up mr-2 cursor upgrade-prop\"/>\n                                            </button>\n                                            <button\n                                                disabled={!property.canDowngrade}\n                                                className='btn btn-sm shadow-none'\n                                                style={{backgroundColor: \"transparent\"}}\n                                                onClick={() => this.props.store.downgradeProperty(property.index)}\n                                            >\n                                                <i className=\"far fa-arrow-alt-circle-down ml-2 cursor upgrade-prop\"/>\n                                            </button>\n                                        </div>\n                                    </td>\n                                    :\n                                    <td/>\n                                }\n                                <td className=\"text-center\">\n                                    <input\n                                        disabled={(property.mortgaged && this.props.store.getPlayer.money - property.cost / 2 < 0) || this.props.store.getPlayer.state === \"NOT_TURN\" || !this.props.store.game.board.filter(el => el.group === property.group).every(el => el.upgrades === 0)}\n                                        onChange={() => this.props.store.mortgageProperty(property.index)}\n                                        checked={property.mortgaged} type=\"checkbox\" className=\"double\"\n                                    /> {property.mortgaged ? \"(-)\" : \"(+)\"}{property.cost / 2}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MyPropertiesTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Logs extends Component {\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    componentDidMount() {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    render() {\n        return (\n            <div ref=\"logs\" className=\"logs-tab\">\n                {this.props.store.game.logs.length === 0 && (\n                    <div>Pas d'actions...</div>\n                )}\n                {this.props.store.game.logs.map((log, i) => {\n                    return (\n                        <div key={i}>\n                            {log.log}\n                        </div>\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Logs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Actions extends Component {\n    render() {\n        if (this.props.store.game.game_state === \"ENDED\") {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    La partie est finie\n                </div>\n            )\n        }\n        if (this.props.store.game.game_state === \"INVITING_PLAYERS\" && this.props.store.playerIndex === 0) {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    <button type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.props.store.startGame}>\n                        Commencer\n                    </button>\n                </div>\n            )\n        }\n        return (\n            <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                {this.props.store.playerState !== \"OUT\" && this.props.store.playerState === \"START_TURN\" && this.props.store.getPlayer.jail_turns < 3 && (\n                    <button type=\"button\" onClick={this.props.store.startTurn}\n                            className=\"btn btn-primary\">Jeter les dés\n                    </button>\n                )}\n                {this.props.store.playerState === \"NOT_TURN\" && (\n                    <div>Tour de {this.props.store.currentPlayerTurn.username}.</div>\n                )}\n                {this.props.store.playerState === \"UTILITY_CHANCE_CARD\" && (\n                    <button type=\"button\" onClick={this.props.store.utilityChanceCardPayment}\n                            className=\"btn btn-primary\">Lance pour voir combien tu payes\n                    </button>\n                )}\n                {this.props.store.getPlayer.jail_state && this.props.store.playerState === \"START_TURN\" && (\n                    <button type=\"button\" onClick={this.props.store.payOutOfJail}\n                            className=\"btn btn-primary\">Payer 50\n                    </button>\n                )}\n                {(this.props.store.playerState === \"BUY_TILE\" || this.props.store.playerState === \"BUY_TILE_NO_MONEY\") && (\n                    <div className=\"accept-reject-tile-buy-div d-flex justify-content-center\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <button disabled={this.props.store.playerState === \"BUY_TILE_NO_MONEY\"} type=\"button\"\n                                    className=\"btn btn-primary buy-tile-button text-center\"\n                                    onClick={this.props.store.buyTile}>\n                                Acheter\n                            </button>\n                            <button type=\"button\" className=\"btn btn-primary reject-buy-tile-button\"\n                                    onClick={this.props.store.rejectBuyTile}>\n                                Non\n                            </button>\n                        </div>\n                    </div>\n                )}\n                {this.props.store.playerState === \"INCOME_TAX\" && (\n                    <div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.store.payPercentTax}>Payer\n                            10%\n                        </button>\n                        <button type=\"button\" className=\"btn btn-primary pay-flat-tax-button\"\n                                onClick={this.props.store.payFlatTax}>Payer\n                            $200\n                        </button>\n                    </div>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && (\n                    <button disabled={this.props.store.getPlayer.money < 0} type=\"button\"\n                            onClick={this.props.store.endTurn}\n                            className=\"btn btn-primary\">Fin du tour\n                    </button>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && this.props.store.getPlayer.money < 0 && (\n                    <button type=\"button\" onClick={this.props.store.giveUp}\n                            className=\"btn btn-primary\">Abandonner\n                    </button>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Actions));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass PlayersTab extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Nom: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.player_info[this.props.player].username} - ({this.props.player + 1})</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Case: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.board[this.props.store.game.player_info[this.props.player].position].name}</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Argent: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.game.player_info[this.props.player].money}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Net: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.netWorthOfPlayer(this.props.player)}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <button onClick={() => this.props.selectTab({selectedTab: \"player_trade\"})} type=\"button\"\n                            className=\"btn btn-primary\"\n                            disabled={this.props.store.getPlayer.state === \"NOT_TURN\"}>\n                        Échange\n                    </button>\n                </div>\n                <div\n                    className=\"other-players-properties-tab d-flex flex-row justify-content-around other-players-properties-table\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th/>\n                            <th className=\"text-center\" scope=\"col\">Nom</th>\n                            <th className=\"text-center\" scope=\"col\">Loyer</th>\n                            <th className=\"text-center\" scope=\"col\">Améliorations</th>\n                            <th className=\"text-center\" scope=\"col\">Hypothéqué?</th>\n                        </tr>\n                        </thead>\n                        <tbody className=\"\">\n                        {this.props.store.playersProperties(this.props.player).map((property, i) => {\n                            return (\n                                <tr key={i}>\n                                    <th scope=\"row\">\n                                        <div className=\"my-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                    </th>\n                                    <td className=\"text-center\">{property.name}</td>\n                                    <td className=\"text-center\">{property.calculatedRent === parseInt(property.calculatedRent, 10) ? `$${property.calculatedRent}` : property.calculatedRent}</td>\n                                    {property.upgrade ?\n                                        <td className=\"text-center upgrade-col\">\n                                            <div className=\"d-flex upgrade-bar-other-player justify-content-center\">\n                                                <div\n                                                    className={`bar-component bar-component-left ${property.upgrades > 0 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 1 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 2 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 3 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 4 ? \"bar-component-filled\" : \"\"}`}/>\n                                            </div>\n                                        </td>\n                                        :\n                                        <td/>\n                                    }\n                                    <td className=\"text-center\">\n                                        <input\n                                            disabled\n                                            checked={property.mortgaged} type=\"checkbox\" className=\"double\"\n                                        />\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(PlayersTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass TradeTab extends Component {\n    proposeTrade = () => {\n        this.props.selectTab({selectedTab: \"my_info\"});\n        this.props.store.createTrade(this.props.player, this.props.store.currentProposingTrade.givenProperties, this.props.store.currentProposingTrade.takenProperties, this.props.store.currentProposingTrade.moneyGiven, this.props.store.currentProposingTrade.moneyTaken);\n        this.props.store.refreshCurrentProposingTrade();\n    };\n\n    render() {\n        const yourCash = this.props.store.getPlayer.money;\n        const playersCash = this.props.store.game.player_info[this.props.player].money;\n        const playerIndex = this.props.store.playerIndex;\n        return (\n            <div className=\"d-flex flex-column text-center\">\n                <div className=\"d-flex flex-row justify-content-around main-trade-content\">\n                    <div className=\"d-flex flex-column text-center\">\n                        <div className=\"trade-money-label\">\n                            <u>Vous donnez {this.props.store.game.player_info[this.props.player].username}</u>\n                        </div>\n                        <div className=\"text-left\">\n                            Votre argent: ${yourCash}\n                        </div>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">$</span>\n                            </div>\n                            <input onChange={({target}) => {\n                                if (target.value > yourCash)\n                                    target.value = yourCash;\n                                this.props.store.setCurrentProposingTrade(\"moneyGiven\", target.value);\n                            }}\n                                   value={this.props.store.currentProposingTrade.moneyGiven === 0 ? \"\" : this.props.store.currentProposingTrade.moneyGiven}\n                                   type=\"number\"\n                                   min={0}\n                                   className=\"form-control\"\n                                   placeholder=\"Argent\"/>\n                        </div>\n                        <div className=\"player-properties-trade\">\n                            {this.props.store.playersProperties(playerIndex).filter(property => !property.hasHousesOnAny).map((property, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                        <div className=\"trade-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                        <div className=\"trade-prop-name\">{property.name}</div>\n                                        <div>\n                                            <input\n                                                onChange={() => {\n                                                    const index = this.props.store.currentProposingTrade.givenProperties.findIndex(el => el === property.index);\n                                                    if (index === -1) {\n                                                        this.props.store.setCurrentProposingTrade(\"givenProperties\", [...this.props.store.currentProposingTrade.givenProperties, property.index]);\n                                                    } else {\n                                                        this.props.store.setCurrentProposingTrade(\"givenProperties\", [...this.props.store.currentProposingTrade.givenProperties.slice(0, index), ...this.props.store.currentProposingTrade.givenProperties.slice(index + 1)]);\n                                                    }\n                                                }}\n                                                type=\"checkbox\" className=\"double\"/>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column text-center\">\n                        <div className=\"trade-money-label\">\n                            <u>Vous obtenez de {this.props.store.game.player_info[this.props.player].username}</u>\n                        </div>\n                        <div className=\"text-left\">\n                            Son argent: ${playersCash}\n                        </div>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">$</span>\n                            </div>\n                            <input onChange={({target}) => {\n                                if (target.value > playersCash)\n                                    target.value = playersCash;\n                                this.props.store.setCurrentProposingTrade(\"moneyTaken\", target.value);\n                            }}\n                                   value={this.props.store.currentProposingTrade.moneyTaken === 0 ? \"\" : this.props.store.currentProposingTrade.moneyTaken}\n                                   type=\"number\"\n                                   min={0}\n                                   className=\"form-control\"\n                                   placeholder=\"Argent\"/>\n                        </div>\n                        <div className=\"player-properties-trade\">\n                            {this.props.store.playersProperties(this.props.player).map((property, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                        <div className=\"trade-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                        <div className=\"trade-prop-name\">{property.name}</div>\n                                        <div>\n                                            <input\n                                                onChange={() => {\n                                                    const index = this.props.store.currentProposingTrade.takenProperties.findIndex(el => el === property.index);\n                                                    if (index === -1) {\n                                                        this.props.store.setCurrentProposingTrade(\"takenProperties\", [...this.props.store.currentProposingTrade.takenProperties, property.index]);\n                                                    } else {\n                                                        this.props.store.setCurrentProposingTrade(\"takenProperties\", [...this.props.store.currentProposingTrade.takenProperties.slice(0, index), ...this.props.store.currentProposingTrade.takenProperties.slice(index + 1)]);\n                                                    }\n                                                }}\n                                                type=\"checkbox\" className=\"double\"/>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <button\n                        disabled={(this.props.store.currentProposingTrade.moneyTaken === 0 || this.props.store.currentProposingTrade.moneyTaken === \"0\") && (this.props.store.currentProposingTrade.moneyGiven === 0 || this.props.store.currentProposingTrade.moneyGiven === \"0\") && this.props.store.currentProposingTrade.takenProperties.length === 0 && this.props.store.currentProposingTrade.givenProperties.length === 0}\n                        onClick={this.proposeTrade} type=\"button\"\n                        className=\"btn btn-primary\">Proposer un échange\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(TradeTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass TradesTab extends Component {\n    state = {\n        selectedTrade: 0,\n    };\n\n    componentDidMount() {\n        if (this.props.store.game.player_info && this.props.store.game.trades.length > 0) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            this.setState({selectedTrade: firstIndex});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.selectedTrade === -1) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            if (firstIndex !== -1) {\n                this.setState({selectedTrade: firstIndex});\n            }\n        }\n    }\n\n\n    render() {\n        if (this.props.store.game.player_info && this.props.store.game.trades.length > 0) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            if (firstIndex === -1 || this.state.selectedTrade === -1) {\n                return <div className=\"text-center\">Pas d'échanges</div>\n            }\n            const initiatingPlayer = this.props.store.game.player_info[this.props.store.game.trades[this.state.selectedTrade].initiating_player];\n            const tradingPlayer = this.props.store.game.player_info[this.props.store.game.trades[this.state.selectedTrade].trading_player];\n            const areYouInitiating = this.props.store.game.trades[this.state.selectedTrade].initiating_player === playerIndex;\n            const rightProperties = areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].taken_properties : this.props.store.game.trades[this.state.selectedTrade].given_properties;\n            const leftProperties = areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_properties : this.props.store.game.trades[this.state.selectedTrade].taken_properties;\n            const initiatingPlayerHasAllProperties = this.props.store.game.trades[this.state.selectedTrade].given_properties.every(index => {\n                const property = this.props.store.game.board[index];\n                const hasHousesOnAny = this.props.store.game.board.filter(el => el.group === this.props.store.game.board[index].group && el.upgrade && el.upgrades > 0).length > 0;\n                return property.player === this.props.store.game.trades[this.state.selectedTrade].initiating_player && !hasHousesOnAny;\n            });\n            const tradingPlayerHasAllProperties = this.props.store.game.trades[this.state.selectedTrade].taken_properties.every(index => {\n                const property = this.props.store.game.board[index];\n                const hasHousesOnAny = this.props.store.game.board.filter(el => el.group === this.props.store.game.board[index].group && el.upgrade && el.upgrades > 0).length > 0;\n                return property.player === this.props.store.game.trades[this.state.selectedTrade].trading_player && !hasHousesOnAny;\n            });\n            return (\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column text-center\">\n                        <u>Échanges:</u>\n                        <ul ref=\"trades\" className=\"list-group pending-trades\">\n                            {this.props.store.game.trades.map((trade, i) => ({\n                                ...trade,\n                                index: i\n                            })).filter(trade => trade.state === \"PROPOSED\" && (trade.initiating_player === playerIndex || trade.trading_player === playerIndex)).map((trade, i) => {\n                                return (\n                                    <li key={i}\n                                        onClick={() => this.setState({selectedTrade: trade.index})}\n                                        className={`list-group-item list-group-item-action ${trade.index === this.state.selectedTrade ? \"active\" : \"\"}`}>\n                                        De {this.props.store.game.player_info[trade.initiating_player].username}\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                            <div className=\"d-flex flex-row justify-content-around main-trade-content\">\n                                <div className=\"d-flex flex-column text-center trade-view-left\">\n                                    <div className=\"trade-money-label\">\n                                        <u>{areYouInitiating ? `Vous donnez à ${tradingPlayer.username}` : `Vous donnez à ${initiatingPlayer.username}`}</u>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">$</span>\n                                        </div>\n                                        <input type=\"number\"\n                                               readOnly\n                                               value={areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_money : this.props.store.game.trades[this.state.selectedTrade].taken_money}\n                                               className=\"form-control\"\n                                               placeholder=\"Trade Money\"/>\n                                    </div>\n                                    <div className=\"player-properties-trade\">\n                                        {leftProperties.map((i) => {\n                                            const property = this.props.store.game.board[i];\n                                            return (\n                                                <div key={i}\n                                                     className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                                    <div className=\"trade-properties-pic\" style={{\n                                                        backgroundImage: `url(${property.url})`,\n                                                    }}/>\n                                                    <div className=\"trade-prop-name\">{property.name}</div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column text-center trade-view-right\">\n                                    <div className=\"trade-money-label\">\n                                        <u>{areYouInitiating ? `Vous gagnez de ${tradingPlayer.username}` : `Vous gagnez de ${initiatingPlayer.username}`}</u>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">$</span>\n                                        </div>\n                                        <input type=\"number\"\n                                               readOnly\n                                               value={!areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_money : this.props.store.game.trades[this.state.selectedTrade].taken_money}\n                                               className=\"form-control\"\n                                               placeholder=\"Trade Money\"/>\n                                    </div>\n                                    <div className=\"player-properties-trade\">\n                                        {rightProperties.map((i) => {\n                                            const property = this.props.store.game.board[i];\n                                            return (\n                                                <div key={i}\n                                                     className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                                    <div className=\"trade-properties-pic\" style={{\n                                                        backgroundImage: `url(${property.url})`,\n                                                    }}/>\n                                                    <div className=\"trade-prop-name\">{property.name}</div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                {playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player &&\n                                (\n                                    <button\n                                        disabled={this.props.store.game.player_info[playerIndex].state === \"NOT_TURN\" || !tradingPlayerHasAllProperties || !initiatingPlayerHasAllProperties || tradingPlayer.money < this.props.store.game.trades[this.state.selectedTrade].taken_money || initiatingPlayer.money < this.props.store.game.trades[this.state.selectedTrade].given_money}\n                                        onClick={() => {\n                                            this.props.store.acceptTrade(this.state.selectedTrade);\n                                            this.setState({selectedTrade: firstIndex});\n                                            this.refs.trades.scrollTop = 0;\n                                        }} type=\"button\"\n                                        className=\"btn btn-primary\"\n                                        style={{marginRight: 10}}\n                                    >Accepter\n                                    </button>\n                                )}\n                                <button\n                                    disabled={this.props.store.game.player_info[playerIndex].state === \"NOT_TURN\"}\n                                    onClick={() => {\n                                        playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player ? this.props.store.rejectTrade(this.state.selectedTrade) : this.props.store.cancelTrade(this.state.selectedTrade);\n                                        this.setState({selectedTrade: firstIndex});\n                                        this.refs.trades.scrollTop = 0;\n                                    }}\n                                    type=\"button\"\n                                    className=\"btn btn-primary\">{`${playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player ? \"Rejeter\" : \"Annuler\"}`}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (<div className=\"text-center\">Pas d'échanges</div>);\n        }\n    }\n}\n\nexport default inject(\"store\")(observer(TradesTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MousedOverTileTab extends Component {\n    state = {};\n\n    render() {\n        const tile = this.props.store.game.board[this.props.store.mousedOverTile];\n        const playersOnTile = this.props.store.game.player_info.map((player, i) => ({\n            ...player,\n            index: i\n        })).filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.store.mousedOverTile);\n        let relatedTiles = [];\n        if (tile.type === \"rr\" || tile.type === \"utility\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.type === this.props.store.game.board[this.props.store.mousedOverTile].type && i !== this.props.store.mousedOverTile);\n        } else if (tile.type === \"property\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.group === this.props.store.game.board[this.props.store.mousedOverTile].group && i !== this.props.store.mousedOverTile);\n        }\n        return (\n            <div className=\"d-flex flex-column align-items-center justify-content-center tile-info-container\">\n                <div className=\"d-flex flex-row\">\n                    <div className=\"d-flex flex-column align-items-center justify-content-center\">\n                        <div className=\"tile-info-image-div\" style={{\n                            backgroundImage: `url(${tile.url})`,\n                        }}/>\n                        <div className=\"tile-info-name\">\n                            {tile.name}\n                        </div>\n                    </div>\n                    {(tile.type === \"property\" || tile.type === \"rr\" || tile.type === \"utility\") && (\n                        <div className=\"d-flex flex-row align-items-center justify-content-center\">\n                            {relatedTiles.map((relTile, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"d-flex flex-column align-items-center justify-content-center\">\n                                        <div className=\"rel-tile-info-image-div\" style={{\n                                            backgroundImage: `url(${relTile.url})`,\n                                        }}/>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )}\n                </div>\n                {(tile.type === \"chance\" || tile.type === \"chest\") && (\n                    <div>\n                        Atteri ici ou pioche une carte\n                    </div>\n                )}\n                {(tile.type === \"go\") && (\n                    <div>\n                        Passe ou atteri et gagne $200.\n                    </div>\n                )}\n                {(tile.type === \"lux-tax\") && (\n                    <div>\n                        Paye $75.\n                    </div>\n                )}\n                {(tile.type === \"income-tax\") && (\n                    <div>\n                        Paye $200 ou 10% de ton revenu net\n                    </div>\n                )}\n                {(tile.type === \"property\" || tile.type === \"utility\" || tile.type === \"rr\") && (\n                    <div className=\"d-flex flex-row tile-info-property justify-content-between\">\n                        <div className=\"d-flex flex-column tile-info-rents\">\n                            <div className=\"d-flex justify-content-between\">\n                                <div>Prix:</div>\n                                <div>${tile.cost}</div>\n                            </div>\n                            {tile.owned && (\n                                <div className=\"d-flex justify-content-between\">\n                                    <div>Loyer actuel:</div>\n                                    <div>${this.props.store.calcRentCostTile(this.props.store.mousedOverTile, true)}</div>\n                                </div>\n                            )}\n                        </div>\n                        <div className=\"d-flex flex-column justify-content-between tile-info-upgrades\">\n                            {tile.type === \"property\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Coût de financement:</div>\n                                        <div>${tile.upgrade}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>1ère Maison:</div>\n                                        <div>${tile.rent[1]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>2ème Maison:</div>\n                                        <div>${tile.rent[2]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>3ème Maison:</div>\n                                        <div>${tile.rent[3]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>4ère Maison:</div>\n                                        <div>${tile.rent[4]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Hotel:</div>\n                                        <div>${tile.rent[5]}</div>\n                                    </div>\n                                </div>\n                            )}\n                            {tile.type === \"rr\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Un propriétaire:</div>\n                                        <div>$25</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Deux propriétaires:</div>\n                                        <div>$50</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Trois propriétaires:</div>\n                                        <div>$100</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Quatre propriétaires:</div>\n                                        <div>$200</div>\n                                    </div>\n                                </div>\n                            )}\n                            {tile.type === \"utility\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Un propriétaire:</div>\n                                        <div>$Dé×4</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Deux propriétaires:</div>\n                                        <div>$Dé×10</div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column mt-3 players-on-tile\">\n                    {playersOnTile.length > 0 ?\n                        <div>\n                            <span>Joueurs sur la case:</span>\n                            <ul>\n                                {playersOnTile.map((player, i) => {\n                                    return <li key={i}>{player.username} - ({player.index + 1})</li>\n                                })}\n                            </ul>\n                        </div>\n                        :\n                        <span>Pas de joueur ici.</span>\n                    }\n                    {tile.owned ?\n                        <div>\n                            <span>Appartient à: {this.props.store.game.player_info[tile.player].username}</span>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MousedOverTileTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport NavTabs from './NavTabs';\nimport MyInfoTab from './MyInfoTab';\nimport MyPropertiesTab from './MyPropertiesTab';\nimport Logs from './Logs';\nimport Actions from './Actions';\nimport PlayersTab from './PlayersTab';\nimport TradeTab from './TradeTab';\nimport TradesTab from './TradesTab';\nimport MousedOverTileTab from './MousedOverTileTab';\n\nclass MainView extends Component {\n    state = {\n        dropdownExpanded: false,\n        selectedTab: \"my_info\",\n        selectedPlayer: 1,\n    };\n\n    selectTab = (state) => {\n        this.setState(state);\n    };\n    changeDropDown = (state) => {\n        this.setState(state);\n    };\n\n    render() {\n        return (\n            <div className=\"main-view\">\n                {this.props.store.game && this.props.store.game.game_state !== \"NOT_STARTED\" &&\n                <div className=\"main-view-content\">\n                    {this.props.store.mousedOverTile !== null && (\n                        <MousedOverTileTab/>\n                    )}\n                    {this.props.store.mousedOverTile === null && (\n                        <>\n                            <NavTabs\n                                dropdownExpanded={this.state.dropdownExpanded}\n                                changeDropDown={this.changeDropDown}\n                                selectTab={this.selectTab}\n                                selectedTab={this.state.selectedTab}\n                            />\n                            {this.state.selectedTab === \"my_info\" && (\n                                <>\n                                    <MyInfoTab/>\n                                    <Actions/>\n                                    <Logs/>\n                                </>\n                            )}\n                            {this.state.selectedTab === \"my_properties\" && (\n                                <MyPropertiesTab/>\n                            )}\n                            {this.state.selectedTab === \"player_info\" && (\n                                <PlayersTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                            {this.state.selectedTab === \"player_trade\" && (\n                                <TradeTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                            {this.state.selectedTab === \"trades\" && (\n                                <TradesTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                        </>\n                    )}\n\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MainView));","import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport MainView from \"./middleScreen/MainView\";\nimport \"./App.css\";\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\n\nclass Board extends Component {\n    componentDidMount() {\n        let gameInfo = localStorage.getItem(\"previous_game\");\n        if (!gameInfo) {\n            this.props.history.push(\"/start\");\n            return;\n        }\n        gameInfo = JSON.parse(gameInfo);\n        this.props.store.setGameAuthInfo(gameInfo);\n        this.props.store.connectToGame();\n    }\n\n    render() {\n        return (\n            this.props.store.inGame ? \n                <div>\n                    <div className=\"player-list\">\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length > 0 && this.props.store.game.player_info.filter(player => player.state !== \"OUT\").map((player, index) => (\n                            <h4 className=\"player-name\" key={player.id}><span class=\"dot\" style={{backgroundColor: player.color}}></span>  {player.username} : ${player.money}</h4>\n                        ))}\n                    </div>\n                    <div\n                        style={{outline: `2px solid ${this.props.store.getPlayer.state !== \"NOT_TURN\" ? \"#61c86a\" : \"#c8464b\"}`}}\n                        className=\"d-flex flex-column main-box\">\n                        <MainView/>\n                        <div className=\"d-flex flex-row\">\n                            <Card position={20}/>\n                            <Card bottom={true} position={21}/>\n                            <div/>\n                            <Card bottom={true} position={22}/>\n                            <div/>\n                            <Card bottom={true} position={23}/>\n                            <Card bottom={true} position={24}/>\n                            <Card bottom={true} position={25}/>\n                            <Card bottom={true} position={26}/>\n                            <Card bottom={true} position={27}/>\n                            <Card bottom={true} position={28}/>\n                            <Card bottom={true} position={29}/>\n                            <Card position={30}/>\n                        </div>\n                        <div className=\"main-row-here d-flex flex-row justify-content-between\">\n                            <Card right={true} position={19}/>\n                            <Card left={true} position={31}/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between\">\n                            <Card right={true} position={18}/>\n                            <Card left={true} position={32}/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between\">\n                            <Card right={true} position={17}/>\n                            <Card left={true} position={33}/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between\">\n                            <Card right={true} position={16}/>\n                            <Card left={true} position={34}/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between\">\n                            <Card right={true} position={15}/>\n                            <Card left={true} position={35}/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between\">\n                            <Card right={true} position={14}/>\n                            <Card left={true} position={36}/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between\">\n                            <Card right={true} position={13}/>\n                            <Card left={true} position={37}/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between\">\n                            <Card right={true} position={12}/>\n                            <Card left={true} position={38}/>\n                        </div>\n                        <div className=\"d-flex flex-row justify-content-between\">\n                            <Card right={true} position={11}/>\n                            <Card left={true} position={39}/>\n                        </div>\n                        <div className=\"d-flex flex-row\">\n                            <Card position={10}/>\n                            <Card top={true} position={9}/>\n                            <Card top={true} position={8}/>\n                            <Card top={true} position={7}/>\n                            <Card top={true} position={6}/>\n                            <Card top={true} position={5}/>\n                            <Card top={true} position={4}/>\n                            <Card top={true} position={3}/>\n                            <Card top={true} position={2}/>\n                            <Card top={true} position={1}/>\n                            <Card position={0}/>\n                        </div>\n                    </div>\n                </div>\n                :\n                <div style={{margin: \"auto\", textAlign: \"center\", fontSize: 80}}><i\n                    className=\"fas fa-spinner  fa-spin\"/></div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(Board)));\n","import React, {Component} from 'react';\nimport \"./App.css\";\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport Board from \"./Board\"\n\n\nclass MainApp extends Component {\n    state = {\n        selectedTab: this.props.history.location.pathname\n    };\n\n    render() {\n        return (\n            <div className=\"main d-flex flex-column\">\n                <Board/>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(MainApp)));\n","import React, {Component} from 'react';\nimport NewGame from \"./NewGame\";\nimport MainApp from \"./MainApp\";\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\nconst RedirectHome = () => {\n    return (\n        <Redirect to=\"/start\"/>\n    )\n};\n\nclass App extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/play-game\" component={MainApp}/>\n                <Route exact path=\"/start\" component={NewGame}/>\n                <Route path=\"/\" component={RedirectHome}/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","import {decorate, configure, observable, action, computed, runInAction} from 'mobx'\nimport io from 'socket.io-client';\n\nconfigure({enforceActions: \"observed\"});\nconst URL = process.env.REACT_APP_URL ? process.env.REACT_APP_URL : 'https://monopoly.cassimkhouani.com';\n\nclass Store {\n    socket = io(`${URL}/`, {forceNew: true});\n    mousedOverTile = null;\n    game = {};\n    selectedTab = \"my_info\";\n    gameAuthInfo = {};\n    connectToGame = () => {\n        this.socket.emit('join_game', this.gameAuthInfo);\n    };\n    setGameAuthInfo = (gameInfo) => {\n        this.gameAuthInfo = gameInfo;\n    };\n    updatePlayerJailRolls = (playerIndex) => {\n        this.socket.emit(\"update_player_jail_rolls\", {\n            game_id: this.gameAuthInfo.game_id,\n            jail_turns: this.game.player_info[playerIndex].jail_turns,\n            player_index: playerIndex,\n        });\n    };\n    startTurn = () => {\n        if (!this.playerJailState) {\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            this.movePlayer();\n            this.checkTile();\n        } else {\n            const playerIndex = this.playerIndex;\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setJailState(false);\n                this.syncPlayerJailState();\n                this.game.player_info[playerIndex].jail_turns = 0;\n            } else {\n                this.game.player_info[playerIndex].jail_turns += 1;\n            }\n            if(this.game.player_info[playerIndex].jail_turns >= 3){\n                this.setJailState(false);\n                this.syncPlayerJailState();\n                this.game.player_info[playerIndex].jail_turns = 0;\n            }\n            this.updatePlayerJailRolls(playerIndex);\n            this.setPlayerState(\"END_OF_TURN\");\n            this.syncPlayerState();\n        }\n    };\n    updatePlayerMoney = (playerIndex) => {\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n    payOutOfJail = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 50;\n        this.updatePlayerMoney(playerIndex);\n        this.setJailState(false);\n        this.syncPlayerJailState();\n        this.game.player_info[playerIndex].jail_turns = 0;\n        this.updatePlayerJailRolls(playerIndex);\n        this.setPlayerState(\"END_OF_TURN\");\n        this.syncPlayerState();\n    };\n    movePlayerDev = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = position;\n    };\n    movePlayerToTile = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 100);\n        this.game.player_info[playerIndex].position = position;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: position,\n            player_index: playerIndex,\n        });\n    };\n    devMoveHere = (tile_position) => {\n        this.setPlayerState(\"ROLLING\");\n        this.rollDice();\n        this.movePlayerDev(tile_position);\n        this.checkTile();\n    };\n    mergeTradeData = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.player_info[trade.initiating_player].money -= parseInt(trade.given_money);\n        this.game.player_info[trade.initiating_player].money += parseInt(trade.taken_money);\n        this.game.player_info[trade.trading_player].money += parseInt(trade.given_money);\n        this.game.player_info[trade.trading_player].money -= parseInt(trade.taken_money);\n        trade.given_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.trading_player;\n        });\n        trade.taken_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.initiating_player;\n        });\n    };\n    acceptTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.mergeTradeData(tradeIndex);\n        this.game.trades[tradeIndex].state = \"ACCEPTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} a accepté un échange de ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"accept_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n            trade,\n        });\n\n    };\n    rejectTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"REJECTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} a rejeté un échange de ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"reject_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    cancelTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"CANCELED\";\n        this.addToLog(`${this.game.player_info[trade.initiating_player].username} a annulé un échange de ${this.game.player_info[trade.trading_player].username}`);\n        this.socket.emit(\"cancel_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    giveUp = () => {\n        const playerIndex = this.playerIndex;\n        this.addToLog(`${this.game.player_info[playerIndex].username} a arrêté.`);\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[playerIndex].state = \"OUT\";\n        if (this.game.player_info.filter(player => player.state !== \"OUT\").length === 1) {\n            const winningPlayer = this.game.player_info.find(player => player.state !== \"OUT\");\n            this.socket.emit(\"end_game\", {\n                game_id: this.gameAuthInfo.game_id,\n                winning_player: winningPlayer,\n            });\n            this.game.game_state = \"ENDED\";\n        } else {\n            const newBoard = this.game.board.map(tile => {\n                if (tile.player === playerIndex) {\n                    return {\n                        ...tile,\n                        owned: false,\n                        player: null,\n                        mortgaged: false,\n                        upgrades: 0,\n                    }\n                } else {\n                    return tile;\n                }\n            });\n            this.game.board = newBoard;\n            this.socket.emit(\"player_gives_up\", {\n                game_id: this.gameAuthInfo.game_id,\n                player_index: playerIndex,\n                next_player: newCurrentPlayer,\n                new_board: newBoard,\n            });\n        }\n    };\n    createTrade = (tradingPlayer, givenProperties, takenProperties, givenMoney, takenMoney) => {\n        this.selectedTab = \"my_info\";\n        const initiatingPlayer = this.playerIndex;\n        const trade = {\n            initiating_player: initiatingPlayer,\n            trading_player: tradingPlayer,\n            given_properties: givenProperties,\n            taken_properties: takenProperties,\n            given_money: givenMoney,\n            taken_money: takenMoney,\n            state: \"PROPOSED\",\n        };\n        this.addToLog(`${this.game.player_info[initiatingPlayer].username} a commencé un échange avec ${this.game.player_info[tradingPlayer].username}`);\n        this.game.trades.push(trade);\n        this.socket.emit(\"create_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade\n        });\n    };\n    payPlayer = () => {\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        const rent = this.calcRentCostTile(this.game.player_info[givingPlayer].position, false);\n        this.addToLog(`${this.getPlayer.username} paye ${this.game.player_info[receivingPlayer].username} $${rent} pour avoir visité ${this.playerTile.name}.`);\n        this.game.player_info[receivingPlayer].money += rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].money -= rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].pay_multiplier = 1;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n    };\n    addToLog = (log) => {\n        const newLog = {log: log, time: new Date()};\n        this.game.logs.push(newLog);\n        this.socket.emit(\"add_log\", {\n            game_id: this.gameAuthInfo.game_id,\n            log: newLog,\n        });\n    };\n    checkTile = () => {\n        const tile = this.game.board[this.getPlayer.position];\n        const playerIndex = this.playerIndex;\n        if (this.getPlayer.dice[0] !== this.getPlayer.dice[1]) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.checkAndUpdateDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.jail_state) {\n            return;\n        }\n        this.addToLog(`${this.getPlayer.username} a fait ${this.diceSum} (${this.getPlayer.dice[0]} - ${this.getPlayer.dice[1]}). Case ${tile.name}.`);\n        this.checkIfPlayerPassedGo();\n        if (tile.owned && tile.player !== playerIndex) {\n            this.payPlayer();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        } else if (!tile.owned && (tile.type === \"property\" || tile.type === \"rr\" || tile.type === \"utility\")) {\n            if (this.getPlayer.money < this.game.board[this.getPlayer.position].cost) {\n                this.setPlayerState(\"BUY_TILE_NO_MONEY\");\n            } else {\n                this.setPlayerState(\"BUY_TILE\");\n            }\n        } else if (tile.type === \"lux-tax\") {\n            this.payLuxuryTax();\n        } else if (tile.type === \"parking\") {\n            this.game.player_info[playerIndex].money += 100;\n            this.addToLog(`${this.getPlayer.username} est au parking et gagne $100 !`);\n            this.socket.emit(\"update_player_money\", {\n                game_id: this.gameAuthInfo.game_id,\n                player_money: this.game.player_info[playerIndex].money,\n                player_index: playerIndex,\n            });\n            this.setPlayerState(\"END_OF_TURN\");\n        } else if (tile.type === \"chance\" || tile.type === \"chest\") {\n            this.handleModifierCard(tile.type);\n        } else if (tile.type === \"income-tax\") {\n            this.setPlayerState(\"INCOME_TAX\");\n        } else if (tile.type === \"go-to-jail\") {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n            this.goToJail(playerIndex);\n            this.addToLog(`${this.getPlayer.username} est en prison`);\n        } else {\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        }\n        this.syncPlayerState();\n    };\n    utilityChanceCardPayment = () => {\n        const roll = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1\n        ];\n        const rent = (roll[0] + roll[1]) * 10;\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        this.game.player_info[receivingPlayer].money += rent;\n        this.game.player_info[givingPlayer].money -= rent;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    handleModifierCard = (type) => {\n        const playerIndex = this.playerIndex;\n        let newCardIndex = 0;\n        let newCard = {};\n        if (type === \"chance\") {\n            newCardIndex = this.game.last_chance_card + 1 === this.game.chance.length ? 0 : this.game.last_chance_card + 1;\n            this.game.last_chance_card = newCardIndex;\n            newCard = this.game.chance[newCardIndex];\n        } else {\n            newCardIndex = this.game.last_chest_card + 1 === this.game.chest.length ? 0 : this.game.last_chest_card + 1;\n            this.game.last_chest_card = newCardIndex;\n            newCard = this.game.chest[newCardIndex];\n        }\n        this.addToLog(`${this.getPlayer.username} a pris: ${newCard.name}`);\n        if (newCard.type === \"simple_move\") {\n            if (newCard.position === 0) {\n                this.playerPassedGoMoneyIncrease();\n            } else if (this.getPlayer.position > newCard.position) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(newCard.position);\n            this.checkTile();\n        } else if (newCard.type === \"nearest_utility\") {\n            const utility = this.findNearestType(\"utility\");\n            if (this.getPlayer.position > utility) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(utility);\n\n            if (this.game.board[utility].owned && this.game.board[utility].player !== playerIndex) {\n                this.setPlayerState(\"UTILITY_CHANCE_CARD\");\n                this.syncPlayerState();\n            } else {\n                this.checkTile();\n            }\n        } else if (newCard.type === \"nearest_rr\") {\n            this.game.player_info[playerIndex].pay_multiplier = 2;\n            const rail_road = this.findNearestType(\"rr\");\n            if (this.getPlayer.position > rail_road) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(rail_road);\n            this.checkTile();\n        } else if (newCard.type === \"simple_bank_pay\") {\n            this.game.player_info[playerIndex].money += newCard.amount;\n            this.updatePlayerMoney(playerIndex);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        } else if (newCard.type === \"move_amount\") {\n            this.movePlayerToTile(this.getPlayer.position + newCard.amount);\n            this.checkTile();\n        } else if (newCard.type === \"go_to_jail\") {\n            this.goToJail(playerIndex);\n        } else if (newCard.type === \"pay_all_players\") {\n            this.payAllPlayers(newCard.amount);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        }\n\n        if (type === \"chance\") {\n            this.socket.emit(\"increase_chance_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chance_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        } else {\n            this.socket.emit(\"increase_chest_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chest_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        }\n    };\n    payAllPlayers = (amount) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money = this.game.player_info[playerIndex].money - (amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n        this.game.player_info.forEach((player, index) => {\n            if (index !== playerIndex) {\n                player.money += amount;\n            }\n        });\n        this.socket.emit(\"pay_all_players\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            amount: amount,\n        });\n    };\n    findNearestType = (type) => {\n        let nearest = this.game.board.findIndex((tile, index) => {\n            if (index < this.getPlayer.position) {\n                return false;\n            }\n            return tile.type === type;\n        });\n        if (nearest === -1) { // no utilities in front\n            nearest = this.game.board.findIndex((tile) => {\n                return tile.type === type;\n            });\n        }\n        return nearest;\n    };\n    payLuxuryTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 75;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} paye $75 !`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payPercentTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= Math.ceil(this.netWorth * .10);\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} choisi de payer 10% de son revenu net (${Math.ceil(this.netWorth * .10)}).`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payFlatTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 200;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} choisi de payer $200 dollars.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    goToJail = (playerIndex) => {\n        this.game.player_info[playerIndex].position = 10;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: 10,\n            player_index: playerIndex,\n        });\n        this.setJailState(true);\n        this.syncPlayerJailState();\n        this.setPlayerState(\"END_OF_TURN\");\n    };\n    checkAndUpdateDoublesRolled = (playerIndex) => {\n        this.game.player_info[playerIndex].doubles_rolled += 1;\n        if (this.game.player_info[playerIndex].doubles_rolled === 3) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.goToJail(playerIndex);\n        } else {\n            // this.setPlayerState(\"START_TURN\");\n        }\n        this.updatePlayerDoublesRolled(playerIndex);\n    };\n    updatePlayerDoublesRolled = (playerIndex) => {\n        this.socket.emit(\"update_players_doubles\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            doubles_rolled: this.getPlayer.doubles_rolled,\n        });\n    };\n\n    playerPassedGoMoneyIncrease = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += 200;\n        this.addToLog(`${this.getPlayer.username} passe GO et gagne $200!`);\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n    checkIfPlayerPassedGo = () => {\n        if (this.getPlayer.position - this.diceSum < 0) { //passed or on go\n            this.playerPassedGoMoneyIncrease();\n        }\n    };\n    syncPlayerJailState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_jail_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            jail_state: this.playerJailState,\n        });\n    };\n    syncPlayerState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            state: this.playerState,\n        });\n    };\n    buyTile = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[this.getPlayer.position].cost;\n        this.game.board[this.getPlayer.position].owned = true;\n        this.game.board[this.getPlayer.position].player = playerIndex;\n        this.addToLog(`${this.getPlayer.username} achète ${this.playerTile.name} pour $${this.playerTile.cost}.`);\n        this.socket.emit(\"buy_tile\", {\n            game_id: this.gameAuthInfo.game_id,\n            tile_index: this.getPlayer.position,\n            tile_bought: this.game.board[this.getPlayer.position],\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    rejectBuyTile = () => {\n        this.addToLog(`${this.getPlayer.username} refuse de payer ${this.playerTile.name}.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.socket.emit('initiate_auction', {\n            game_id: this.gameAuthInfo.game_id,\n            tile: this.getPlayer.position,\n        });\n        this.game.auction = true;\n        this.game.auction_tile = this.getPlayer.position;\n        this.syncPlayerState();\n    };\n    endTurn = () => {\n        this.refreshCurrentProposingTrade();\n        this.setPlayerState(\"NOT_TURN\");\n        const playerIndex = this.playerIndex;\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[newCurrentPlayer].state = \"START_TURN\";\n        this.socket.emit('end_turn', {\n            game_id: this.gameAuthInfo.game_id,\n            next_player: newCurrentPlayer,\n            old_player: playerIndex,\n        });\n    };\n    startGame = () => {\n        this.game.game_state = \"STARTED\";\n        this.socket.emit('start_game', {\n            game_id: this.gameAuthInfo.game_id,\n        });\n    };\n    movePlayer = () => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = 0;\n        while (i <= this.diceSum) {\n            this.game.animated_players_move.moves.push(this.circularAdd(this.game.player_info[playerIndex].position, i, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = this.circularAdd(this.game.player_info[playerIndex].position, this.diceSum, 39);\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: this.game.player_info[playerIndex].position,\n            player_index: playerIndex,\n        });\n    };\n    upgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[index].upgrade;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades += 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n    downgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += this.game.board[index].upgrade / 2;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades -= 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n\n    constructor() {\n        this.socket.on(\"game_info\", (data) => {\n            console.log(\"game info\", data);\n            if (data) {\n                this.setGameInfo(data);\n            }\n        });\n        this.socket.on('reconnect', () => {\n            console.log(\"reconnecting\");\n            this.connectToGame();\n        });\n        this.socketActions();\n\n    }\n\n    socketActions = () => {\n        this.socket.on(\"player_moved\", data => {\n            console.log(\"player_moved\", data);\n            runInAction(() => {\n                this.game.player_info[data.player].position = data.position;\n            });\n        });\n        this.socket.on(\"tile_bought\", data => {\n            console.log(\"tile_bought\", data);\n            runInAction(() => {\n                this.game.player_info[data.player.player_index].money = data.player.player_money;\n                this.game.board[data.tile.tile_index] = data.tile.tile;\n            });\n        });\n        this.socket.on(\"player_money_updated\", data => {\n            console.log(\"player_money_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = data.player_money;\n            });\n        });\n        this.socket.on(\"turn_ended\", data => {\n            console.log(\"turn_ended\", data);\n            runInAction(() => {\n                if (data.next_player === this.playerIndex) {\n                    if (this.game.player_info[this.playerIndex].state === \"OUT\") {\n                        this.endTurn();\n                    } else {\n                        this.game.player_info[data.next_player].state = \"START_TURN\";\n                        this.game.player_info[data.old_player].state = \"NOT_TURN\";\n                    }\n                }\n            });\n        });\n        this.socket.on(\"sync_player_jail_state_synced\", data => {\n            console.log(\"sync_player_jail_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_state = data.jail_state;\n            });\n        });\n        this.socket.on(\"update_player_jail_rolls_updated\", data => {\n            console.log(\"update_player_jail_rolls_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_turns = data.jail_turns;\n            });\n        });\n        this.socket.on(\"transaction_processed\", data => {\n            console.log(\"transaction_processed\", data);\n            runInAction(() => {\n                this.game.player_info[data.giving_player].money = data.giving_player_money;\n                this.game.player_info[data.giving_player].pay_multiplier = 1;\n                this.game.player_info[data.receiving_player].money = data.receiving_player_money;\n            });\n        });\n        this.socket.on(\"players_doubles_updated\", data => {\n            console.log(\"players_doubles_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].doubles_rolled = data.doubles_rolled;\n            });\n        });\n        this.socket.on(\"dice_roll_updated\", data => {\n            console.log(\"dice_roll_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].dice = data.dice;\n            });\n        });\n        this.socket.on(\"player_state_synced\", data => {\n            console.log(\"player_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = data.state;\n            });\n        });\n        this.socket.on(\"chest_card_increased\", data => {\n            console.log(\"chest_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chest_card = data.last_chest_card;\n            });\n        });\n        this.socket.on(\"chance_card_increased\", data => {\n            console.log(\"chance_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chance_card = data.last_chance_card;\n            });\n        });\n        this.socket.on(\"property_mortgaged\", data => {\n            console.log(\"property_mortgaged\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].mortgaged = data.mortgage_value;\n            });\n        });\n        this.socket.on(\"tile_upgraded\", data => {\n            console.log(\"tile_upgraded\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].upgrades = data.upgrades;\n            });\n        });\n        this.socket.on(\"trade_accepted\", data => {\n            console.log(\"trade_accepted\", data);\n            this.mergeTradeData(data.trade_index);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"ACCEPTED\";\n            });\n        });\n        this.socket.on(\"trade_rejected\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"REJECTED\";\n            });\n        });\n        this.socket.on(\"auction_initiated\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.auction = true;\n                this.game.auction_tile = data.tile;\n            });\n        });\n        this.socket.on(\"trade_canceled\", data => {\n            console.log(\"trade_canceled\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"CANCELED\";\n            });\n        });\n        this.socket.on(\"trade_created\", data => {\n            console.log(\"trade_created\", data);\n            runInAction(() => {\n                this.game.trades.push(data.trade);\n            });\n        });\n        this.socket.on(\"log_added\", data => {\n            console.log(\"log_added\", data);\n            runInAction(() => {\n                this.game.logs.push(data.log);\n            });\n        });\n        this.socket.on(\"game_started\", data => {\n            console.log(\"game_started\", data);\n            runInAction(() => {\n                this.game.game_state = \"STARTED\";\n            });\n        });\n        this.socket.on(\"player_gave_up\", data => {\n            console.log(\"player_gave_up\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = \"OUT\";\n                this.game.player_info[data.next_player].state = \"START_TURN\";\n                this.game.board = data.new_board;\n            });\n        });\n        this.socket.on(\"game_ended\", data => {\n            console.log(\"game_ended\", data);\n            runInAction(() => {\n                this.game.game_state = \"ENDED\";\n            });\n        });\n        this.socket.on(\"animated_players_moved\", data => {\n            console.log(\"animated_players_moved\", data);\n            runInAction(() => {\n                this.game.animated_players_move = data.animated_players_move;\n                const movingPlayer = setInterval(() => {\n                    runInAction(() => {\n                        this.game.animated_players_move.moves.shift();\n                        if (this.game.animated_players_move.moves.length === 0) {\n                            clearInterval(movingPlayer);\n                        }\n                    });\n                }, 200);\n            });\n        });\n        this.socket.on(\"pay_all_players_payed\", data => {\n            console.log(\"pay_all_players_payed\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = this.game.player_info[data.player_index].money - (data.amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n                this.game.player_info.forEach((player, index) => {\n                    if (index !== data.player_index) {\n                        player.money += data.amount;\n                    }\n                });\n            });\n        });\n    };\n    setGameInfo = (data) => {\n        this.game = data\n    };\n    setMousedOverTile = (tile) => {\n        this.mousedOverTile = tile;\n    };\n    clearMousedOverTile = () => {\n        this.mousedOverTile = null;\n    };\n\n    rollDice = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].dice = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n        ];\n        this.socket.emit(\"update_dice_roll\", {\n            game_id: this.gameAuthInfo.game_id,\n            dice: this.game.player_info[playerIndex].dice,\n            player_index: playerIndex,\n        });\n    };\n    calcRentCostTile = (tileIndex, preDiceRoll) => {\n        const tile = this.game.board[tileIndex];\n        if (tile.type === \"rr\") {\n            if (tile.mortgaged) {\n                return 0;\n            }\n            let numOwns = this.game.board.filter(el => el.type === \"rr\" && el.player === tile.player).length;\n            return tile.base_rent * Math.pow(2, numOwns - 1);\n        } else if (tile.type === \"property\") {\n            if (tile.mortgaged) {\n                return 0;\n            }\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            let noneMortgaged = this.game.board.filter(el => el.group === tile.group).every(el => !el.mortgaged);\n            if (ownsAll && noneMortgaged) {\n                if (tile.upgrades > 0) {\n                    return tile.rent[tile.upgrades];\n                }\n                return tile.rent[0] * 2;\n            } else {\n                return tile.rent[0];\n            }\n        } else if (tile.type === \"utility\") {\n            if (tile.mortgaged) {\n                return 0;\n            }\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            if (!ownsAll) {\n                if (preDiceRoll) {\n                    return \"Dé×4\";\n                }\n                return this.diceSum * 4;\n            } else {\n                if (preDiceRoll) {\n                    return \"Dé×10\";\n                }\n                return this.diceSum * 10;\n            }\n        }\n    };\n    mortgageProperty = (property) => {\n        const playerIndex = this.playerIndex;\n        if (this.game.board[property].mortgaged) {\n            this.game.player_info[playerIndex].money -= this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        } else {\n            this.game.player_info[playerIndex].money += this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        }\n        this.game.board[property].mortgaged = !this.game.board[property].mortgaged;\n        this.socket.emit(\"mortgage_property\", {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: property,\n            mortgage_value: this.game.board[property].mortgaged,\n        });\n    };\n    circularAdd = (val, num, max) => {\n        if (val + num > max) {\n            num = num - (max - val);\n            return num - 1;\n        } else {\n            return val + num;\n        }\n    };\n\n    get diceSum() {\n        return this.getPlayer.dice[0] + this.getPlayer.dice[1];\n    }\n\n    get playerTile() {\n        return this.game.board[this.getPlayer.position];\n    }\n\n    get getPlayer() {\n        return this.game.player_info[this.playerIndex];\n    }\n\n    get inGame() {\n        if (!this.game.player_info) {\n            return false;\n        } else if (this.playerIndex === -1) {\n            return false;\n        } else {\n            return true\n        }\n    }\n\n    setPlayerState = (state) => {\n        this.game.player_info[this.playerIndex].state = state;\n    };\n    setJailState = (state) => {\n        this.game.player_info[this.playerIndex].jail_state = state;\n    };\n\n    get playerState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return \"NOT_TURN\";\n        // } else {\n        return this.getPlayer.state;\n        // }\n    }\n\n    get playerJailState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return false;\n        // } else {\n        return this.getPlayer.jail_state;\n        // }\n    }\n\n    netWorthOfPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    };\n    liquidWorthofPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    };\n\n    get netWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    }\n\n    get liquidWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    }\n\n    playersProperties = (playerIndex) => {\n        const player = this.game.player_info[playerIndex];\n        return this.game.board\n            .map((tile, i) => {\n                let ownsAll = this.game.board.filter(el => el.group === this.game.board[i].group && el.player !== this.game.board[i].player).length === 0;\n                let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => !el.mortgaged);\n                let offByOneUp = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades > el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades < el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                let offByOneDown = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades < el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades > el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                const hasHousesOnAny = this.game.board.filter(el => el.group === this.game.board[i].group && el.upgrade && el.upgrades > 0).length > 0;\n                const canUpgrade = offByOneUp && ownsAll && noneMortgaged && this.game.board[i].upgrades < 5 && player.money >= this.game.board[i].upgrade;\n                const canDowngrade = offByOneDown && ownsAll && noneMortgaged && this.game.board[i].upgrades > 0;\n                let calculatedRent = this.calcRentCostTile(i, true);\n                return {...tile, index: i, canUpgrade, canDowngrade, calculatedRent, ownsAll, hasHousesOnAny}\n            })\n            .filter(tile => {\n                return tile.owned && tile.player === playerIndex;\n            })\n            .sort((a, b) => {\n                return a.group === b.group ? a.cost < b.cost ? 1 : -1 : a.type === b.type ? a.group < b.group ? -1 : 1 : a.type < b.type ? -1 : 1\n            });\n    };\n\n    get playerIndex() {\n        if (!this.game.player_info) {\n            return null;\n        }\n        return this.game.player_info.findIndex(el => el.username === this.gameAuthInfo.username);\n    }\n\n    canUpgrade = (propertyIndex) => {\n        let ownsAll = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group && el.player !== this.game.board[propertyIndex].player).length === 0;\n        let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group).every(el => !el.mortgaged);\n        return ownsAll && noneMortgaged && this.game.board[propertyIndex].upgrades < 3 && this.getPlayer.money >= this.game.board[propertyIndex].upgrade;\n    };\n\n    get currentPlayerTurn() {\n        const player = this.game.player_info.find(player => (player.state !== \"NOT_TURN\" && player.state !== \"OUT\"));\n        return player || {};\n    }\n\n    findNextPlayerInGame = (playerIndex) => {\n        for (let i = playerIndex; i < this.game.player_info.length * 3; i++) {\n            const player = this.game.player_info[(i % this.game.player_info.length + this.game.player_info.length) % this.game.player_info.length];\n            if (player.state !== \"OUT\" && player.id !== playerIndex) {\n                return player.id\n            }\n        }\n    };\n    refreshCurrentProposingTrade = () => {\n        this.currentProposingTrade = {\n            moneyGiven: 0,\n            moneyTaken: 0,\n            givenProperties: [],\n            takenProperties: [],\n        }\n    };\n    setCurrentProposingTrade = (key, val) => {\n        this.currentProposingTrade[key] = val;\n    };\n    currentProposingTrade = {\n        moneyGiven: 0,\n        moneyTaken: 0,\n        givenProperties: [],\n        takenProperties: [],\n    }\n}\n\ndecorate(Store, {\n    players: observable,\n    game: observable,\n    currentProposingTrade: observable,\n    // gameState: observable,\n    mousedOverTile: observable,\n    selectedTab: observable,\n    gameAuthInfo: observable,\n    diceSum: computed,\n    playerState: computed,\n    inGame: computed,\n    playerJailState: computed,\n    getPlayer: computed,\n    playerTile: computed,\n    netWorth: computed,\n    liquidWorth: computed,\n    playerIndex: computed,\n    currentPlayerTurn: computed,\n    rollDice: action,\n    refreshCurrentProposingTrade: action,\n    setCurrentProposingTrade: action,\n    setPlayerState: action,\n    movePlayerToTile: action,\n    checkTile: action,\n    payPercentTax: action,\n    payFlatTax: action,\n    goToJail: action,\n    utilityChanceCardPayment: action,\n    checkAndUpdateDoublesRolled: action,\n    setJailState: action,\n    clearMousedOverTile: action,\n    setMousedOverTile: action,\n    setUsername: action,\n    mortgageProperty: action,\n    setGameInfo: action,\n    createTrade: action,\n    payOutOfJail: action,\n    payLuxuryTax: action,\n    connectedFromNew: action,\n    movePlayerDev: action,\n    movePlayer: action,\n    payPlayer: action,\n    buyTile: action,\n    mergeTradeData: action,\n    acceptTrade: action,\n    addToLog: action,\n    startTurn: action,\n    payAllPlayers: action,\n    endTurn: action,\n    handleModifierCard: action,\n    upgradeProperty: action,\n    giveUp: action,\n    rejectTrade: action,\n    rejectBuyTile: action,\n    cancelTrade: action,\n    setGameAuthInfo: action,\n    downgradeProperty: action,\n    checkIfPlayerPassedGo: action,\n    playerPassedGoMoneyIncrease: action,\n    socketActions: action,\n    connectToGame: action,\n    startGame: action,\n});\n\nexport default new Store();","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'mobx-react';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './store/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}