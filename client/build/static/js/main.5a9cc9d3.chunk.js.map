{"version":3,"sources":["NewGame.js","Player.js","Card.js","middleScreen/NavTabs.js","middleScreen/MyInfoTab.js","middleScreen/MyPropertiesTab.js","middleScreen/Logs.js","middleScreen/Actions.js","middleScreen/PlayersTab.js","middleScreen/TradeTab.js","middleScreen/TradesTab.js","middleScreen/MousedOverTileTab.js","middleScreen/MainView.js","assets/js/three/three.js","assets/js/game_views/property_manager.js","assets/js/game_views/board.js","assets/js/game_views/player.js","assets/js/game_views/board_controller.js","assets/js/game_views/game_controller.js","assets/js/utils/audio_manager.js","assets/js/views/game.js","Board.js","MainApp.js","App.js","store/Store.js","serviceWorker.js","index.js"],"names":["URL","process","REACT_APP_URL","NewGame","state","game_name","game_password","username","password","selectedTab","searchGameName","gamesFound","gamesFoundSelected","joinGamePassword","joinGameUsername","joinGameUsernamePassword","formError","submitNewGame","e","preventDefault","fetch","concat","method","headers","Content-Type","body","JSON","stringify","_this","then","res","json","response","localStorage","setItem","game_id","console","log","props","history","push","joinGame","_id","error","setState","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","auth","keyPress","keyCode","searchForGames","data","games","removeItem","_this2","this","react_default","a","createElement","className","lib","onClick","onSubmit","required","value","onChange","_ref","target","type","placeholder","_ref2","_ref3","_ref4","_ref5","onKeyDown","length","map","game","index","key","player_info","game_state","readOnly","_ref6","_ref7","_ref8","Component","withRouter","inject","observer","Player","moving","style","backgroundColor","store","playerNumber","color","Card","boxShadow","right","board","left","top","bottom","Object","objectSpread","backgroundImage","url","mortgaged","onMouseLeave","clearMousedOverTile","onMouseEnter","setMousedOverTile","filter","player","i","src_Player","id","animated_players_move","moves","tileIndex","owned","upgrades","NavTabs","selectTab","changeDropDown","dropdownExpanded","data-toggle","role","aria-haspopup","aria-expanded","gameAuthInfo","selectedPlayer","MyInfoTab","_this$props$store$get","slicedToArray","getPlayer","dice","diceOne","diceTwo","playerIndex","playerTile","name","money","netWorth","MyPropertiesTab","scope","playersProperties","property","calculatedRent","parseInt","upgrade","disabled","canUpgrade","upgradeProperty","canDowngrade","downgradeProperty","cost","el","group","every","mortgageProperty","checked","Logs","prevProps","prevState","snapshot","div","refs","logs","scrollTop","scrollHeight","ref","Actions","startGame","playerState","jail_turns","startTurn","currentPlayerTurn","utilityChanceCardPayment","jail_state","payOutOfJail","buyTile","rejectBuyTile","payPercentTax","payFlatTax","endTurn","giveUp","PlayersTab","netWorthOfPlayer","liquidWorthofPlayer","TradeTab","proposeTrade","createTrade","currentProposingTrade","givenProperties","takenProperties","moneyGiven","moneyTaken","refreshCurrentProposingTrade","yourCash","playersCash","setCurrentProposingTrade","min","hasHousesOnAny","findIndex","toConsumableArray","slice","TradesTab","selectedTrade","trades","firstIndex","initiating_player","trading_player","initiatingPlayer","tradingPlayer","areYouInitiating","rightProperties","taken_properties","given_properties","leftProperties","initiatingPlayerHasAllProperties","tradingPlayerHasAllProperties","trade","given_money","taken_money","acceptTrade","marginRight","rejectTrade","cancelTrade","MousedOverTileTab","tile","mousedOverTile","playersOnTile","relatedTiles","relTile","calcRentCostTile","rent","MainView","middleScreen_MousedOverTileTab","Fragment","middleScreen_NavTabs","middleScreen_MyInfoTab","middleScreen_Actions","middleScreen_Logs","middleScreen_MyPropertiesTab","middleScreen_PlayersTab","middleScreen_TradeTab","middleScreen_TradesTab","window","THREE","require","three","OrbitControls","PropertyManager","options","classCallCheck","loadedHotelJson","loadedHouseJson","scene","models","createClass","pos","tileId","material","MeshBasicMaterial","TextureLoader","load","transparent","square","Mesh","PlaneGeometry","side","Board","tileIdToSide","x","z","scale","set","rotation","Math","PI","add","_model$scale","model","ObjectLoader","parse","ELEVATION","PROPERTY_HOUSE","apply","SCALES","y","_model$scale2","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","remove","err","return","PROPERTY_HOTEL","PROPERTY_OWNER_MARK","HOTEL_MARGIN","MARK_MARGIN","initBoard","row","SIZE","boardRow","col","players","propertyManager","tileInfo","tileIdToPos","action","BoardController","MODEL_PLAYER","MODEL_PROPERTY","SIDE_BOTTOM","SIDE_LEFT","SIDE_TOP","SIDE_RIGHT","modelUrl","initPos","initTileId","Promise","resolve","obj","_this$model$scale","xhr","loaded","total","newTileId","newPos","containerEl","assetsUrl","callback","initEngine","initLights","initMaterials","initObjects","onAnimationFrame","number","promiseList","boardToWorld","updateTileInfo","all","_this3","currTileId","getTileId","toString","playerMovementInterval","setInterval","TILE_MAX","tilePlayerCount","getTileInfo","reduce","b","advanceTo","clearInterval","tilePropertyCount","getPropertyCount","buildHouse","buildHotel","houseModelJson","hotelModelJson","buyLand","viewWidth","offsetWidth","viewHeight","offsetHeight","renderer","WebGLRenderer","antialias","alpha","setSize","setPixelRatio","devicePixelRatio","Scene","camera","PerspectiveCamera","SQUARE_SIZE","cameraController","center","Vector3","appendChild","domElement","lights","topLight","PointLight","intensity","whiteSideLight","SpotLight","shadow","Fov","blackSideLight","movingLight","distance","materials","boardMaterial","MeshLambertMaterial","groundMaterial","defaultTileMaterial","tileMaterial","rowMaterial","tileModelIndex","posToTileId","_this4","loader","Loader","loadedObjects","checkLoading","geom","boardModel","groundModel","requestModelJson","request","XMLHttpRequest","open","send","responseText","_this5","requestAnimationFrame","update","render","aspect","innerWidth","innerHeight","updateProjectionMatrix","MODEL_PLAYER_MARGIN","MODEL_PLAYER_OFFSET","MODEL_PROPERTY_TOP_MARGIN","MODEL_PROPERTY_LEFT_MARGIN","MODEL_PROPERTY_MARGIN","MODEL_PROPERTY_LEFT_OFFSET","GameController","initGame","onBoardPainted","boardController","drawBoard","count","drawPlayers","movePlayer","addLandMark","addProperty","resize","AudioManager","audioList","loop","volume","audioPlayers","_i","audio","Audio","playing","play","GameView","audioManager","gameInProcess","container","gameController","initWebSocket","bind","addEventListener","resizeBoard","socket","WebSocket","location","host","hostName","onmessage","event","message","handleStatusChange","setTimeout","messageHandlers","init","handleInit","add_err","handleAddErr","roll_res","handleRollRes","buy_land","handleBuyLand","construct","handleConstruct","cancel_decision","handleCancel","game_end","handleGameEnd","chat","handleChat","amount","posChange","initPlayers","changeCashAmount","currentPlayer","userName","myPlayerIndex","avatarTemplate","avatar","fullName","charAt","$usersContainer","innerHTML","PLAYERS_COLORS","gameLoadingPromise","addPlayer","amounts","document","querySelector","innerText","nextPlayer","onDiceRolled","getElementById","classList","title","button","text","showModal","diceMessage","subTitle","buttons","displayTime","$modalAvatar","src","DEFAULT_AVATAR","background","$modalMessage","$modalButtons","$modalTitle","$modalSubTitle","_loop","$modalCard","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","hideModal","stop","delayAfter","_this6","_handleInit","_callee2","changeCash","eventMsg","landname","owners","houses","building_num","_context2","decision","waitDecision","changePlayer","confirmDecision","cancelDecision","_x","arguments","_handleAddErr","_callee3","_context3","_handleRollRes","_callee4","currPlayer","steps","_eventMsg","cash","_cash","_context4","curr_player","next_player","new_pos","result","bypass_start","is_cash_change","curr_cash","is_option","new_event","_x2","tile_id","build_type","_handleGameEnd","_callee5","all_asset","k","big_asset","big_index","_context5","abrupt","score","splice","showScoreboard","_x3","sender","content","addChatMessage","_confirmDecision","_callee6","_context6","hostname","_cancelDecision","_callee7","_context7","messageElement","$chatMessageContainer","$chatMessageToSend","from","scoreList","scoreboardTemplate","rank","$modalCardContent","$audioControl","mute","showingHelp","$helpControl","$helpOverlay","onload","gameInfo","getItem","setGameAuthInfo","connectToGame","gameDiv","initComponents","inGame","margin","textAlign","fontSize","MainApp","pathname","src_Board","RedirectHome","Redirect","to","App","Switch","Route","exact","path","component","configure","enforceActions","Store","io","forceNew","emit","updatePlayerJailRolls","player_index","playerJailState","setPlayerState","rollDice","setJailState","syncPlayerJailState","syncPlayerState","checkTile","updatePlayerMoney","player_money","movePlayerDev","circularAdd","movingPlayer","runInAction","shift","movePlayerToTile","new_position","devMoveHere","tile_position","mergeTradeData","tradeIndex","forEach","propIndex","addToLog","trade_index","newCurrentPlayer","findNextPlayerInGame","winningPlayer","find","winning_player","newBoard","new_board","givenMoney","takenMoney","payPlayer","receivingPlayer","givingPlayer","pay_multiplier","giving_player","receiving_player","giving_player_money","receiving_player_money","newLog","time","Date","doubles_rolled","updatePlayerDoublesRolled","checkAndUpdateDoublesRolled","diceSum","checkIfPlayerPassedGo","payLuxuryTax","handleModifierCard","goToJail","roll","floor","random","newCardIndex","newCard","last_chance_card","chance","last_chest_card","chest","playerPassedGoMoneyIncrease","utility","findNearestType","rail_road","payAllPlayers","nearest","ceil","tile_index","tile_bought","auction","auction_tile","old_player","property_index","socketActions","on","Notification","onclick","focus","mortgage_value","setGameInfo","preDiceRoll","numOwns","base_rent","pow","ownsAll","noneMortgaged","val","num","max","worth","offByOneUp","offByOneDown","sort","propertyIndex","decorate","observable","computed","liquidWorth","setUsername","connectedFromNew","store_Store","Boolean","match","ReactDOM","index_module","BrowserRouter","src_App_0","requestPermission","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a9cc9d3.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {ToastContainer, toast} from 'react-toastify';\n\nconst URL = process.env.REACT_APP_URL || \"https://monopoly.cassimkhouani.com\";\n\nclass NewGame extends Component {\n    state = {\n        game_name: \"\",\n        game_password: \"\",\n        username: \"\",\n        password: \"\",\n        selectedTab: \"create_game\",\n        searchGameName: \"\",\n        gamesFound: [],\n        gamesFoundSelected: -1,\n        joinGamePassword: \"\",\n        joinGameUsername: \"\",\n        joinGameUsernamePassword: \"\",\n        formError: \"\",\n    };\n\n    componentDidMount() {\n        localStorage.removeItem(\"username\");\n    }\n\n    submitNewGame = (e) => {\n        e.preventDefault();\n        fetch(`${URL}/create_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_name: this.state.game_name,\n                game_password: this.state.game_password,\n                username: this.state.username,\n                password: this.state.password\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                localStorage.setItem(\"previous_game\", JSON.stringify({\n                    game_name: this.state.game_name,\n                    game_password: this.state.game_password,\n                    username: this.state.username,\n                    password: this.state.password,\n                    game_id: response.game_id,\n                }));\n                console.log(response);\n                this.props.history.push(\"/play-game\");\n            });\n    };\n    joinGame = (e) => {\n        e.preventDefault();\n        console.log(this.state.gamesFound[this.state.gamesFoundSelected]._id);\n        fetch(`${URL}/join_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                game_password: this.state.joinGamePassword,\n                username: this.state.joinGameUsername,\n                password: this.state.joinGameUsernamePassword\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response)\n                if (response.error) {\n                    this.setState({formError: response.error}, () => {\n                        if (this.state.formError === \"incorrect_game_pw\") {\n                            toast.error(\"Mot de passe de partie incorrect.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"player_not_in_game\") {\n                            toast.error(\"Vous n'êtes pas dans cette partie.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"incorrect_player_pw\") {\n                            toast.error(\"Mot de passe du joueur incorrect.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        }\n                    });\n                    return;\n                }\n                if (response.success) {\n                    localStorage.setItem(\"previous_game\", JSON.stringify({\n                        game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                        game_name: this.state.gamesFound[this.state.gamesFoundSelected].auth.game_name,\n                        game_password: this.state.joinGamePassword,\n                        username: this.state.joinGameUsername,\n                        password: this.state.joinGameUsernamePassword,\n                    }));\n                    console.log(response);\n                    this.props.history.push(\"/play-game\");\n                }\n            });\n    };\n    keyPress = (e) => {\n        if (e.keyCode === 13) {\n            this.searchForGames();\n        }\n    };\n    searchForGames = () => {\n        this.setState({gamesFound: [], gamesFoundSelected: -1});\n        fetch(`${URL}/search_for_games?game_name=${this.state.searchGameName}`)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({gamesFound: data.games});\n            })\n    };\n\n    render() {\n\n        return (\n            <div className=\"new-game-main\">\n                <ToastContainer/>\n                <ul className=\"nav nav-tabs\">\n                    <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"create_game\"})}>\n                        <div className={`nav-link ${this.state.selectedTab === \"create_game\" ? \"active\" : \"\"}`}>\n                            Créer une partie\n                        </div>\n                    </li>\n                    <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"join_game\"})}>\n                        <div className={`nav-link ${this.state.selectedTab === \"join_game\" ? \"active\" : \"\"}`}>\n                            Rejoindre une partie\n                        </div>\n                    </li>\n                </ul>\n                {this.state.selectedTab === \"create_game\" && (\n                    <div className=\"create-game-input\">\n                        <form onSubmit={this.submitNewGame}>\n                            <h5>Créer une partie</h5>\n                            <small className=\"form-text text-muted align-self-start\">Nom de la partie</small>\n                            <input required value={this.state.game_name}\n                                   onChange={({target}) => this.setState({game_name: target.value})}\n                                   type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Nom partie\"/>\n                            <small className=\"form-text text-muted align-self-start\">Mot de passe de la partie</small>\n                            <input required value={this.state.game_password}\n                                   onChange={({target}) => this.setState({game_password: target.value})}\n                                   type=\"password\" className=\"form-control mb-2\"\n                                   placeholder=\"Mot de passe\"/>\n                            <small className=\"form-text text-muted align-self-start\">Ton nom</small>\n                            <input required value={this.state.username}\n                                   onChange={({target}) => this.setState({username: target.value})}\n                                   type=\"text\" className=\"form-control mb-2\"\n                                   placeholder=\"Nom\"/>\n                            <small className=\"form-text text-muted align-self-start\">Ton mot de passe</small>\n                            <input required value={this.state.password}\n                                   onChange={({target}) => this.setState({password: target.value})} type=\"password\"\n                                   className=\"form-control mb-2\"\n                                   placeholder=\"Mot de passe\"/>\n                            <button type=\"submit\" className=\"btn btn-primary\">Créer</button>\n                        </form>\n                    </div>\n                )}\n                {this.state.selectedTab === \"join_game\" && (\n                    <div className=\"create-game-input\">\n                        <h5>Rejoindre une partie</h5>\n                        <small className=\"form-text text-muted align-self-start\">Chercher une partie</small>\n                        <div className=\"input-group\">\n                            <input required value={this.state.searchGameName}\n                                   onChange={({target}) => this.setState({searchGameName: target.value})} type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Search...\"\n                                   onKeyDown={this.keyPress}\n                            />\n                            <div className=\"input-group-append\">\n                                <button onClick={this.searchForGames} className=\"btn btn-outline-secondary\"\n                                        type=\"button\">\n                                    <i className=\"fas fa-search\"/>\n                                </button>\n                            </div>\n                        </div>\n                        {this.state.gamesFound.length > 0 && (\n                            <div className=\"mt-3\">\n                                <h5>Parties trouvées</h5>\n                                <ul className=\"list-group\">\n                                    {this.state.gamesFound.map((game, index) => {\n                                        return (\n                                            <li key={game._id}\n                                                onClick={() => {\n                                                    if (this.state.gamesFoundSelected !== index) {\n                                                        this.setState({\n                                                            gamesFoundSelected: index,\n                                                            joinGamePassword: \"\",\n                                                            joinGameUsername: \"\",\n                                                            joinGameUsernamePassword: \"\",\n                                                        })\n                                                    }\n                                                }}\n                                                className=\"cursor list-group-item\">\n                                                {this.state.gamesFoundSelected !== index && (\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                                        <div className=\"d-flex flex-column\">\n                                                            <div>{game.auth.game_name}</div>\n                                                            <small>Crée par: {game.player_info[0].username}</small>\n                                                        </div>\n                                                        <i className=\"fas fa-arrow-circle-right\"/>\n                                                    </div>\n                                                )}\n                                                {this.state.gamesFoundSelected === index && (\n                                                    <div className=\"\">\n                                                        {game.game_state === \"INVITING_PLAYERS\" && (\n                                                            <div>\n                                                                <small>La partie n'est pas commencé, vous pouvez rejoindre...\n                                                                </small>\n                                                            </div>\n                                                        )}\n                                                        <form onSubmit={this.joinGame}>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Nom de la partie\n                                                            </small>\n                                                            <input required value={game.auth.game_name}\n                                                                   type=\"text\"\n                                                                   readOnly\n                                                                   className=\"form-control\"\n                                                                   placeholder=\"Nom de la partie\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Mot de passe de la partie\n                                                            </small>\n                                                            <input required value={this.state.joinGamePassword}\n                                                                   onChange={({target}) => this.setState({joinGamePassword: target.value})}\n                                                                   type=\"password\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Mot de passe de la partie\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Ton nom\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsername}\n                                                                   onChange={({target}) => this.setState({joinGameUsername: target.value})}\n                                                                   type=\"text\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Ton nom\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Ton mot de passe\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsernamePassword}\n                                                                   onChange={({target}) => this.setState({joinGameUsernamePassword: target.value})}\n                                                                   type=\"password\"\n                                                                   className=\"form-control mb-2\"\n                                                                   placeholder=\"Mot de passe de la partie\"/>\n                                                            <button type=\"submit\" className=\"btn btn-primary\">Rejoindre\n                                                            </button>\n                                                        </form>\n                                                    </div>\n                                                )}\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(NewGame)));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\n\nclass Player extends Component {\n    render() {\n        return (\n            <div\n                className={`${this.props.moving ? \"player-moving\" : \"player\"} d-flex justify-content-center align-items-center`}\n                style={{backgroundColor: !this.props.moving ? this.props.store.game.player_info[this.props.playerNumber].color : null}}\n            >\n                {this.props.moving && (\n                    <i className=\"fas fa-circle\"/>\n                )}\n                {!this.props.moving && (\n                    <b>{this.props.playerNumber + 1}</b>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Player));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\nimport Player from './Player';\n\n// import tiles from '../../server/monopoly';\n\nclass Card extends Component {\n    render() {\n        const boxShadow = {};\n        if (this.props.right) {\n            boxShadow.boxShadow = `-5px 0px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.left) {\n            boxShadow.boxShadow = `5px 0px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.top) {\n            boxShadow.boxShadow = `0px 5px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.bottom) {\n            boxShadow.boxShadow = `0px -5px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        return (\n            <div\n                // onClick={() => this.props.store.devMoveHere(this.props.position)}\n                style={{\n                    backgroundImage: `url(${this.props.store.game.board[this.props.position].url})`,\n                    ...boxShadow,\n                }}\n                className={`game-tile d-flex flex-wrap align-content-between justify-content-between ${this.props.store.game.board[this.props.position].mortgaged ? \"grey-card\" : \"\"}`}\n                onMouseLeave={this.props.store.clearMousedOverTile}\n                onMouseEnter={() => this.props.store.setMousedOverTile(this.props.position)}\n            >\n                {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.position).map((player, i) => {\n                    return <Player playerNumber={player.id} key={i}/>\n                })}\n                {this.props.store.game.animated_players_move.moves.filter(tileIndex => tileIndex === this.props.position).map((tileIndex, i) => {\n                    return <Player key={i} moving={true}/>\n                })}\n                {this.props.right && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-right\"/>}\n                {this.props.right && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-column left-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {/*{this.props.bottom && this.props.store.game.board[this.props.position].color && (*/}\n                {/*<div style={{backgroundColor: this.props.store.game.board[this.props.position].color}}*/}\n                {/*className=\"d-flex flex-row top-tiles-color\"/>*/}\n                {/*)}*/}\n                {this.props.bottom && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-bottom\"/>}\n                {this.props.bottom && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-row top-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {this.props.left && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-left\"/>}\n                {this.props.left && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-column right-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {this.props.top && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-top\"/>}\n                {this.props.top && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-row bottom-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Card));\n","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass NavTabs extends Component {\n    render() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"my_info\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"my_info\" ? \"active\" : \"\"}`}>Mes infos\n                    </div>\n                </li>\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"my_properties\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"my_properties\" ? \"active\" : \"\"}`}>Mes Propriétés\n                    </div>\n                </li>\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"trades\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"trades\" ? \"active\" : \"\"}`}>Mes échanges\n                    </div>\n                </li>\n                <li className=\"nav-item dropdown cursor\"\n                    onMouseEnter={() => this.props.changeDropDown({dropdownExpanded: true})}\n                    onMouseLeave={() => this.props.changeDropDown({dropdownExpanded: false})}\n                >\n                    <div className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\"\n                         aria-haspopup=\"true\" aria-expanded=\"false\">Joueurs\n                    </div>\n                    <div className={`dropdown-menu ${this.props.dropdownExpanded ? \"show\" : \"\"}`}>\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length === 1 && (\n                            <div className=\"dropdown-item\">Pas de joueurs</div>\n                        )}\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length > 1 && this.props.store.game.player_info.filter(player => player.state !== \"OUT\").map((player, index) => ({\n                            ...player,\n                            index\n                        })).filter(player => player.username !== this.props.store.gameAuthInfo.username).map(player =>\n                            <div onClick={() => this.props.selectTab({\n                                selectedTab: \"player_info\",\n                                selectedPlayer: player.id,\n                                dropdownExpanded: false,\n                            })} key={player.id} className=\"dropdown-item\">{player.username} - ({player.id + 1})</div>\n                        )}\n                    </div>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(NavTabs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MyInfoTab extends Component {\n    render() {\n        const [diceOne, diceTwo] = this.props.store.getPlayer.dice;\n        return (\n            <div className=\"info-tab d-flex flex-column\">\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Nom: </span>\n                            <span\n                                className=\"flex-fill\">({this.props.store.playerIndex + 1}) - {this.props.store.getPlayer.username}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Case: </span>\n                            <span className=\"flex-fill\">{this.props.store.playerTile.name}</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Argent: </span>\n                            <span className=\"flex-fill\">${this.props.store.getPlayer.money}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Net: </span>\n                            <span className=\"flex-fill\">${this.props.store.netWorth}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex flex-row justify-content-center align-items-center dice-content\">\n                    {diceOne === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceOne === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceOne === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceOne === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceOne === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceOne === 6 && <i className=\"fas fa-dice-six\"/>}\n                    <div className=\"space-between-dice\"/>\n                    {diceTwo === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceTwo === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceTwo === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceTwo === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceTwo === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceTwo === 6 && <i className=\"fas fa-dice-six\"/>}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(MyInfoTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MyPropertiesTab extends Component {\n    render() {\n        return (\n\n            <div className=\"properties-tab d-flex flex-row justify-content-around my-properties-table\">\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th className=\"text-center\" scope=\"col\">Nom</th>\n                        <th className=\"text-center\" scope=\"col\">Loyer</th>\n                        <th className=\"text-center\" scope=\"col\">Améliorations</th>\n                        <th className=\"text-center\" scope=\"col\">Hypothéqué?</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"\">\n                    {this.props.store.playersProperties(this.props.store.playerIndex).map((property, i) => {\n                        return (\n                            <tr key={i}>\n                                <th scope=\"row\">\n                                    <div className=\"my-properties-pic\" style={{\n                                        backgroundImage: `url(${property.url})`,\n                                    }}/>\n                                </th>\n                                <td className=\"text-center\">{property.name}</td>\n                                <td className=\"text-center\">{property.calculatedRent === parseInt(property.calculatedRent, 10) ? `$${property.calculatedRent}` : property.calculatedRent}</td>\n                                {property.upgrade ?\n                                    <td className=\"text-center upgrade-col\">\n                                        <div className=\"d-flex upgrade-bar\">\n                                            <div\n                                                className={`bar-component bar-component-left ${property.upgrades > 0 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 1 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 2 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 3 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 4 ? \"bar-component-filled\" : \"\"}`}/>\n                                        </div>\n                                        <div className=\"d-flex justify-content-center\">\n                                            <button\n                                                disabled={!property.canUpgrade}\n                                                className='btn btn-sm shadow-none'\n                                                style={{backgroundColor: \"transparent\"}}\n                                                onClick={() => this.props.store.upgradeProperty(property.index)}\n                                            >\n                                                <i className=\"far fa-arrow-alt-circle-up mr-2 cursor upgrade-prop\"/>\n                                            </button>\n                                            <button\n                                                disabled={!property.canDowngrade}\n                                                className='btn btn-sm shadow-none'\n                                                style={{backgroundColor: \"transparent\"}}\n                                                onClick={() => this.props.store.downgradeProperty(property.index)}\n                                            >\n                                                <i className=\"far fa-arrow-alt-circle-down ml-2 cursor upgrade-prop\"/>\n                                            </button>\n                                        </div>\n                                    </td>\n                                    :\n                                    <td/>\n                                }\n                                <td className=\"text-center\">\n                                    <input\n                                        disabled={(property.mortgaged && this.props.store.getPlayer.money - property.cost / 2 < 0) || this.props.store.getPlayer.state === \"NOT_TURN\" || !this.props.store.game.board.filter(el => el.group === property.group).every(el => el.upgrades === 0)}\n                                        onChange={() => this.props.store.mortgageProperty(property.index)}\n                                        checked={property.mortgaged} type=\"checkbox\" className=\"double\"\n                                    /> {property.mortgaged ? \"(-)\" : \"(+)\"}{property.cost / 2}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MyPropertiesTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Logs extends Component {\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    componentDidMount() {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    render() {\n        return (\n            <div ref=\"logs\" className=\"logs-tab\">\n                {this.props.store.game.logs.length === 0 && (\n                    <div>Pas d'actions...</div>\n                )}\n                {this.props.store.game.logs.map((log, i) => {\n                    return (\n                        <div key={i}>\n                            {log.log}\n                        </div>\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Logs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Actions extends Component {\n    render() {\n        if (this.props.store.game.game_state === \"ENDED\") {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    La partie est finie\n                </div>\n            )\n        }\n        if (this.props.store.game.game_state === \"INVITING_PLAYERS\" && this.props.store.playerIndex === 0) {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    <button type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.props.store.startGame}>\n                        Commencer\n                    </button>\n                </div>\n            )\n        }\n        return (\n            <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                {this.props.store.playerState !== \"OUT\" && this.props.store.playerState === \"START_TURN\" && this.props.store.getPlayer.jail_turns < 3 && (\n                    <button type=\"button\" onClick={this.props.store.startTurn}\n                            className=\"btn btn-primary\">Jeter les dés\n                    </button>\n                )}\n                {this.props.store.playerState === \"NOT_TURN\" && (\n                    <div>Tour de {this.props.store.currentPlayerTurn.username}.</div>\n                )}\n                {this.props.store.playerState === \"UTILITY_CHANCE_CARD\" && (\n                    <button type=\"button\" onClick={this.props.store.utilityChanceCardPayment}\n                            className=\"btn btn-primary\">Lance pour voir combien tu payes\n                    </button>\n                )}\n                {this.props.store.getPlayer.jail_state && this.props.store.playerState === \"START_TURN\" && (\n                    <button type=\"button\" onClick={this.props.store.payOutOfJail}\n                            className=\"btn btn-primary\">Payer 50\n                    </button>\n                )}\n                {(this.props.store.playerState === \"BUY_TILE\" || this.props.store.playerState === \"BUY_TILE_NO_MONEY\") && (\n                    <div className=\"accept-reject-tile-buy-div d-flex justify-content-center\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <button disabled={this.props.store.playerState === \"BUY_TILE_NO_MONEY\"} type=\"button\"\n                                    className=\"btn btn-primary buy-tile-button text-center\"\n                                    onClick={this.props.store.buyTile}>\n                                Acheter\n                            </button>\n                            <button type=\"button\" className=\"btn btn-primary reject-buy-tile-button\"\n                                    onClick={this.props.store.rejectBuyTile}>\n                                Non\n                            </button>\n                        </div>\n                    </div>\n                )}\n                {this.props.store.playerState === \"INCOME_TAX\" && (\n                    <div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.store.payPercentTax}>Payer\n                            10%\n                        </button>\n                        <button type=\"button\" className=\"btn btn-primary pay-flat-tax-button\"\n                                onClick={this.props.store.payFlatTax}>Payer\n                            $200\n                        </button>\n                    </div>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && (\n                    <button disabled={this.props.store.getPlayer.money < 0} type=\"button\"\n                            onClick={this.props.store.endTurn}\n                            className=\"btn btn-primary\">Fin du tour\n                    </button>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && this.props.store.getPlayer.money < 0 && (\n                    <button type=\"button\" onClick={this.props.store.giveUp}\n                            className=\"btn btn-primary\">Abandonner\n                    </button>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Actions));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass PlayersTab extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Nom: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.player_info[this.props.player].username} - ({this.props.player + 1})</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Case: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.board[this.props.store.game.player_info[this.props.player].position].name}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Sortie prison: </span>\n                            <span className=\"flex-fill\">Non</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Argent: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.game.player_info[this.props.player].money}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Net: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.netWorthOfPlayer(this.props.player)}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Possible: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.liquidWorthofPlayer(this.props.player)}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <button onClick={() => this.props.selectTab({selectedTab: \"player_trade\"})} type=\"button\"\n                            className=\"btn btn-primary\"\n                            disabled={this.props.store.getPlayer.state === \"NOT_TURN\"}>\n                        Échange\n                    </button>\n                </div>\n                <div\n                    className=\"other-players-properties-tab d-flex flex-row justify-content-around other-players-properties-table\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th/>\n                            <th className=\"text-center\" scope=\"col\">Nom</th>\n                            <th className=\"text-center\" scope=\"col\">Loyer</th>\n                            <th className=\"text-center\" scope=\"col\">Améliorations</th>\n                            <th className=\"text-center\" scope=\"col\">Hypothéqué?</th>\n                        </tr>\n                        </thead>\n                        <tbody className=\"\">\n                        {this.props.store.playersProperties(this.props.player).map((property, i) => {\n                            return (\n                                <tr key={i}>\n                                    <th scope=\"row\">\n                                        <div className=\"my-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                    </th>\n                                    <td className=\"text-center\">{property.name}</td>\n                                    <td className=\"text-center\">{property.calculatedRent === parseInt(property.calculatedRent, 10) ? `$${property.calculatedRent}` : property.calculatedRent}</td>\n                                    {property.upgrade ?\n                                        <td className=\"text-center upgrade-col\">\n                                            <div className=\"d-flex upgrade-bar-other-player justify-content-center\">\n                                                <div\n                                                    className={`bar-component bar-component-left ${property.upgrades > 0 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 1 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 2 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 3 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 4 ? \"bar-component-filled\" : \"\"}`}/>\n                                            </div>\n                                        </td>\n                                        :\n                                        <td/>\n                                    }\n                                    <td className=\"text-center\">\n                                        <input\n                                            disabled\n                                            checked={property.mortgaged} type=\"checkbox\" className=\"double\"\n                                        />\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(PlayersTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass TradeTab extends Component {\n    proposeTrade = () => {\n        this.props.selectTab({selectedTab: \"my_info\"});\n        this.props.store.createTrade(this.props.player, this.props.store.currentProposingTrade.givenProperties, this.props.store.currentProposingTrade.takenProperties, this.props.store.currentProposingTrade.moneyGiven, this.props.store.currentProposingTrade.moneyTaken);\n        this.props.store.refreshCurrentProposingTrade();\n    };\n\n    render() {\n        const yourCash = this.props.store.getPlayer.money;\n        const playersCash = this.props.store.game.player_info[this.props.player].money;\n        const playerIndex = this.props.store.playerIndex;\n        return (\n            <div className=\"d-flex flex-column text-center\">\n                <div className=\"d-flex flex-row justify-content-around main-trade-content\">\n                    <div className=\"d-flex flex-column text-center\">\n                        <div className=\"trade-money-label\">\n                            <u>Vous donnez {this.props.store.game.player_info[this.props.player].username}</u>\n                        </div>\n                        <div className=\"text-left\">\n                            Votre argent: ${yourCash}\n                        </div>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">$</span>\n                            </div>\n                            <input onChange={({target}) => {\n                                if (target.value > yourCash)\n                                    target.value = yourCash;\n                                this.props.store.setCurrentProposingTrade(\"moneyGiven\", target.value);\n                            }}\n                                   value={this.props.store.currentProposingTrade.moneyGiven === 0 ? \"\" : this.props.store.currentProposingTrade.moneyGiven}\n                                   type=\"number\"\n                                   min={0}\n                                   className=\"form-control\"\n                                   placeholder=\"Argent\"/>\n                        </div>\n                        <div className=\"player-properties-trade\">\n                            {this.props.store.playersProperties(playerIndex).filter(property => !property.hasHousesOnAny).map((property, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                        <div className=\"trade-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                        <div className=\"trade-prop-name\">{property.name}</div>\n                                        <div>\n                                            <input\n                                                onChange={() => {\n                                                    const index = this.props.store.currentProposingTrade.givenProperties.findIndex(el => el === property.index);\n                                                    if (index === -1) {\n                                                        this.props.store.setCurrentProposingTrade(\"givenProperties\", [...this.props.store.currentProposingTrade.givenProperties, property.index]);\n                                                    } else {\n                                                        this.props.store.setCurrentProposingTrade(\"givenProperties\", [...this.props.store.currentProposingTrade.givenProperties.slice(0, index), ...this.props.store.currentProposingTrade.givenProperties.slice(index + 1)]);\n                                                    }\n                                                }}\n                                                type=\"checkbox\" className=\"double\"/>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column text-center\">\n                        <div className=\"trade-money-label\">\n                            <u>Vous obtenez de {this.props.store.game.player_info[this.props.player].username}</u>\n                        </div>\n                        <div className=\"text-left\">\n                            Son argent: ${playersCash}\n                        </div>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">$</span>\n                            </div>\n                            <input onChange={({target}) => {\n                                if (target.value > playersCash)\n                                    target.value = playersCash;\n                                this.props.store.setCurrentProposingTrade(\"moneyTaken\", target.value);\n                            }}\n                                   value={this.props.store.currentProposingTrade.moneyTaken === 0 ? \"\" : this.props.store.currentProposingTrade.moneyTaken}\n                                   type=\"number\"\n                                   min={0}\n                                   className=\"form-control\"\n                                   placeholder=\"Argent\"/>\n                        </div>\n                        <div className=\"player-properties-trade\">\n                            {this.props.store.playersProperties(this.props.player).map((property, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                        <div className=\"trade-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                        <div className=\"trade-prop-name\">{property.name}</div>\n                                        <div>\n                                            <input\n                                                onChange={() => {\n                                                    const index = this.props.store.currentProposingTrade.takenProperties.findIndex(el => el === property.index);\n                                                    if (index === -1) {\n                                                        this.props.store.setCurrentProposingTrade(\"takenProperties\", [...this.props.store.currentProposingTrade.takenProperties, property.index]);\n                                                    } else {\n                                                        this.props.store.setCurrentProposingTrade(\"takenProperties\", [...this.props.store.currentProposingTrade.takenProperties.slice(0, index), ...this.props.store.currentProposingTrade.takenProperties.slice(index + 1)]);\n                                                    }\n                                                }}\n                                                type=\"checkbox\" className=\"double\"/>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <button\n                        disabled={(this.props.store.currentProposingTrade.moneyTaken === 0 || this.props.store.currentProposingTrade.moneyTaken === \"0\") && (this.props.store.currentProposingTrade.moneyGiven === 0 || this.props.store.currentProposingTrade.moneyGiven === \"0\") && this.props.store.currentProposingTrade.takenProperties.length === 0 && this.props.store.currentProposingTrade.givenProperties.length === 0}\n                        onClick={this.proposeTrade} type=\"button\"\n                        className=\"btn btn-primary\">Proposer un échange\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(TradeTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass TradesTab extends Component {\n    state = {\n        selectedTrade: 0,\n    };\n\n    componentDidMount() {\n        if (this.props.store.game.player_info && this.props.store.game.trades.length > 0) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            this.setState({selectedTrade: firstIndex});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.selectedTrade === -1) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            if (firstIndex !== -1) {\n                this.setState({selectedTrade: firstIndex});\n            }\n        }\n    }\n\n\n    render() {\n        if (this.props.store.game.player_info && this.props.store.game.trades.length > 0) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            if (firstIndex === -1 || this.state.selectedTrade === -1) {\n                return <div className=\"text-center\">Pas d'échanges</div>\n            }\n            const initiatingPlayer = this.props.store.game.player_info[this.props.store.game.trades[this.state.selectedTrade].initiating_player];\n            const tradingPlayer = this.props.store.game.player_info[this.props.store.game.trades[this.state.selectedTrade].trading_player];\n            const areYouInitiating = this.props.store.game.trades[this.state.selectedTrade].initiating_player === playerIndex;\n            const rightProperties = areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].taken_properties : this.props.store.game.trades[this.state.selectedTrade].given_properties;\n            const leftProperties = areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_properties : this.props.store.game.trades[this.state.selectedTrade].taken_properties;\n            const initiatingPlayerHasAllProperties = this.props.store.game.trades[this.state.selectedTrade].given_properties.every(index => {\n                const property = this.props.store.game.board[index];\n                const hasHousesOnAny = this.props.store.game.board.filter(el => el.group === this.props.store.game.board[index].group && el.upgrade && el.upgrades > 0).length > 0;\n                return property.player === this.props.store.game.trades[this.state.selectedTrade].initiating_player && !hasHousesOnAny;\n            });\n            const tradingPlayerHasAllProperties = this.props.store.game.trades[this.state.selectedTrade].taken_properties.every(index => {\n                const property = this.props.store.game.board[index];\n                const hasHousesOnAny = this.props.store.game.board.filter(el => el.group === this.props.store.game.board[index].group && el.upgrade && el.upgrades > 0).length > 0;\n                return property.player === this.props.store.game.trades[this.state.selectedTrade].trading_player && !hasHousesOnAny;\n            });\n            return (\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column text-center\">\n                        <u>Échanges:</u>\n                        <ul ref=\"trades\" className=\"list-group pending-trades\">\n                            {this.props.store.game.trades.map((trade, i) => ({\n                                ...trade,\n                                index: i\n                            })).filter(trade => trade.state === \"PROPOSED\" && (trade.initiating_player === playerIndex || trade.trading_player === playerIndex)).map((trade, i) => {\n                                return (\n                                    <li key={i}\n                                        onClick={() => this.setState({selectedTrade: trade.index})}\n                                        className={`list-group-item list-group-item-action ${trade.index === this.state.selectedTrade ? \"active\" : \"\"}`}>\n                                        De {this.props.store.game.player_info[trade.initiating_player].username}\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                            <div className=\"d-flex flex-row justify-content-around main-trade-content\">\n                                <div className=\"d-flex flex-column text-center trade-view-left\">\n                                    <div className=\"trade-money-label\">\n                                        <u>{areYouInitiating ? `Vous donnez à ${tradingPlayer.username}` : `Vous donnez à ${initiatingPlayer.username}`}</u>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">$</span>\n                                        </div>\n                                        <input type=\"number\"\n                                               readOnly\n                                               value={areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_money : this.props.store.game.trades[this.state.selectedTrade].taken_money}\n                                               className=\"form-control\"\n                                               placeholder=\"Trade Money\"/>\n                                    </div>\n                                    <div className=\"player-properties-trade\">\n                                        {leftProperties.map((i) => {\n                                            const property = this.props.store.game.board[i];\n                                            return (\n                                                <div key={i}\n                                                     className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                                    <div className=\"trade-properties-pic\" style={{\n                                                        backgroundImage: `url(${property.url})`,\n                                                    }}/>\n                                                    <div className=\"trade-prop-name\">{property.name}</div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column text-center trade-view-right\">\n                                    <div className=\"trade-money-label\">\n                                        <u>{areYouInitiating ? `Vous gagnez de ${tradingPlayer.username}` : `Vous gagnez de ${initiatingPlayer.username}`}</u>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">$</span>\n                                        </div>\n                                        <input type=\"number\"\n                                               readOnly\n                                               value={!areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_money : this.props.store.game.trades[this.state.selectedTrade].taken_money}\n                                               className=\"form-control\"\n                                               placeholder=\"Trade Money\"/>\n                                    </div>\n                                    <div className=\"player-properties-trade\">\n                                        {rightProperties.map((i) => {\n                                            const property = this.props.store.game.board[i];\n                                            return (\n                                                <div key={i}\n                                                     className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                                    <div className=\"trade-properties-pic\" style={{\n                                                        backgroundImage: `url(${property.url})`,\n                                                    }}/>\n                                                    <div className=\"trade-prop-name\">{property.name}</div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                {playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player &&\n                                (\n                                    <button\n                                        disabled={this.props.store.game.player_info[playerIndex].state === \"NOT_TURN\" || !tradingPlayerHasAllProperties || !initiatingPlayerHasAllProperties || tradingPlayer.money < this.props.store.game.trades[this.state.selectedTrade].taken_money || initiatingPlayer.money < this.props.store.game.trades[this.state.selectedTrade].given_money}\n                                        onClick={() => {\n                                            this.props.store.acceptTrade(this.state.selectedTrade);\n                                            this.setState({selectedTrade: firstIndex});\n                                            this.refs.trades.scrollTop = 0;\n                                        }} type=\"button\"\n                                        className=\"btn btn-primary\"\n                                        style={{marginRight: 10}}\n                                    >Accepter\n                                    </button>\n                                )}\n                                <button\n                                    disabled={this.props.store.game.player_info[playerIndex].state === \"NOT_TURN\"}\n                                    onClick={() => {\n                                        playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player ? this.props.store.rejectTrade(this.state.selectedTrade) : this.props.store.cancelTrade(this.state.selectedTrade);\n                                        this.setState({selectedTrade: firstIndex});\n                                        this.refs.trades.scrollTop = 0;\n                                    }}\n                                    type=\"button\"\n                                    className=\"btn btn-primary\">{`${playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player ? \"Rejeter\" : \"Annuler\"}`}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (<div className=\"text-center\">Pas d'échanges</div>);\n        }\n    }\n}\n\nexport default inject(\"store\")(observer(TradesTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MousedOverTileTab extends Component {\n    state = {};\n\n    render() {\n        const tile = this.props.store.game.board[this.props.store.mousedOverTile];\n        const playersOnTile = this.props.store.game.player_info.map((player, i) => ({\n            ...player,\n            index: i\n        })).filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.store.mousedOverTile);\n        let relatedTiles = [];\n        if (tile.type === \"rr\" || tile.type === \"utility\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.type === this.props.store.game.board[this.props.store.mousedOverTile].type && i !== this.props.store.mousedOverTile);\n        } else if (tile.type === \"property\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.group === this.props.store.game.board[this.props.store.mousedOverTile].group && i !== this.props.store.mousedOverTile);\n        }\n        return (\n            <div className=\"d-flex flex-column align-items-center justify-content-center tile-info-container\">\n                <div className=\"d-flex flex-row\">\n                    <div className=\"d-flex flex-column align-items-center justify-content-center\">\n                        <div className=\"tile-info-image-div\" style={{\n                            backgroundImage: `url(${tile.url})`,\n                        }}/>\n                        <div className=\"tile-info-name\">\n                            {tile.name}\n                        </div>\n                    </div>\n                    {(tile.type === \"property\" || tile.type === \"rr\" || tile.type === \"utility\") && (\n                        <div className=\"d-flex flex-row align-items-center justify-content-center\">\n                            {relatedTiles.map((relTile, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"d-flex flex-column align-items-center justify-content-center\">\n                                        <div className=\"rel-tile-info-image-div\" style={{\n                                            backgroundImage: `url(${relTile.url})`,\n                                        }}/>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )}\n                </div>\n                {(tile.type === \"chance\" || tile.type === \"chest\") && (\n                    <div>\n                        Atteri ici ou pioche une carte\n                    </div>\n                )}\n                {(tile.type === \"go\") && (\n                    <div>\n                        Passe ou atteri et gagne $200.\n                    </div>\n                )}\n                {(tile.type === \"lux-tax\") && (\n                    <div>\n                        Paye $75.\n                    </div>\n                )}\n                {(tile.type === \"income-tax\") && (\n                    <div>\n                        Paye $200 ou 10% de ton revenu net\n                    </div>\n                )}\n                {(tile.type === \"property\" || tile.type === \"utility\" || tile.type === \"rr\") && (\n                    <div className=\"d-flex flex-row tile-info-property justify-content-between\">\n                        <div className=\"d-flex flex-column tile-info-rents\">\n                            <div className=\"d-flex justify-content-between\">\n                                <div>Prix:</div>\n                                <div>${tile.cost}</div>\n                            </div>\n                            {tile.owned && (\n                                <div className=\"d-flex justify-content-between\">\n                                    <div>Loyer actuel:</div>\n                                    <div>${this.props.store.calcRentCostTile(this.props.store.mousedOverTile, true)}</div>\n                                </div>\n                            )}\n                            <div className=\"d-flex justify-content-between\">\n                                <div>Loyer de base:</div>\n                                <div>${this.props.store.calcRentCostTile(this.props.store.mousedOverTile, true)}</div>\n                            </div>\n                        </div>\n                        <div className=\"d-flex flex-column justify-content-between tile-info-upgrades\">\n                            {tile.type === \"property\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Coût de financement:</div>\n                                        <div>${tile.upgrade}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>1ère Maison:</div>\n                                        <div>${tile.rent[1]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>2ème Maison:</div>\n                                        <div>${tile.rent[2]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>3ème Maison:</div>\n                                        <div>${tile.rent[3]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>4ère Maison:</div>\n                                        <div>${tile.rent[4]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Hotel:</div>\n                                        <div>${tile.rent[5]}</div>\n                                    </div>\n                                </div>\n                            )}\n                            {tile.type === \"rr\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Un propriétaire:</div>\n                                        <div>$25</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Deux propriétaires:</div>\n                                        <div>$50</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Trois propriétaires:</div>\n                                        <div>$100</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Quatre propriétaires:</div>\n                                        <div>$200</div>\n                                    </div>\n                                </div>\n                            )}\n                            {tile.type === \"utility\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Un propriétaire:</div>\n                                        <div>$Dé×4</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Deux propriétaires:</div>\n                                        <div>$Dé×10</div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column mt-3 players-on-tile\">\n                    {playersOnTile.length > 0 ?\n                        <div>\n                            <span>Joueurs sur la case:</span>\n                            <ul>\n                                {playersOnTile.map((player, i) => {\n                                    return <li key={i}>{player.username} - ({player.index + 1})</li>\n                                })}\n                            </ul>\n                        </div>\n                        :\n                        <span>Pas de joueur ici.</span>\n                    }\n                    {tile.owned ?\n                        <div>\n                            <span>Appartient à: {this.props.store.game.player_info[tile.player].username}</span>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MousedOverTileTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport NavTabs from './NavTabs';\nimport MyInfoTab from './MyInfoTab';\nimport MyPropertiesTab from './MyPropertiesTab';\nimport Logs from './Logs';\nimport Actions from './Actions';\nimport PlayersTab from './PlayersTab';\nimport TradeTab from './TradeTab';\nimport TradesTab from './TradesTab';\nimport MousedOverTileTab from './MousedOverTileTab';\n\nclass MainView extends Component {\n    state = {\n        dropdownExpanded: false,\n        selectedTab: \"my_info\",\n        selectedPlayer: 1,\n    };\n\n    selectTab = (state) => {\n        this.setState(state);\n    };\n    changeDropDown = (state) => {\n        this.setState(state);\n    };\n\n    render() {\n        return (\n            <div className=\"main-view\">\n                {this.props.store.game && this.props.store.game.game_state !== \"NOT_STARTED\" &&\n                <div className=\"main-view-content\">\n                    {this.props.store.mousedOverTile !== null && (\n                        <MousedOverTileTab/>\n                    )}\n                    {this.props.store.mousedOverTile === null && (\n                        <>\n                            <NavTabs\n                                dropdownExpanded={this.state.dropdownExpanded}\n                                changeDropDown={this.changeDropDown}\n                                selectTab={this.selectTab}\n                                selectedTab={this.state.selectedTab}\n                            />\n                            {this.state.selectedTab === \"my_info\" && (\n                                <>\n                                    <MyInfoTab/>\n                                    <Actions/>\n                                    <Logs/>\n                                </>\n                            )}\n                            {this.state.selectedTab === \"my_properties\" && (\n                                <MyPropertiesTab/>\n                            )}\n                            {this.state.selectedTab === \"player_info\" && (\n                                <PlayersTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                            {this.state.selectedTab === \"player_trade\" && (\n                                <TradeTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                            {this.state.selectedTab === \"trades\" && (\n                                <TradesTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                        </>\n                    )}\n\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MainView));","import * as THREE from 'three';\n\n\nwindow.THREE = THREE; // THREE.OrbitControls expects THREE to be a global object\nrequire('three/examples/js/controls/OrbitControls');\n\n\nexport default {...THREE, OrbitControls: window.THREE.OrbitControls};","import THREE from '../three/three';\nimport { Board } from './board';\n\nexport class PropertyManager {\n\n    constructor(options) {\n        const {loadedHotelJson, loadedHouseJson, scene} = options;\n\n        this.scene = scene;\n        this.loadedHotelJson = loadedHotelJson;\n        this.loadedHouseJson = loadedHouseJson;\n        this.models = [];\n    }\n\n    buyLand(pos, tileId, playerIndex) {\n        const material = new THREE.MeshBasicMaterial({\n            map: new THREE.TextureLoader().load(`/static/images/player_${playerIndex}_mark.png`),\n            transparent: true\n        });\n        let square = new THREE.Mesh(new THREE.PlaneGeometry(1, 1), material);\n\n        const side = Board.tileIdToSide(tileId);\n        let x = pos[0], y = 0.01, z = pos[2];\n\n        square.scale.set(1.5, 1.5, 1.5);\n        square.position.set(x, y, z);\n        square.rotation.x = -Math.PI / 2.0;\n        square.rotation.z = -Math.PI / 2.0 * side;\n\n        this.scene.add(square);\n    }\n\n    buildHouse(pos, tileId) {\n        let loader = new THREE.ObjectLoader();\n        let model = loader.parse(this.loadedHouseJson);\n\n        const side = Board.tileIdToSide(tileId);\n\n        model.position.set(pos[0], PropertyManager.ELEVATION[PropertyManager.PROPERTY_HOUSE], pos[2]);\n        model.scale.set(...PropertyManager.SCALES[PropertyManager.PROPERTY_HOUSE]);\n        model.rotation.y = -Math.PI / 2.0 * (side + 3);\n        this.scene.add(model);\n\n        this.models.push(model);\n    }\n\n    buildHotel(pos, tileId) {\n        // Remove all houses first\n        for (let model of this.models) {\n            this.scene.remove(model);\n        }\n\n        let x = pos[0], y = PropertyManager.ELEVATION[PropertyManager.PROPERTY_HOTEL], z = pos[2];\n\n        let loader = new THREE.ObjectLoader();\n        let model = loader.parse(this.loadedHotelJson);\n        model.position.set(x, y, z);\n        model.scale.set(...PropertyManager.SCALES[PropertyManager.PROPERTY_HOTEL]);\n        this.scene.add(model);\n\n        this.models = [model];\n    }\n\n    getPropertyCount() {\n        return this.models.length;\n    }\n}\n\nPropertyManager.SCALES = [\n    [0.02, 0.02, 0.02],\n    [0.003, 0.003, 0.003]\n];\n\nPropertyManager.ELEVATION = [0.31, 0.0];\n\nPropertyManager.PROPERTY_HOUSE = 0;\nPropertyManager.PROPERTY_HOTEL = 1;\nPropertyManager.PROPERTY_OWNER_MARK = 2;\nPropertyManager.HOTEL_MARGIN = 0;\nPropertyManager.MARK_MARGIN = 0;","import { BoardController } from './board_controller';\nimport { PropertyManager } from './property_manager';\n\nexport class Board {\n\n    constructor() {\n        this.initBoard();\n    }\n\n    initBoard() {\n        this.board = [];\n        for (let row = 0; row < Board.SIZE; row++) {\n            let boardRow = [];\n            for (let col = 0; col < Board.SIZE; col++) {\n                boardRow.push({\n                    players: [false, false, false, false],\n                    propertyManager: null\n                })\n            }\n            this.board.push(boardRow);\n        }\n    }\n\n    updateTileInfo(tileId, tileInfo) {\n        const pos = Board.tileIdToPos(tileId);\n        const {type, action, playerIndex, options} = tileInfo;\n        switch (type) {\n            case BoardController.MODEL_PLAYER:\n                this.board[pos[0]][pos[1]].players[playerIndex] = (action === \"add\");\n                break;\n            case BoardController.MODEL_PROPERTY:\n                this.board[pos[0]][pos[1]].propertyManager = new PropertyManager(options);\n                break;\n        }\n    }\n\n    getTileInfo(tileId) {\n        const pos = Board.tileIdToPos(tileId);\n        return this.board[pos[0]][pos[1]];\n    }\n\n    static tileIdToPos(tileId) {\n        if (tileId < 10) {\n            return [10, 10 - tileId];\n        } else if (tileId < 20) {\n            return [20 - tileId, 0];\n        } else if (tileId < 30) {\n            return [0, tileId - 20];\n        } else {\n            return [tileId - 30, 10];\n        }\n    }\n\n    static posToTileId(row, col) {\n        if (row === 0) {\n            return 20 + col;\n        } else if (row === 10) {\n            return 10 - col;\n        } else if (col === 0) {\n            return 20 - row;\n        } else if (col === 10) {\n            return 30 + row;\n        } else {\n            return -1;\n        }\n    }\n\n    static tileIdToSide(tileId) {\n        if (tileId < 10) {\n            return Board.SIDE_BOTTOM;\n        } else if (tileId < 20) {\n            return Board.SIDE_LEFT;\n        } else if (tileId < 30) {\n            return Board.SIDE_TOP;\n        } else {\n            return Board.SIDE_RIGHT;\n        }\n    }\n}\n\nBoard.SIZE = 11;\n\nBoard.SIDE_TOP = 2;\nBoard.SIDE_LEFT = 1;\nBoard.SIDE_RIGHT = 3;\nBoard.SIDE_BOTTOM = 0;","import THREE from '../three/three';\n\nexport class Player {\n\n    constructor(options) {\n        const {index, modelUrl, scene, initPos, initTileId} = options;\n\n        this.scene = scene;\n        this.index = index;\n\n        this.modelUrl = modelUrl;\n        this.initPos = initPos;\n        this.tileId = initTileId;\n    }\n\n    load() {\n        return new Promise((resolve => {\n            new THREE.ObjectLoader().load(\n                this.modelUrl,\n\n                (obj) => {\n                    // Add the loaded object to the scene\n                    this.model = obj;\n                    this.model.position.set(this.initPos[0], Player.ELEVATION[this.index], this.initPos[2]);\n                    this.model.scale.set(...Player.SCALES[this.index]);\n                    this.scene.add(this.model);\n                },\n\n                // onProgress callback\n                (xhr) => {\n                    if (xhr.loaded === xhr.total) {\n                        console.log(this.modelUrl + \" loaded!\");\n                        resolve();\n                    }\n                },\n\n                // onError callback\n                (err) => {\n                    console.error(err);\n                });\n        }))\n    }\n\n    advanceTo(newTileId, newPos) {\n        this.model.position.set(newPos[0], Player.ELEVATION[this.index], newPos[2]);\n        this.tileId = newTileId;\n    }\n\n    getTileId() {\n        return this.tileId;\n    }\n}\n\nPlayer.SCALES = [\n    [0.04, 0.04, 0.04],\n    [1.5, 1.5, 1.5],\n    [0.03, 0.03, 0.03],\n    [0.03, 0.03, 0.03]\n];\n\nPlayer.ELEVATION = [2.5, 2.0, 0, 0];","import { Board} from './board';\r\nimport { PropertyManager } from './property_manager';\r\nimport { Player } from './player';\r\nimport THREE from '../three/three';\r\n\r\nexport class BoardController {\r\n\r\n    constructor(options) {\r\n        this.containerEl = options.containerEl;\r\n        this.assetsUrl = options.assetsUrl;\r\n\r\n        this.board = new Board();\r\n        this.players = [];\r\n    }\r\n\r\n    drawBoard(callback) {\r\n        this.initEngine();\r\n        this.initLights();\r\n        this.initMaterials();\r\n\r\n        this.initObjects(() => {\r\n            this.onAnimationFrame();\r\n\r\n            callback();\r\n        });\r\n    }\r\n\r\n    drawPlayers(number, initPos) {\r\n        let promiseList = [];\r\n        return new Promise((resolve => {\r\n            for (let i = 0; i < number; i++) {\r\n                let player = new Player({\r\n                    index: i,\r\n                    modelUrl: `${this.assetsUrl}/players/${i}/model.json`,\r\n                    scene: this.scene,\r\n                    initTileId: initPos[i],\r\n                    initPos: this.boardToWorld({\r\n                        tileId: initPos[i],\r\n                        type: BoardController.MODEL_PLAYER,\r\n                        total: number,\r\n                        index: i\r\n                    }),\r\n                });\r\n\r\n                this.board.updateTileInfo(initPos[i], {\r\n                    type: BoardController.MODEL_PLAYER,\r\n                    action: \"add\",\r\n                    playerIndex: i\r\n                });\r\n                this.players.push(player);\r\n                promiseList.push(player.load());\r\n            }\r\n\r\n            Promise.all(promiseList).then(() => {\r\n                resolve();\r\n            })\r\n        }))\r\n    }\r\n\r\n    movePlayer(index, newTileId) {\r\n        let currTileId = this.players[index].getTileId();\r\n        console.log(\"index and new tile id is: \" + currTileId.toString() + \" \" + newTileId.toString());\r\n\r\n        // Remove previous player position\r\n        this.board.updateTileInfo(currTileId, {\r\n            type: BoardController.MODEL_PLAYER,\r\n            action: \"remove\",\r\n            playerIndex: index\r\n        });\r\n\r\n        // Register new player position\r\n        this.board.updateTileInfo(newTileId, {\r\n            type: BoardController.MODEL_PLAYER,\r\n            action: \"add\",\r\n            playerIndex: index\r\n        });\r\n\r\n        // Animation: move the player\r\n        return new Promise((resolve => {\r\n            let playerMovementInterval = setInterval(() => {\r\n                currTileId += 1;\r\n                currTileId %= BoardController.TILE_MAX + 1;\r\n                const tileInfo = this.board.getTileInfo(currTileId);\r\n                const tilePlayerCount = tileInfo.players.reduce((a, b) => a + b, 0);\r\n\r\n                this.players[index].advanceTo(currTileId, this.boardToWorld({\r\n                    tileId: currTileId,\r\n                    type: BoardController.MODEL_PLAYER,\r\n                    total: tilePlayerCount + 1,\r\n                    index: tilePlayerCount\r\n                }));\r\n\r\n                if (currTileId === newTileId) {\r\n                    clearInterval(playerMovementInterval);\r\n                    resolve();\r\n                }\r\n            }, 200);\r\n        }));\r\n    }\r\n\r\n    addProperty(type, tileId) {\r\n        let tileInfo = this.board.getTileInfo(tileId);\r\n        const tilePropertyCount = tileInfo.propertyManager.getPropertyCount();\r\n\r\n        if (type === PropertyManager.PROPERTY_HOUSE) {\r\n            tileInfo.propertyManager.buildHouse(this.boardToWorld({\r\n                tileId: tileId,\r\n                type: BoardController.MODEL_PROPERTY,\r\n                total: tilePropertyCount + 2\r\n            }), tileId);\r\n        } else if (type === PropertyManager.PROPERTY_HOTEL) {\r\n            tileInfo.propertyManager.buildHotel(this.boardToWorld({\r\n                tileId: tileId,\r\n                type: BoardController.MODEL_PROPERTY,\r\n                total: 2\r\n            }), tileId);\r\n        }\r\n    }\r\n\r\n    addLandMark(playerIndex, tileId) {\r\n        let tileInfo = this.board.getTileInfo(tileId);\r\n        this.board.updateTileInfo(tileId, {\r\n            type: BoardController.MODEL_PROPERTY,\r\n            options: {\r\n                loadedHouseJson: this.houseModelJson,\r\n                loadedHotelJson: this.hotelModelJson,\r\n                scene: this.scene\r\n            }\r\n        });\r\n\r\n        tileInfo.propertyManager.buyLand(this.boardToWorld({\r\n            tileId: tileId,\r\n            type: BoardController.MODEL_PROPERTY,\r\n            total: 1\r\n        }), tileId, playerIndex);\r\n    }\r\n\r\n    initEngine() {\r\n        let viewWidth = this.containerEl.offsetWidth;\r\n        let viewHeight = this.containerEl.offsetHeight;\r\n\r\n        // instantiate the WebGL this.renderer\r\n        this.renderer = new THREE.WebGLRenderer({\r\n            antialias: true,\r\n            alpha: true\r\n        });\r\n        this.renderer.setSize(viewWidth, viewHeight);\r\n        this.renderer.setPixelRatio(window.devicePixelRatio);\r\n        // create the this.scene\r\n        this.scene = new THREE.Scene();\r\n\r\n        // create this.camera\r\n        this.camera = new THREE.PerspectiveCamera(25, viewWidth / viewHeight, 1, 1000);\r\n        this.camera.position.set(BoardController.SQUARE_SIZE * Board.SIZE / 2, 100, 160);\r\n        this.cameraController = new THREE.OrbitControls(this.camera, this.containerEl);\r\n        this.cameraController.center = new THREE.Vector3(BoardController.SQUARE_SIZE * Board.SIZE / 2, -6, BoardController.SQUARE_SIZE * Board.SIZE / 2);\r\n\r\n        this.scene.add(this.camera);\r\n\r\n        this.containerEl.appendChild(this.renderer.domElement);\r\n    }\r\n\r\n    initLights() {\r\n        this.lights = {};\r\n\r\n        // top light\r\n        this.lights.topLight = new THREE.PointLight();\r\n        this.lights.topLight.position.set(BoardController.SQUARE_SIZE * Board.SIZE / 2, 150, BoardController.SQUARE_SIZE * Board.SIZE / 2);\r\n        this.lights.topLight.intensity = 0.4;\r\n\r\n        // white's side light\r\n        this.lights.whiteSideLight = new THREE.SpotLight();\r\n        this.lights.whiteSideLight.position.set(BoardController.SQUARE_SIZE * Board.SIZE / 2, 100, BoardController.SQUARE_SIZE * Board.SIZE / 2 - 300);\r\n        this.lights.whiteSideLight.intensity = 1;\r\n        this.lights.whiteSideLight.shadow.camera.Fov = 55;\r\n\r\n        // black's side light\r\n        this.lights.blackSideLight = new THREE.SpotLight();\r\n        this.lights.blackSideLight.position.set(BoardController.SQUARE_SIZE * Board.SIZE / 2, 100, BoardController.SQUARE_SIZE * Board.SIZE / 2 + 300);\r\n        this.lights.blackSideLight.intensity = 1;\r\n        this.lights.blackSideLight.shadow.camera.Fov = 55;\r\n\r\n        // light that will follow the this.camera position\r\n        this.lights.movingLight = new THREE.PointLight(0xf9edc9);\r\n        this.lights.movingLight.position.set(0, 20, 0);\r\n        this.lights.movingLight.intensity = 0.5;\r\n        this.lights.movingLight.distance = 500;\r\n\r\n        // add the this.lights in the this.scene\r\n        this.scene.add(this.lights.topLight);\r\n        this.scene.add(this.lights.whiteSideLight);\r\n        this.scene.add(this.lights.blackSideLight);\r\n        this.scene.add(this.lights.movingLight);\r\n    }\r\n\r\n    initMaterials() {\r\n        this.materials = {};\r\n\r\n        // board material\r\n        this.materials.boardMaterial = new THREE.MeshLambertMaterial({\r\n            map: new THREE.TextureLoader().load(`${this.assetsUrl}/board_texture.jpg`)\r\n        });\r\n\r\n        // ground material\r\n        this.materials.groundMaterial = new THREE.MeshBasicMaterial({\r\n            transparent: true,\r\n            map: new THREE.TextureLoader().load(`${this.assetsUrl}/ground.png`)\r\n        });\r\n\r\n        const defaultTileMaterial = new THREE.MeshLambertMaterial({\r\n            map: new THREE.TextureLoader().load(`${this.assetsUrl}/tiles/-1.png`)\r\n        });\r\n\r\n        // tile material\r\n        this.materials.tileMaterial = [];\r\n        for (let row = 0; row < Board.SIZE; row++) {\r\n            let rowMaterial = [];\r\n            for (let col = 0; col < Board.SIZE; col++) {\r\n                const tileModelIndex = Board.posToTileId(row, col);\r\n                const tileMaterial = (tileModelIndex === -1) ? defaultTileMaterial : new THREE.MeshLambertMaterial({\r\n                    map: new THREE.TextureLoader().load(`${this.assetsUrl}/tiles/${tileModelIndex}.png`)\r\n                });\r\n                rowMaterial.push(tileMaterial);\r\n            }\r\n            this.materials.tileMaterial.push(rowMaterial);\r\n        }\r\n    }\r\n\r\n    initObjects(callback) {\r\n        let loader = new THREE.Loader();\r\n        let totalObjectsToLoad = 3; // board\r\n        let loadedObjects = 0;\r\n\r\n        const checkLoading = () => {\r\n            loadedObjects += 1;\r\n            if (loadedObjects === totalObjectsToLoad && callback) {\r\n                callback();\r\n            }\r\n        };\r\n\r\n        // load board\r\n        loader.load(`./board.js`, (geom) => {\r\n            this.boardModel = new THREE.Mesh(geom, this.materials.boardMaterial);\r\n            this.boardModel.position.y = -0.02;\r\n\r\n            this.scene.add(this.boardModel);\r\n\r\n            checkLoading();\r\n        });\r\n\r\n        // add ground\r\n        this.groundModel = new THREE.Mesh(new THREE.PlaneGeometry(100, 100, 1, 1), this.materials.groundMaterial);\r\n        this.groundModel.position.set(BoardController.SQUARE_SIZE * Board.SIZE / 2, -1.52, BoardController.SQUARE_SIZE * Board.SIZE / 2);\r\n        this.groundModel.rotation.x = -90 * Math.PI / 180;\r\n        this.scene.add(this.groundModel);\r\n\r\n        for (let row = 0; row < Board.SIZE; row++) {\r\n            for (let col = 0; col < Board.SIZE; col++) {\r\n                let square = new THREE.Mesh(new THREE.PlaneGeometry(BoardController.SQUARE_SIZE, BoardController.SQUARE_SIZE, 1, 1), this.materials.tileMaterial[row][col]);\r\n\r\n                square.position.x = col * BoardController.SQUARE_SIZE + BoardController.SQUARE_SIZE / 2;\r\n                square.position.z = row * BoardController.SQUARE_SIZE + BoardController.SQUARE_SIZE / 2;\r\n                square.position.y = -0.01;\r\n\r\n                square.rotation.x = -90 * Math.PI / 180;\r\n\r\n                this.scene.add(square);\r\n            }\r\n        }\r\n\r\n        // pre-load house model\r\n        let requestModelJson = (type) => {\r\n            let request = new XMLHttpRequest();\r\n            request.open(\"GET\", `${this.assetsUrl}/${type}/model.json`, false);\r\n            request.send(null);\r\n\r\n            checkLoading();\r\n            return JSON.parse(request.responseText);\r\n        };\r\n\r\n        this.houseModelJson = requestModelJson(\"house\");\r\n        this.hotelModelJson = requestModelJson(\"hotel\");\r\n    }\r\n\r\n    onAnimationFrame() {\r\n        requestAnimationFrame(() => this.onAnimationFrame());\r\n\r\n        this.cameraController.update();\r\n\r\n        // update moving light position\r\n        this.lights.movingLight.position.x = this.camera.position.x;\r\n        this.lights.movingLight.position.z = this.camera.position.z;\r\n\r\n        this.renderer.render(this.scene, this.camera);\r\n    }\r\n\r\n    resize() {\r\n        this.camera.aspect = window.innerWidth / window.innerHeight;\r\n        this.camera.updateProjectionMatrix();\r\n\r\n        this.renderer.setSize(window.innerWidth, window.innerHeight);\r\n    }\r\n\r\n    boardToWorld(options) {\r\n        const {tileId, type, total, index} = options;\r\n        const pos = Board.tileIdToPos(tileId);\r\n        let x = 0.5 + pos[1];\r\n        let z = 0.5 + pos[0];\r\n\r\n        const side = Board.tileIdToSide(tileId);\r\n\r\n        if (type === BoardController.MODEL_PLAYER) {\r\n            if (total === 1) {\r\n                return [x * BoardController.SQUARE_SIZE, 0, z * BoardController.SQUARE_SIZE];\r\n            } else {\r\n                switch (side) {\r\n                    case Board.SIDE_TOP:\r\n                        z -= BoardController.MODEL_PLAYER_MARGIN;\r\n                        x = (index % 2 === 0) ? x + BoardController.MODEL_PLAYER_OFFSET : x - BoardController.MODEL_PLAYER_OFFSET;\r\n                        if (total > 2) z = (index < 2) ? z + BoardController.MODEL_PLAYER_OFFSET : z - BoardController.MODEL_PLAYER_OFFSET;\r\n                        break;\r\n                    case Board.SIDE_BOTTOM:\r\n                        z += BoardController.MODEL_PLAYER_MARGIN;\r\n                        x = (index % 2 === 0) ? x - BoardController.MODEL_PLAYER_OFFSET : x + BoardController.MODEL_PLAYER_OFFSET;\r\n                        if (total > 2) z = (index < 2) ? z - BoardController.MODEL_PLAYER_OFFSET : z + BoardController.MODEL_PLAYER_OFFSET;\r\n                        break;\r\n                    case Board.SIDE_LEFT:\r\n                        x -= BoardController.MODEL_PLAYER_MARGIN;\r\n                        z = (index % 2 === 0) ? z - BoardController.MODEL_PLAYER_OFFSET : z + BoardController.MODEL_PLAYER_OFFSET;\r\n                        if (total > 2) x = (index < 2) ? x + BoardController.MODEL_PLAYER_OFFSET : x - BoardController.MODEL_PLAYER_OFFSET;\r\n                        break;\r\n                    case Board.SIDE_RIGHT:\r\n                        x += BoardController.MODEL_PLAYER_MARGIN;\r\n                        z = (index % 2 === 0) ? z + BoardController.MODEL_PLAYER_OFFSET : z - BoardController.MODEL_PLAYER_OFFSET;\r\n                        if (total > 2) x = (index < 2) ? x - BoardController.MODEL_PLAYER_OFFSET : x + BoardController.MODEL_PLAYER_OFFSET;\r\n                        break;\r\n                }\r\n            }\r\n        } else if (type === BoardController.MODEL_PROPERTY) {\r\n            switch (side) {\r\n                case Board.SIDE_TOP:\r\n                    z += BoardController.MODEL_PROPERTY_TOP_MARGIN;\r\n                    x += BoardController.MODEL_PROPERTY_LEFT_MARGIN;\r\n                    x -= (total - 1) * BoardController.MODEL_PROPERTY_MARGIN + BoardController.MODEL_PROPERTY_LEFT_OFFSET * (total > 1);\r\n                    break;\r\n                case Board.SIDE_BOTTOM:\r\n                    z -= BoardController.MODEL_PROPERTY_TOP_MARGIN;\r\n                    x -= BoardController.MODEL_PROPERTY_LEFT_MARGIN;\r\n                    x += (total - 1) * BoardController.MODEL_PROPERTY_MARGIN + BoardController.MODEL_PROPERTY_LEFT_OFFSET * (total > 1);\r\n                    break;\r\n                case Board.SIDE_LEFT:\r\n                    x += BoardController.MODEL_PROPERTY_TOP_MARGIN;\r\n                    z -= BoardController.MODEL_PROPERTY_LEFT_MARGIN;\r\n                    z += (total - 1) * BoardController.MODEL_PROPERTY_MARGIN + BoardController.MODEL_PROPERTY_LEFT_OFFSET * (total > 1);\r\n                    break;\r\n                case Board.SIDE_RIGHT:\r\n                    x -= BoardController.MODEL_PROPERTY_TOP_MARGIN;\r\n                    z += BoardController.MODEL_PROPERTY_LEFT_MARGIN;\r\n                    z -= (total - 1) * BoardController.MODEL_PROPERTY_MARGIN + BoardController.MODEL_PROPERTY_LEFT_OFFSET * (total > 1);\r\n                    break;\r\n            }\r\n        }\r\n        return [x * BoardController.SQUARE_SIZE, 0, z * BoardController.SQUARE_SIZE];\r\n    }\r\n}\r\n\r\nBoardController.SQUARE_SIZE = 7.273;\r\nBoardController.MODEL_PLAYER = 0;\r\nBoardController.MODEL_PROPERTY = 1;\r\nBoardController.MODEL_PLAYER_OFFSET = 0.2;\r\nBoardController.MODEL_PLAYER_MARGIN = 0.1;\r\nBoardController.MODEL_PROPERTY_TOP_MARGIN = 0.39;\r\nBoardController.MODEL_PROPERTY_LEFT_MARGIN = 0.37;\r\nBoardController.MODEL_PROPERTY_MARGIN = 0.24;\r\nBoardController.MODEL_PROPERTY_LEFT_OFFSET = 0.05;\r\nBoardController.TILE_MAX = 39;\r\n","import { BoardController } from './board_controller';\r\nimport { PropertyManager } from './property_manager';\r\n\r\nexport class GameController {\r\n\r\n    constructor(options) {\r\n        this.initGame(options);\r\n    }\r\n\r\n    initGame(options) {\r\n        const {containerEl, assetsUrl, onBoardPainted} = options;\r\n\r\n        this.boardController = new BoardController({\r\n            containerEl: containerEl,\r\n            assetsUrl: assetsUrl\r\n        });\r\n\r\n        this.boardController.drawBoard(onBoardPainted);\r\n    }\r\n\r\n    addPlayer(count, initPos) {\r\n        return this.boardController.drawPlayers(count, initPos);\r\n    }\r\n\r\n    movePlayer(playerIndex, newTileId) {\r\n        // TODO: change viewport\r\n        this.boardController.movePlayer(playerIndex, newTileId);\r\n    }\r\n\r\n    addProperty(type, tileId, playerIndex) {\r\n        if (type === PropertyManager.PROPERTY_OWNER_MARK) {\r\n            this.boardController.addLandMark(playerIndex, tileId);\r\n        } else {\r\n            this.boardController.addProperty(type, tileId);\r\n        }\r\n    }\r\n\r\n    resizeBoard() {\r\n        this.boardController.resize();\r\n    }\r\n}\r\n","export class AudioManager {\n    constructor() {\n        const audioList = [{\n            key: \"background\",\n            loop: true,\n            volume: 0.6\n        }, {\n            key: \"hover\",\n            loop: false,\n            volume: 1.0\n        }, {\n            key: \"dice\",\n            loop: false,\n            volume: 1.0\n        }, {\n            key: \"move\",\n            loop: false,\n            volume: 1.0\n        }, {\n            key: \"build\",\n            loop: false,\n            volume: 1.0\n        }, {\n            key: \"cash\",\n            loop: false,\n            volume: 1.0\n        }];\n\n        this.audioPlayers = {};\n        for (let audio of audioList) {\n            this.audioPlayers[audio.key] = new Audio(`/static/sound/${audio.key}.mp3`);\n            if (audio.loop) this.audioPlayers[audio.key].loop = true;\n            if (audio.volume) this.audioPlayers[audio.key].volume = audio.volume;\n        }\n\n        this.playing = true;\n    }\n\n    play(audio) {\n        if (!this.playing) return;\n        this.audioPlayers[audio].play();\n    }\n\n    mute() {\n        this.playing = !this.playing;\n        this.audioPlayers[\"background\"].volume = 0.6 * this.playing;\n    }\n}","import { GameController } from '../game_views/game_controller';\nimport { PropertyManager } from '../game_views/property_manager';\nimport { AudioManager } from '../utils/audio_manager';\n\nexport class GameView {\n    constructor() {\n        this.audioManager = new AudioManager();\n        this.audioManager.play(\"background\");\n\n        this.gameInProcess = true;\n    }\n\n    initComponents(container) {\n        this.initBoard(container);\n    }\n\n    initBoard(container) {\n        this.gameController = new GameController({\n            // The DOM element in which the drawing will happen.\n            containerEl: container,\n\n            // The base URL from where the BoardController will load its data.\n            assetsUrl: \"/static/3d_assets\",\n\n            onBoardPainted: this.initWebSocket.bind(this)\n        });\n\n        window.addEventListener(\"resize\", () => {\n            this.gameController.resizeBoard();\n        }, false);\n    }\n\n    initWebSocket() {\n        this.socket = new WebSocket(`ws://${window.location.host}/game/${this.hostName}`);\n\n        this.socket.onmessage = (event) => {\n            const message = JSON.parse(event.data);\n            this.handleStatusChange(message);\n        };\n    }\n\n    onDiceRolled() {\n        const notifyServer = () => {\n            this.socket.send(JSON.stringify({\n                action: \"roll\"\n            }));\n        };\n        setTimeout(notifyServer, 2000);\n    }\n\n    handleStatusChange(message) {\n        const messageHandlers = {\n            \"init\": this.handleInit,\n            \"add_err\": this.handleAddErr,\n            \"roll_res\": this.handleRollRes,\n            \"buy_land\": this.handleBuyLand,\n            \"construct\": this.handleConstruct,\n            \"cancel_decision\": this.handleCancel,\n            \"game_end\": this.handleGameEnd,\n            \"chat\": this.handleChat,\n        };\n\n        if (!this.gameInProcess) return;\n\n        messageHandlers[message.action].bind(this)(message);\n    }\n\n    /*\n    * Init game status, called after ws.connect\n    * players: @see initPlayers\n    * amount: @see changeCashAmount\n    * */\n    initGame(players, amount, posChange) {\n        // Init players\n        this.initPlayers(players, posChange);\n\n        // Init cash amount\n        this.changeCashAmount(amount);\n    }\n\n    /*\n    * Display players on the top\n    * players: [{\n    *   fullName: string, // user full name\n    *   userName: string, // username\n    *   avatar: string // user avatar url\n    * }]\n    * */\n    initPlayers(players, initPos) {\n        this.players = players;\n        this.currentPlayer = null;\n\n        for (let i = 0; i < players.length; i++) {\n            if (this.userName === players[i].userName) this.myPlayerIndex = i;\n            const avatarTemplate = players[i].avatar ? `<img class=\"user-avatar\" src=\"${players[i].avatar}\">`\n                : `<div class=\"user-group-name\">${players[i].fullName.charAt(0)}</div>`;\n\n            this.$usersContainer.innerHTML += `\n                <div id=\"user-group-${i}\" class=\"user-group\" style=\"background: ${GameView.PLAYERS_COLORS[i]}\">\n                    <a href=\"/monopoly/profile/${players[i].userName}\" target=\"_blank\">\n                        ${avatarTemplate}\n                    </a>\n                    <span class=\"user-cash\">\n                        <div class=\"monopoly-cash\">M</div>\n                        <div class=\"user-cash-num\">1500</div>\n                    </span>\n                    <img class=\"user-role\" src=\"/static/images/player_${i}.png\">\n                </div>`;\n        }\n\n        this.gameLoadingPromise = this.gameController.addPlayer(players.length, initPos);\n    }\n\n    /*\n    * Change the cash balance\n    * amounts: [int]\n    * */\n    changeCashAmount(amounts) {\n        for (let i in amounts) {\n            const $cashAmount = document.querySelector(`#user-group-${i} .user-cash-num`);\n            $cashAmount.innerText = (amounts[i] >= 0) ? amounts[i] : 0;\n        }\n    }\n\n    /*\n    * Change player\n    * nextPlayer: int,\n    * onDiceRolled: function\n    * */\n    changePlayer(nextPlayer, onDiceRolled) {\n        // update user indicator\n        if (this.currentPlayer !== null) {\n            let $currentUserGroup = document.getElementById(`user-group-${this.currentPlayer}`);\n            $currentUserGroup.classList.remove(\"active\");\n        }\n\n        let $nextUserGroup = document.getElementById(`user-group-${nextPlayer}`);\n        $nextUserGroup.classList.add(\"active\");\n\n        this.currentPlayer = nextPlayer;\n        let title = (this.currentPlayer === this.myPlayerIndex) ? \"Your Turn!\" : \"\";\n\n        console.log(this)\n        \n\n        // role dice\n        const button = (nextPlayer !== this.myPlayerIndex) ? [] :\n            [{\n                text: \"Roll\",\n                callback: () => {\n                    document.getElementById(\"roll\").checked = true;\n                    document.querySelector(\"#modal-buttons-container button\").disabled = true;\n                    document.querySelector(\"#modal-buttons-container button\").innerText = \"Hold on...\";\n\n                    this.audioManager.play(\"dice\");\n\n                    onDiceRolled();\n                }\n            },\n            {\n                text: \"Exchange\",\n                callback: () => {\n                    console.log('Yeaaahh')\n                }\n            }];\n        this.showModal(nextPlayer, title, \"\", this.diceMessage, button);\n    }\n\n    /*\n    * Display a pop-up modal\n    * message: a snippet of text or HTML\n    * playerIndex: int,\n    * buttons: [{\n    *   text: string, // \"button text\"\n    *   callback: function\n    * }],\n    * displayTime: int // seconds to display\n    * */\n    showModal(playerIndex, title, subTitle, message, buttons, displayTime) {\n        return new Promise(resolve => {\n            if (playerIndex === null) {\n                this.$modalAvatar.src = GameView.DEFAULT_AVATAR;\n            } else {\n                this.$modalAvatar.src = `/static/images/player_${playerIndex}.png`;\n                this.$modalAvatar.style.background = GameView.PLAYERS_COLORS[playerIndex];\n            }\n\n            if (playerIndex === this.myPlayerIndex) {\n                this.$modalAvatar.classList.add(\"active\");\n            } else {\n                this.$modalAvatar.classList.remove(\"active\");\n            }\n\n            this.$modalMessage.innerHTML = message;\n            this.$modalButtons.innerHTML = \"\";\n\n            this.$modalTitle.innerText = title;\n            this.$modalSubTitle.innerText = subTitle;\n\n            for (let i in buttons) {\n                let button = document.createElement(\"button\");\n                button.classList.add(\"large-button\");\n                button.id = `modal-button-${i}`;\n                button.innerText = buttons[i].text;\n\n                button.addEventListener(\"click\", () => {\n                    buttons[i].callback();\n                    resolve();\n                });\n\n                button.addEventListener(\"mouseover\", () => {\n                    this.audioManager.play(\"hover\");\n                });\n\n                this.$modalButtons.appendChild(button);\n            }\n\n            this.$modalCard.classList.remove(\"hidden\");\n            this.$modalCard.classList.remove(\"modal-hidden\");\n\n            // hide modal after a period of time if displayTime is set\n            if (displayTime !== undefined && displayTime > 0) {\n                setTimeout(async () => {\n                    await this.hideModal(true);\n                    resolve();\n                }, displayTime * 1000);\n            } else {\n                resolve();\n            }\n        });\n    }\n\n    /*\n    * Hide the modal\n    * */\n    hideModal(delayAfter) {\n        return new Promise((resolve => {\n            this.$modalCard.classList.add(\"modal-hidden\");\n            if (delayAfter === true) {\n                setTimeout(() => {\n                    resolve();\n                }, 500);\n            } else {\n                resolve();\n            }\n        }))\n    }\n\n    async handleInit(message) {\n        let players = message.players;\n        let changeCash = message.changeCash;\n        let nextPlayer = message.nextPlayer;\n        let posChange = message.posChange;\n        let eventMsg = message.decision;\n        let title = message.title;\n        let landname = message.landname;\n        let owners = message.owners;\n        let houses = message.houses;\n        this.initGame(players, changeCash, posChange);\n\n        await this.gameLoadingPromise;\n        await this.hideModal(true);\n\n        for (let i = 0; i < owners.length; i++) {\n            if (owners[i] !== null) {\n                this.gameController.addProperty(PropertyManager.PROPERTY_OWNER_MARK, i, owners[i]);\n            }\n        }\n\n        for (let i = 0; i < houses.length; i++) {\n            if (houses[i] === 4) {\n                this.gameController.addProperty(PropertyManager.PROPERTY_HOTEL, i);\n            }\n            else {\n                for (let building_num = 0; building_num < houses[i]; building_num++) {\n                    this.gameController.addProperty(PropertyManager.PROPERTY_HOUSE, i);\n                }\n            }\n        }\n\n        if (message.waitDecision === \"false\") {\n            this.changePlayer(nextPlayer, this.onDiceRolled.bind(this));\n        } else {\n            const buttons = (this.myPlayerIndex === nextPlayer) ? [{\n                text: \"Buy\",\n                callback: this.confirmDecision.bind(this)\n            }, {\n                text: \"No\",\n                callback: this.cancelDecision.bind(this)\n            }] : [];\n            eventMsg = this.players[nextPlayer].userName + \" \" + eventMsg;\n            this.showModal(nextPlayer, title, landname, eventMsg, buttons);\n        }\n    }\n\n\n    async handleAddErr() {\n        await this.showModal(null, \"Permission Denied\", \"Game Not Found\", \"Navigating back... Create your own game with your friends!\", [], 5);\n        window.location = `http://${window.location.host}/monopoly/join`;\n    }\n\n\n    async handleRollRes(message) {\n        let currPlayer = message.curr_player;\n        let nextPlayer = message.next_player;\n        let steps = message.steps;\n        let newPos = message.new_pos;\n        let eventMsg = message.result;\n        let title = message.title;\n        let landname = message.landname;\n        let rollResMsg = this.players[currPlayer].userName + \" gets a roll result \" + steps.toString();\n\n        await this.showModal(currPlayer, this.players[currPlayer].userName + \" got \" + steps.toString(), \"\", \"\", [], 2);\n\n        await this.gameController.movePlayer(currPlayer, newPos);\n\n        this.audioManager.play(\"move\");\n\n        if (message.bypass_start === \"true\") {\n            let eventMsg = this.players[currPlayer].userName + \" has passed the start point, reward 200.\";\n            if (message.is_cash_change !== \"true\") {\n                let cash = message.curr_cash;\n                this.changeCashAmount(cash);\n            }\n            await this.showModal(currPlayer, \"Get Reward\", \"Start point\", eventMsg, [], 2);\n        }\n\n        if (message.is_option === \"true\") {\n            const buttons = (this.myPlayerIndex === currPlayer) ? [{\n                text: \"Buy\",\n                callback: this.confirmDecision.bind(this)\n            }, {\n                text: \"No\",\n                callback: this.cancelDecision.bind(this)\n            }] : [];\n\n            this.showModal(currPlayer, title, landname, this.players[currPlayer].userName + eventMsg, buttons);\n        } else {\n            if (message.is_cash_change === \"true\") {\n                await this.showModal(currPlayer, title, landname, this.players[currPlayer].userName + eventMsg, [], 3);\n                let cash = message.curr_cash;\n                this.changeCashAmount(cash);\n                this.audioManager.play(\"cash\");\n                this.changePlayer(nextPlayer, this.onDiceRolled.bind(this));\n            } else if (message.new_event === \"true\") {\n                await this.showModal(currPlayer, title, landname, this.players[currPlayer].userName + eventMsg, [], 3);\n                this.changePlayer(nextPlayer, this.onDiceRolled.bind(this));\n            } else {\n                this.changePlayer(nextPlayer, this.onDiceRolled.bind(this));\n            }\n        }\n\n    }\n\n    handleBuyLand(message) {\n        const {curr_player, curr_cash, tile_id} = message;\n        this.changeCashAmount(curr_cash);\n        this.gameController.addProperty(PropertyManager.PROPERTY_OWNER_MARK, tile_id, curr_player);\n        let next_player = message.next_player;\n        this.changePlayer(next_player, this.onDiceRolled.bind(this));\n    }\n\n    handleConstruct(message) {\n        let curr_cash = message.curr_cash;\n        let tile_id = message.tile_id;\n        this.changeCashAmount(curr_cash);\n        if (message.build_type === \"house\") {\n            this.gameController.addProperty(PropertyManager.PROPERTY_HOUSE, tile_id);\n        } else {\n            this.gameController.addProperty(PropertyManager.PROPERTY_HOTEL, tile_id);\n        }\n        this.changePlayer(message.next_player, this.onDiceRolled.bind(this));\n\n        this.audioManager.play(\"build\");\n    }\n\n    handleCancel(message) {\n        let next_player = message.next_player;\n        this.changePlayer(next_player, this.onDiceRolled.bind(this));\n    }\n\n    async handleGameEnd(message) {\n        this.gameInProcess = false;\n\n        let result = [];\n        // let loser = message.loser;\n        let all_asset = message.all_asset;\n        for (let k = 0; k < all_asset.length; k++) {\n            let big_asset = -1e20;\n            let big_index = 0;\n            for (let i = 0; i < all_asset.length; i++) {\n                if (all_asset[i] === null) {\n                    continue;\n                }\n                if (big_asset < all_asset[i]) {\n                    big_asset = all_asset[i];\n                    big_index = i;\n                }\n            }\n            result.push({\n                playerIndex: big_index,\n                score: big_asset,\n            });\n            all_asset.splice(big_index, 1, null);\n        }\n        this.showScoreboard(result);\n    }\n\n    handleChat(message) {\n        let sender = message.sender;\n        let content = message.content;\n        this.addChatMessage(sender, content);\n    }\n\n    async confirmDecision() {\n        this.socket.send(JSON.stringify({\n            action: \"confirm_decision\",\n            hostname: this.hostName,\n        }));\n\n        this.audioManager.play(\"cash\");\n        await this.hideModal(true);\n    }\n\n    async cancelDecision() {\n        this.socket.send(JSON.stringify({\n            action: \"cancel_decision\",\n            hostname: this.hostName,\n        }));\n        await this.hideModal(true);\n    }\n\n    /*\n    * Add a chat message\n    * playerIndex: int\n    * message: string\n    * */\n    addChatMessage(playerIndex, message) {\n        let messageElement = document.createElement(\"div\");\n        messageElement.classList.add(\"chat-message\");\n        messageElement.innerHTML = `\n            <img class=\"chat-message-avatar\" src=\"/static/images/player_${playerIndex}.png\">\n            <span class=\"chat-message-content\">${message}</span>`;\n        this.$chatMessageContainer.appendChild(messageElement);\n    }\n\n    sendMessage() {\n        const message = this.$chatMessageToSend.value;\n        this.socket.send(JSON.stringify({\n            action: \"chat\",\n            from: this.myPlayerIndex,\n            content: message,\n        }));\n        this.$chatMessageToSend.value = \"\";\n    }\n\n    /*\n    * ScoreList should be sorted\n    * [{\n    *   playerIndex: int,\n    *   score: int\n    * }]\n    * */\n    showScoreboard(scoreList) {\n        let scoreboardTemplate = `<div id=\"scoreboard\">`;\n        for (let index in scoreList) {\n            let rank = parseInt(index) + 1;\n            scoreboardTemplate += `\n                <div class=\"scoreboard-row\">\n                    <span class=\"scoreboard-ranking\">${rank}</span>\n                    <img class=\"chat-message-avatar\" src=\"${this.players[scoreList[index].playerIndex].avatar}\">\n                    <span class=\"scoreboard-username\">${this.players[scoreList[index].playerIndex].fullName}</span>\n                    <div class=\"monopoly-cash\">M</div>\n                    <span class=\"scoreboard-score\">${scoreList[index].score}</span>\n                </div>`;\n        }\n        scoreboardTemplate += \"</div>\";\n        this.$modalCardContent.classList.add(\"scoreboard-bg\");\n        this.showModal(null, \"Scoreboard\", \"Good Game!\", scoreboardTemplate, [{\n            text: \"Start a New Game\",\n            callback: () => {\n                window.location = `http://${window.location.host}/monopoly/join`;\n            }\n        }]);\n    }\n\n    switchAudio() {\n        if (this.audioManager.playing) {\n            this.$audioControl.classList.add(\"control-off\");\n        } else {\n            this.$audioControl.classList.remove(\"control-off\");\n        }\n        this.audioManager.mute();\n    }\n\n    showHelp() {\n        this.showingHelp = !this.showingHelp;\n\n        if (this.showingHelp) {\n            this.$helpControl.classList.remove(\"control-off\");\n            this.$helpOverlay.classList.remove(\"hidden\");\n        } else {\n            this.$helpControl.classList.add(\"control-off\");\n            this.$helpOverlay.classList.add(\"hidden\");\n        }\n    }\n\n    endGame() {\n        this.socket.send(JSON.stringify({\n            action: \"end_game\",\n        }));\n    }\n\n    // async handleGameEnd() {\n    //     await this.showModal(null, \"Game Terminated by Host\", \"\", \"Navigating back...\", [], 5);\n    //     window.location = `http://${window.location.host}/monopoly/join`;\n    // }\n}\n\nwindow.onload = () => {\n    new GameView();\n};\n\nGameView.DEFAULT_AVATAR = \"/static/images/favicon.png\";\n\nGameView.PLAYERS_COLORS = [\"#FFD54F\", \"#90CAF9\", \"#E0E0E0\", \"#B39DDB\"];","import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport MainView from \"./middleScreen/MainView\";\n\nimport \"./assets/css/game.css\";\nimport \"./assets/css/rolling_dice.css\";\nimport \"./App.css\";\n\nimport { GameView } from './assets/js/views/game';\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\n\nconst game = new GameView();\n\nclass Board extends Component {\n    componentDidMount() {\n        let gameInfo = localStorage.getItem(\"previous_game\");\n        if (!gameInfo) {\n            this.props.history.push(\"/start\");\n            return;\n        }\n        gameInfo = JSON.parse(gameInfo);\n        this.props.store.setGameAuthInfo(gameInfo);\n        this.props.store.connectToGame();\n    }\n\n    componentDidUpdate() {\n        if(this.gameDiv){\n            game.initComponents(this.gameDiv)\n        }\n    }\n\n    render() {\n        return (\n            this.props.store.inGame ? \n                <div id=\"game-container\" ref={div => {this.gameDiv = div}}>\n                \n        \n                </div>\n                :\n                <div style={{margin: \"auto\", textAlign: \"center\", fontSize: 80}}><i\n                    className=\"fas fa-spinner  fa-spin\"/></div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(Board)));\n","import React, {Component} from 'react';\nimport \"./App.css\";\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport Board from \"./Board\"\n\n\nclass MainApp extends Component {\n    state = {\n        selectedTab: this.props.history.location.pathname\n    };\n\n    render() {\n        return (\n            <div className=\"main d-flex flex-column\">\n                <Board/>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(MainApp)));\n","import React, {Component} from 'react';\nimport NewGame from \"./NewGame\";\nimport MainApp from \"./MainApp\";\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\nconst RedirectHome = () => {\n    return (\n        <Redirect to=\"/start\"/>\n    )\n};\n\nclass App extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/play-game\" component={MainApp}/>\n                <Route exact path=\"/start\" component={NewGame}/>\n                <Route path=\"/\" component={RedirectHome}/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","import {decorate, configure, observable, action, computed, runInAction} from 'mobx'\n// import tiles from '../../../server/monopoly';\nimport io from 'socket.io-client';\n\nconfigure({enforceActions: \"observed\"});\nconst URL = process.env.REACT_APP_URL ? process.env.REACT_APP_URL : 'https://monopoly.cassimkhouani.com';\n\nclass Store {\n    socket = io(`${URL}/`, {forceNew: true});\n    mousedOverTile = null;\n    game = {};\n    selectedTab = \"my_info\";\n    gameAuthInfo = {};\n    connectToGame = () => {\n        this.socket.emit('join_game', this.gameAuthInfo);\n    };\n    setGameAuthInfo = (gameInfo) => {\n        this.gameAuthInfo = gameInfo;\n    };\n    updatePlayerJailRolls = (playerIndex) => {\n        this.socket.emit(\"update_player_jail_rolls\", {\n            game_id: this.gameAuthInfo.game_id,\n            jail_turns: this.game.player_info[playerIndex].jail_turns,\n            player_index: playerIndex,\n        });\n    };\n    startTurn = () => {\n        if (!this.playerJailState) {\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            this.movePlayer();\n            this.checkTile();\n        } else {\n            const playerIndex = this.playerIndex;\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setJailState(false);\n                this.syncPlayerJailState();\n                this.game.player_info[playerIndex].jail_turns = 0;\n            } else {\n                this.game.player_info[playerIndex].jail_turns += 1;\n            }\n            if(this.game.player_info[playerIndex].jail_turns >= 3){\n                this.setJailState(false);\n                this.syncPlayerJailState();\n                this.game.player_info[playerIndex].jail_turns = 0;\n            }\n            this.updatePlayerJailRolls(playerIndex);\n            this.setPlayerState(\"END_OF_TURN\");\n            this.syncPlayerState();\n        }\n    };\n    updatePlayerMoney = (playerIndex) => {\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n    payOutOfJail = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 50;\n        this.updatePlayerMoney(playerIndex);\n        this.setJailState(false);\n        this.syncPlayerJailState();\n        this.game.player_info[playerIndex].jail_turns = 0;\n        this.updatePlayerJailRolls(playerIndex);\n        this.setPlayerState(\"END_OF_TURN\");\n        this.syncPlayerState();\n    };\n    movePlayerDev = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = position;\n    };\n    movePlayerToTile = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 100);\n        this.game.player_info[playerIndex].position = position;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: position,\n            player_index: playerIndex,\n        });\n    };\n    devMoveHere = (tile_position) => {\n        this.setPlayerState(\"ROLLING\");\n        this.rollDice();\n        this.movePlayerDev(tile_position);\n        this.checkTile();\n    };\n    mergeTradeData = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.player_info[trade.initiating_player].money -= parseInt(trade.given_money);\n        this.game.player_info[trade.initiating_player].money += parseInt(trade.taken_money);\n        this.game.player_info[trade.trading_player].money += parseInt(trade.given_money);\n        this.game.player_info[trade.trading_player].money -= parseInt(trade.taken_money);\n        trade.given_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.trading_player;\n        });\n        trade.taken_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.initiating_player;\n        });\n    };\n    acceptTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.mergeTradeData(tradeIndex);\n        this.game.trades[tradeIndex].state = \"ACCEPTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} a accepté un échange de ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"accept_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n            trade,\n        });\n\n    };\n    rejectTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"REJECTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} a rejeté un échange de ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"reject_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    cancelTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"CANCELED\";\n        this.addToLog(`${this.game.player_info[trade.initiating_player].username} a annulé un échange de ${this.game.player_info[trade.trading_player].username}`);\n        this.socket.emit(\"cancel_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    giveUp = () => {\n        const playerIndex = this.playerIndex;\n        this.addToLog(`${this.game.player_info[playerIndex].username} a arrêté.`);\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[playerIndex].state = \"OUT\";\n        if (this.game.player_info.filter(player => player.state !== \"OUT\").length === 1) {\n            const winningPlayer = this.game.player_info.find(player => player.state !== \"OUT\");\n            this.socket.emit(\"end_game\", {\n                game_id: this.gameAuthInfo.game_id,\n                winning_player: winningPlayer,\n            });\n            this.game.game_state = \"ENDED\";\n        } else {\n            const newBoard = this.game.board.map(tile => {\n                if (tile.player === playerIndex) {\n                    return {\n                        ...tile,\n                        owned: false,\n                        player: null,\n                        mortgaged: false,\n                        upgrades: 0,\n                    }\n                } else {\n                    return tile;\n                }\n            });\n            this.game.board = newBoard;\n            this.socket.emit(\"player_gives_up\", {\n                game_id: this.gameAuthInfo.game_id,\n                player_index: playerIndex,\n                next_player: newCurrentPlayer,\n                new_board: newBoard,\n            });\n        }\n    };\n    createTrade = (tradingPlayer, givenProperties, takenProperties, givenMoney, takenMoney) => {\n        this.selectedTab = \"my_info\";\n        const initiatingPlayer = this.playerIndex;\n        const trade = {\n            initiating_player: initiatingPlayer,\n            trading_player: tradingPlayer,\n            given_properties: givenProperties,\n            taken_properties: takenProperties,\n            given_money: givenMoney,\n            taken_money: takenMoney,\n            state: \"PROPOSED\",\n        };\n        this.addToLog(`${this.game.player_info[initiatingPlayer].username} a commencé un échange avec ${this.game.player_info[tradingPlayer].username}`);\n        this.game.trades.push(trade);\n        this.socket.emit(\"create_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade\n        });\n    };\n    payPlayer = () => {\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        const rent = this.calcRentCostTile(this.game.player_info[givingPlayer].position, false);\n        this.addToLog(`${this.getPlayer.username} paye ${this.game.player_info[receivingPlayer].username} $${rent} pour avoir visité ${this.playerTile.name}.`);\n        this.game.player_info[receivingPlayer].money += rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].money -= rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].pay_multiplier = 1;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n    };\n    addToLog = (log) => {\n        const newLog = {log: log, time: new Date()};\n        this.game.logs.push(newLog);\n        this.socket.emit(\"add_log\", {\n            game_id: this.gameAuthInfo.game_id,\n            log: newLog,\n        });\n    };\n    checkTile = () => {\n        const tile = this.game.board[this.getPlayer.position];\n        const playerIndex = this.playerIndex;\n        if (this.getPlayer.dice[0] !== this.getPlayer.dice[1]) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.checkAndUpdateDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.jail_state) {\n            return;\n        }\n        this.addToLog(`${this.getPlayer.username} a fait ${this.diceSum} (${this.getPlayer.dice[0]} - ${this.getPlayer.dice[1]}). Case ${tile.name}.`);\n        this.checkIfPlayerPassedGo();\n        if (tile.owned && tile.player !== playerIndex) {\n            this.payPlayer();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        } else if (!tile.owned && (tile.type === \"property\" || tile.type === \"rr\" || tile.type === \"utility\")) {\n            if (this.getPlayer.money < this.game.board[this.getPlayer.position].cost) {\n                this.setPlayerState(\"BUY_TILE_NO_MONEY\");\n            } else {\n                this.setPlayerState(\"BUY_TILE\");\n            }\n        } else if (tile.type === \"lux-tax\") {\n            this.payLuxuryTax();\n        } else if (tile.type === \"chance\" || tile.type === \"chest\") {\n            this.handleModifierCard(tile.type);\n        } else if (tile.type === \"income-tax\") {\n            this.setPlayerState(\"INCOME_TAX\");\n        } else if (tile.type === \"go-to-jail\") {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n            this.goToJail(playerIndex);\n            this.addToLog(`${this.getPlayer.username} a colle avec melissa :(`);\n        } else {\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        }\n        this.syncPlayerState();\n    };\n    utilityChanceCardPayment = () => {\n        const roll = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1\n        ];\n        const rent = (roll[0] + roll[1]) * 10;\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        this.game.player_info[receivingPlayer].money += rent;\n        this.game.player_info[givingPlayer].money -= rent;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    handleModifierCard = (type) => {\n        const playerIndex = this.playerIndex;\n        let newCardIndex = 0;\n        let newCard = {};\n        if (type === \"chance\") {\n            newCardIndex = this.game.last_chance_card + 1 === this.game.chance.length ? 0 : this.game.last_chance_card + 1;\n            this.game.last_chance_card = newCardIndex;\n            newCard = this.game.chance[newCardIndex];\n        } else {\n            newCardIndex = this.game.last_chest_card + 1 === this.game.chest.length ? 0 : this.game.last_chest_card + 1;\n            this.game.last_chest_card = newCardIndex;\n            newCard = this.game.chest[newCardIndex];\n        }\n        this.addToLog(`${this.getPlayer.username} a pris: ${newCard.name}`);\n        if (newCard.type === \"simple_move\") {\n            if (newCard.position === 0) {\n                this.playerPassedGoMoneyIncrease();\n            } else if (this.getPlayer.position > newCard.position) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(newCard.position);\n            this.checkTile();\n        } else if (newCard.type === \"nearest_utility\") {\n            const utility = this.findNearestType(\"utility\");\n            if (this.getPlayer.position > utility) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(utility);\n\n            if (this.game.board[utility].owned && this.game.board[utility].player !== playerIndex) {\n                this.setPlayerState(\"UTILITY_CHANCE_CARD\");\n                this.syncPlayerState();\n            } else {\n                this.checkTile();\n            }\n        } else if (newCard.type === \"nearest_rr\") {\n            this.game.player_info[playerIndex].pay_multiplier = 2;\n            const rail_road = this.findNearestType(\"rr\");\n            if (this.getPlayer.position > rail_road) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(rail_road);\n            this.checkTile();\n        } else if (newCard.type === \"simple_bank_pay\") {\n            this.game.player_info[playerIndex].money += newCard.amount;\n            this.updatePlayerMoney(playerIndex);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        } else if (newCard.type === \"move_amount\") {\n            this.movePlayerToTile(this.getPlayer.position + newCard.amount);\n            this.checkTile();\n        } else if (newCard.type === \"go_to_jail\") {\n            this.goToJail(playerIndex);\n        } else if (newCard.type === \"pay_all_players\") {\n            this.payAllPlayers(newCard.amount);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        }\n\n        if (type === \"chance\") {\n            this.socket.emit(\"increase_chance_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chance_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        } else {\n            this.socket.emit(\"increase_chest_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chest_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        }\n    };\n    payAllPlayers = (amount) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money = this.game.player_info[playerIndex].money - (amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n        this.game.player_info.forEach((player, index) => {\n            if (index !== playerIndex) {\n                player.money += amount;\n            }\n        });\n        this.socket.emit(\"pay_all_players\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            amount: amount,\n        });\n    };\n    findNearestType = (type) => {\n        let nearest = this.game.board.findIndex((tile, index) => {\n            if (index < this.getPlayer.position) {\n                return false;\n            }\n            return tile.type === type;\n        });\n        if (nearest === -1) { // no utilities in front\n            nearest = this.game.board.findIndex((tile) => {\n                return tile.type === type;\n            });\n        }\n        return nearest;\n    };\n    payLuxuryTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 75;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} paye $75 pour s'enfuir de colle :O`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payPercentTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= Math.ceil(this.netWorth * .10);\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} choisi de payer 10% de son revenu net (${Math.ceil(this.netWorth * .10)}).`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payFlatTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 200;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} choisi de payer $200 dollars.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    goToJail = (playerIndex) => {\n        this.game.player_info[playerIndex].position = 10;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: 10,\n            player_index: playerIndex,\n        });\n        this.setJailState(true);\n        this.syncPlayerJailState();\n        this.setPlayerState(\"END_OF_TURN\");\n    };\n    checkAndUpdateDoublesRolled = (playerIndex) => {\n        this.game.player_info[playerIndex].doubles_rolled += 1;\n        if (this.game.player_info[playerIndex].doubles_rolled === 3) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.goToJail(playerIndex);\n        } else {\n            // this.setPlayerState(\"START_TURN\");\n        }\n        this.updatePlayerDoublesRolled(playerIndex);\n    };\n    updatePlayerDoublesRolled = (playerIndex) => {\n        this.socket.emit(\"update_players_doubles\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            doubles_rolled: this.getPlayer.doubles_rolled,\n        });\n    };\n\n    playerPassedGoMoneyIncrease = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += 200;\n        this.addToLog(`${this.getPlayer.username} passe GO et gagne $200!`);\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n    checkIfPlayerPassedGo = () => {\n        if (this.getPlayer.position - this.diceSum < 0) { //passed or on go\n            this.playerPassedGoMoneyIncrease();\n        }\n    };\n    syncPlayerJailState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_jail_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            jail_state: this.playerJailState,\n        });\n    };\n    syncPlayerState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            state: this.playerState,\n        });\n    };\n    buyTile = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[this.getPlayer.position].cost;\n        this.game.board[this.getPlayer.position].owned = true;\n        this.game.board[this.getPlayer.position].player = playerIndex;\n        this.addToLog(`${this.getPlayer.username} achète ${this.playerTile.name} pour $${this.playerTile.cost}.`);\n        this.socket.emit(\"buy_tile\", {\n            game_id: this.gameAuthInfo.game_id,\n            tile_index: this.getPlayer.position,\n            tile_bought: this.game.board[this.getPlayer.position],\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    rejectBuyTile = () => {\n        this.addToLog(`${this.getPlayer.username} refuse de payer ${this.playerTile.name}.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.socket.emit('initiate_auction', {\n            game_id: this.gameAuthInfo.game_id,\n            tile: this.getPlayer.position,\n        });\n        this.game.auction = true;\n        this.game.auction_tile = this.getPlayer.position;\n        this.syncPlayerState();\n    };\n    endTurn = () => {\n        this.refreshCurrentProposingTrade();\n        this.setPlayerState(\"NOT_TURN\");\n        const playerIndex = this.playerIndex;\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[newCurrentPlayer].state = \"START_TURN\";\n        this.socket.emit('end_turn', {\n            game_id: this.gameAuthInfo.game_id,\n            next_player: newCurrentPlayer,\n            old_player: playerIndex,\n        });\n    };\n    startGame = () => {\n        this.game.game_state = \"STARTED\";\n        this.socket.emit('start_game', {\n            game_id: this.gameAuthInfo.game_id,\n        });\n    };\n    movePlayer = () => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = 0;\n        while (i <= this.diceSum) {\n            this.game.animated_players_move.moves.push(this.circularAdd(this.game.player_info[playerIndex].position, i, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = this.circularAdd(this.game.player_info[playerIndex].position, this.diceSum, 39);\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: this.game.player_info[playerIndex].position,\n            player_index: playerIndex,\n        });\n    };\n    upgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[index].upgrade;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades += 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n    downgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += this.game.board[index].upgrade / 2;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades -= 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n\n    constructor() {\n        this.socket.on(\"game_info\", (data) => {\n            console.log(\"game info\", data);\n            if (data) {\n                this.setGameInfo(data);\n            }\n        });\n        this.socket.on('reconnect', () => {\n            console.log(\"reconnecting\");\n            this.connectToGame();\n        });\n        this.socketActions();\n\n    }\n\n    socketActions = () => {\n        this.socket.on(\"player_moved\", data => {\n            console.log(\"player_moved\", data);\n            runInAction(() => {\n                this.game.player_info[data.player].position = data.position;\n            });\n        });\n        this.socket.on(\"tile_bought\", data => {\n            console.log(\"tile_bought\", data);\n            runInAction(() => {\n                this.game.player_info[data.player.player_index].money = data.player.player_money;\n                this.game.board[data.tile.tile_index] = data.tile.tile;\n            });\n        });\n        this.socket.on(\"player_money_updated\", data => {\n            console.log(\"player_money_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = data.player_money;\n            });\n        });\n        this.socket.on(\"turn_ended\", data => {\n            console.log(\"turn_ended\", data);\n            runInAction(() => {\n                if (data.next_player === this.playerIndex) {\n                    if (this.game.player_info[this.playerIndex].state === \"OUT\") {\n                        this.endTurn();\n                    } else {\n                        this.game.player_info[data.next_player].state = \"START_TURN\";\n                        this.game.player_info[data.old_player].state = \"NOT_TURN\";\n                        const notification = new Notification(\"Your turn!\");\n                        notification.onclick = () => {\n                            window.focus();\n                        };\n                    }\n                }\n            });\n        });\n        this.socket.on(\"sync_player_jail_state_synced\", data => {\n            console.log(\"sync_player_jail_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_state = data.jail_state;\n            });\n        });\n        this.socket.on(\"update_player_jail_rolls_updated\", data => {\n            console.log(\"update_player_jail_rolls_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_turns = data.jail_turns;\n            });\n        });\n        this.socket.on(\"transaction_processed\", data => {\n            console.log(\"transaction_processed\", data);\n            runInAction(() => {\n                this.game.player_info[data.giving_player].money = data.giving_player_money;\n                this.game.player_info[data.giving_player].pay_multiplier = 1;\n                this.game.player_info[data.receiving_player].money = data.receiving_player_money;\n            });\n        });\n        this.socket.on(\"players_doubles_updated\", data => {\n            console.log(\"players_doubles_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].doubles_rolled = data.doubles_rolled;\n            });\n        });\n        this.socket.on(\"dice_roll_updated\", data => {\n            console.log(\"dice_roll_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].dice = data.dice;\n            });\n        });\n        this.socket.on(\"player_state_synced\", data => {\n            console.log(\"player_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = data.state;\n            });\n        });\n        this.socket.on(\"chest_card_increased\", data => {\n            console.log(\"chest_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chest_card = data.last_chest_card;\n            });\n        });\n        this.socket.on(\"chance_card_increased\", data => {\n            console.log(\"chance_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chance_card = data.last_chance_card;\n            });\n        });\n        this.socket.on(\"property_mortgaged\", data => {\n            console.log(\"property_mortgaged\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].mortgaged = data.mortgage_value;\n            });\n        });\n        this.socket.on(\"tile_upgraded\", data => {\n            console.log(\"tile_upgraded\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].upgrades = data.upgrades;\n            });\n        });\n        this.socket.on(\"trade_accepted\", data => {\n            console.log(\"trade_accepted\", data);\n            this.mergeTradeData(data.trade_index);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"ACCEPTED\";\n            });\n        });\n        this.socket.on(\"trade_rejected\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"REJECTED\";\n            });\n        });\n        this.socket.on(\"auction_initiated\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.auction = true;\n                this.game.auction_tile = data.tile;\n            });\n        });\n        this.socket.on(\"trade_canceled\", data => {\n            console.log(\"trade_canceled\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"CANCELED\";\n            });\n        });\n        this.socket.on(\"trade_created\", data => {\n            console.log(\"trade_created\", data);\n            runInAction(() => {\n                this.game.trades.push(data.trade);\n            });\n        });\n        this.socket.on(\"log_added\", data => {\n            console.log(\"log_added\", data);\n            runInAction(() => {\n                this.game.logs.push(data.log);\n            });\n        });\n        this.socket.on(\"game_started\", data => {\n            console.log(\"game_started\", data);\n            runInAction(() => {\n                this.game.game_state = \"STARTED\";\n            });\n        });\n        this.socket.on(\"player_gave_up\", data => {\n            console.log(\"player_gave_up\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = \"OUT\";\n                this.game.player_info[data.next_player].state = \"START_TURN\";\n                this.game.board = data.new_board;\n            });\n        });\n        this.socket.on(\"game_ended\", data => {\n            console.log(\"game_ended\", data);\n            runInAction(() => {\n                this.game.game_state = \"ENDED\";\n            });\n        });\n        this.socket.on(\"animated_players_moved\", data => {\n            console.log(\"animated_players_moved\", data);\n            runInAction(() => {\n                this.game.animated_players_move = data.animated_players_move;\n                const movingPlayer = setInterval(() => {\n                    runInAction(() => {\n                        this.game.animated_players_move.moves.shift();\n                        if (this.game.animated_players_move.moves.length === 0) {\n                            clearInterval(movingPlayer);\n                        }\n                    });\n                }, 200);\n            });\n        });\n        this.socket.on(\"pay_all_players_payed\", data => {\n            console.log(\"pay_all_players_payed\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = this.game.player_info[data.player_index].money - (data.amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n                this.game.player_info.forEach((player, index) => {\n                    if (index !== data.player_index) {\n                        player.money += data.amount;\n                    }\n                });\n            });\n        });\n    };\n    setGameInfo = (data) => {\n        this.game = data\n    };\n    setMousedOverTile = (tile) => {\n        this.mousedOverTile = tile;\n    };\n    clearMousedOverTile = () => {\n        this.mousedOverTile = null;\n    };\n\n    rollDice = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].dice = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n        ];\n        this.socket.emit(\"update_dice_roll\", {\n            game_id: this.gameAuthInfo.game_id,\n            dice: this.game.player_info[playerIndex].dice,\n            player_index: playerIndex,\n        });\n    };\n    calcRentCostTile = (tileIndex, preDiceRoll) => {\n        const tile = this.game.board[tileIndex];\n        if (tile.type === \"rr\") {\n            let numOwns = this.game.board.filter(el => el.type === \"rr\" && el.player === tile.player).length;\n            return tile.base_rent * Math.pow(2, numOwns - 1);\n        } else if (tile.type === \"property\") {\n            if (tile.mortgaged) {\n                return 0;\n            }\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            let noneMortgaged = this.game.board.filter(el => el.group === tile.group).every(el => !el.mortgaged);\n            if (ownsAll && noneMortgaged) {\n                if (tile.upgrades > 0) {\n                    return tile.rent[tile.upgrades];\n                }\n                return tile.rent[0] * 2;\n            } else {\n                return tile.rent[0];\n            }\n        } else if (tile.type === \"utility\") {\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            if (!ownsAll) {\n                if (preDiceRoll) {\n                    return \"Dé×4\";\n                }\n                return this.diceSum * 4;\n            } else {\n                if (preDiceRoll) {\n                    return \"Dé×10\";\n                }\n                return this.diceSum * 10;\n            }\n        }\n    };\n    mortgageProperty = (property) => {\n        const playerIndex = this.playerIndex;\n        if (this.game.board[property].mortgaged) {\n            this.game.player_info[playerIndex].money -= this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        } else {\n            this.game.player_info[playerIndex].money += this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        }\n        this.game.board[property].mortgaged = !this.game.board[property].mortgaged;\n        this.socket.emit(\"mortgage_property\", {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: property,\n            mortgage_value: this.game.board[property].mortgaged,\n        });\n    };\n    circularAdd = (val, num, max) => {\n        if (val + num > max) {\n            num = num - (max - val);\n            return num - 1;\n        } else {\n            return val + num;\n        }\n    };\n\n    get diceSum() {\n        return this.getPlayer.dice[0] + this.getPlayer.dice[1];\n    }\n\n    get playerTile() {\n        return this.game.board[this.getPlayer.position];\n    }\n\n    get getPlayer() {\n        return this.game.player_info[this.playerIndex];\n    }\n\n    get inGame() {\n        if (!this.game.player_info) {\n            return false;\n        } else if (this.playerIndex === -1) {\n            return false;\n        } else {\n            return true\n        }\n    }\n\n    setPlayerState = (state) => {\n        this.game.player_info[this.playerIndex].state = state;\n    };\n    setJailState = (state) => {\n        this.game.player_info[this.playerIndex].jail_state = state;\n    };\n\n    get playerState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return \"NOT_TURN\";\n        // } else {\n        return this.getPlayer.state;\n        // }\n    }\n\n    get playerJailState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return false;\n        // } else {\n        return this.getPlayer.jail_state;\n        // }\n    }\n\n    netWorthOfPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    };\n    liquidWorthofPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    };\n\n    get netWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    }\n\n    get liquidWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    }\n\n    playersProperties = (playerIndex) => {\n        const player = this.game.player_info[playerIndex];\n        return this.game.board\n            .map((tile, i) => {\n                let ownsAll = this.game.board.filter(el => el.group === this.game.board[i].group && el.player !== this.game.board[i].player).length === 0;\n                let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => !el.mortgaged);\n                let offByOneUp = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades > el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades < el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                let offByOneDown = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades < el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades > el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                const hasHousesOnAny = this.game.board.filter(el => el.group === this.game.board[i].group && el.upgrade && el.upgrades > 0).length > 0;\n                const canUpgrade = offByOneUp && ownsAll && noneMortgaged && this.game.board[i].upgrades < 5 && player.money >= this.game.board[i].upgrade;\n                const canDowngrade = offByOneDown && ownsAll && noneMortgaged && this.game.board[i].upgrades > 0;\n                let calculatedRent = this.calcRentCostTile(i, true);\n                return {...tile, index: i, canUpgrade, canDowngrade, calculatedRent, ownsAll, hasHousesOnAny}\n            })\n            .filter(tile => {\n                return tile.owned && tile.player === playerIndex;\n            })\n            .sort((a, b) => {\n                return a.group === b.group ? a.cost < b.cost ? 1 : -1 : a.type === b.type ? a.group < b.group ? -1 : 1 : a.type < b.type ? -1 : 1\n            });\n    };\n\n    get playerIndex() {\n        if (!this.game.player_info) {\n            return null;\n        }\n        return this.game.player_info.findIndex(el => el.username === this.gameAuthInfo.username);\n    }\n\n    canUpgrade = (propertyIndex) => {\n        let ownsAll = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group && el.player !== this.game.board[propertyIndex].player).length === 0;\n        let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group).every(el => !el.mortgaged);\n        return ownsAll && noneMortgaged && this.game.board[propertyIndex].upgrades < 3 && this.getPlayer.money >= this.game.board[propertyIndex].upgrade;\n    };\n\n    get currentPlayerTurn() {\n        const player = this.game.player_info.find(player => (player.state !== \"NOT_TURN\" && player.state !== \"OUT\"));\n        return player || {};\n    }\n\n    findNextPlayerInGame = (playerIndex) => {\n        for (let i = playerIndex; i < this.game.player_info.length * 3; i++) {\n            const player = this.game.player_info[(i % this.game.player_info.length + this.game.player_info.length) % this.game.player_info.length];\n            if (player.state !== \"OUT\" && player.id !== playerIndex) {\n                return player.id\n            }\n        }\n    };\n    refreshCurrentProposingTrade = () => {\n        this.currentProposingTrade = {\n            moneyGiven: 0,\n            moneyTaken: 0,\n            givenProperties: [],\n            takenProperties: [],\n        }\n    };\n    setCurrentProposingTrade = (key, val) => {\n        this.currentProposingTrade[key] = val;\n    };\n    currentProposingTrade = {\n        moneyGiven: 0,\n        moneyTaken: 0,\n        givenProperties: [],\n        takenProperties: [],\n    }\n}\n\ndecorate(Store, {\n    players: observable,\n    game: observable,\n    currentProposingTrade: observable,\n    // gameState: observable,\n    mousedOverTile: observable,\n    selectedTab: observable,\n    gameAuthInfo: observable,\n    diceSum: computed,\n    playerState: computed,\n    inGame: computed,\n    playerJailState: computed,\n    getPlayer: computed,\n    playerTile: computed,\n    netWorth: computed,\n    liquidWorth: computed,\n    playerIndex: computed,\n    currentPlayerTurn: computed,\n    rollDice: action,\n    refreshCurrentProposingTrade: action,\n    setCurrentProposingTrade: action,\n    setPlayerState: action,\n    movePlayerToTile: action,\n    checkTile: action,\n    payPercentTax: action,\n    payFlatTax: action,\n    goToJail: action,\n    utilityChanceCardPayment: action,\n    checkAndUpdateDoublesRolled: action,\n    setJailState: action,\n    clearMousedOverTile: action,\n    setMousedOverTile: action,\n    setUsername: action,\n    mortgageProperty: action,\n    setGameInfo: action,\n    createTrade: action,\n    payOutOfJail: action,\n    payLuxuryTax: action,\n    connectedFromNew: action,\n    movePlayerDev: action,\n    movePlayer: action,\n    payPlayer: action,\n    buyTile: action,\n    mergeTradeData: action,\n    acceptTrade: action,\n    addToLog: action,\n    startTurn: action,\n    payAllPlayers: action,\n    endTurn: action,\n    handleModifierCard: action,\n    upgradeProperty: action,\n    giveUp: action,\n    rejectTrade: action,\n    rejectBuyTile: action,\n    cancelTrade: action,\n    setGameAuthInfo: action,\n    downgradeProperty: action,\n    checkIfPlayerPassedGo: action,\n    playerPassedGoMoneyIncrease: action,\n    socketActions: action,\n    connectToGame: action,\n    startGame: action,\n});\n\nexport default new Store();","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'mobx-react';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './store/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nNotification.requestPermission().then(function (result) {\n});\nserviceWorker.unregister();\n"],"sourceRoot":""}