{"version":3,"sources":["NewGame.js","Player.js","Card.js","middleScreen/NavTabs.js","middleScreen/MyInfoTab.js","middleScreen/MyPropertiesTab.js","middleScreen/Logs.js","middleScreen/Actions.js","middleScreen/PlayersTab.js","middleScreen/TradeTab.js","middleScreen/TradesTab.js","middleScreen/MousedOverTileTab.js","middleScreen/MainView.js","Board.js","MainApp.js","App.js","store/Store.js","serviceWorker.js","index.js"],"names":["URL","process","REACT_APP_URL","NewGame","state","game_name","game_password","plate","username","password","selectedTab","searchGameName","gamesFound","gamesFoundSelected","joinGamePassword","joinGameUsername","joinGameUsernamePassword","formError","submitNewGame","e","preventDefault","console","log","concat","_this","fetch","method","headers","Content-Type","body","JSON","stringify","then","res","json","response","localStorage","setItem","game_id","props","history","push","joinGame","_id","error","setState","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","auth","keyPress","keyCode","searchForGames","data","games","removeItem","_this2","this","react_default","a","createElement","lib","class","href","onClick","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","className","style","paddingTop","src","alt","role","onSubmit","required","value","onChange","_ref","target","placeholder","_ref2","_ref3","_ref4","_ref5","_ref6","onKeyDown","length","map","game","index","key","player_info","game_state","readOnly","_ref7","_ref8","_ref9","Component","withRouter","inject","observer","Player","moving","backgroundColor","store","playerNumber","color","Card","boxShadow","right","board","left","top","bottom","Object","objectSpread","backgroundImage","url","mortgaged","onMouseLeave","clearMousedOverTile","onMouseEnter","setMousedOverTile","filter","player","i","src_Player","animated_players_move","moves","tileIndex","owned","upgrades","NavTabs","selectTab","changeDropDown","dropdownExpanded","aria-haspopup","gameAuthInfo","selectedPlayer","MyInfoTab","_this$props$store$get","slicedToArray","getPlayer","dice","diceOne","diceTwo","playerIndex","playerTile","name","money","netWorth","MyPropertiesTab","scope","playersProperties","property","calculatedRent","parseInt","upgrade","disabled","canUpgrade","upgradeProperty","canDowngrade","downgradeProperty","cost","el","group","every","mortgageProperty","checked","Logs","prevProps","prevState","snapshot","div","refs","logs","scrollTop","scrollHeight","ref","Actions","startGame","playerState","jail_turns","startTurn","currentPlayerTurn","utilityChanceCardPayment","jail_state","payOutOfJail","buyTile","rejectBuyTile","payPercentTax","payFlatTax","endTurn","giveUp","PlayersTab","netWorthOfPlayer","liquidWorthofPlayer","TradeTab","proposeTrade","createTrade","currentProposingTrade","givenProperties","takenProperties","moneyGiven","moneyTaken","refreshCurrentProposingTrade","yourCash","playersCash","setCurrentProposingTrade","min","hasHousesOnAny","findIndex","toConsumableArray","slice","TradesTab","selectedTrade","trades","firstIndex","initiating_player","trading_player","initiatingPlayer","tradingPlayer","areYouInitiating","rightProperties","taken_properties","given_properties","leftProperties","initiatingPlayerHasAllProperties","tradingPlayerHasAllProperties","trade","given_money","taken_money","acceptTrade","marginRight","rejectTrade","cancelTrade","MousedOverTileTab","tile","mousedOverTile","playersOnTile","relatedTiles","relTile","calcRentCostTile","rent","MainView","middleScreen_MousedOverTileTab","Fragment","middleScreen_NavTabs","middleScreen_MyInfoTab","middleScreen_Actions","middleScreen_Logs","middleScreen_MyPropertiesTab","middleScreen_PlayersTab","middleScreen_TradeTab","middleScreen_TradesTab","Board","gameInfo","getItem","parse","setGameAuthInfo","connectToGame","inGame","outline","middleScreen_MainView","src_Card","margin","textAlign","fontSize","MainApp","location","pathname","src_Board","RedirectHome","Redirect","to","App","Switch","Route","exact","path","component","configure","enforceActions","Store","classCallCheck","socket","io","forceNew","emit","updatePlayerJailRolls","player_index","playerJailState","setPlayerState","rollDice","setJailState","syncPlayerJailState","syncPlayerState","movePlayer","checkTile","updatePlayerMoney","player_money","movePlayerDev","circularAdd","movingPlayer","setInterval","runInAction","shift","clearInterval","movePlayerToTile","new_position","devMoveHere","tile_position","mergeTradeData","tradeIndex","forEach","propIndex","addToLog","trade_index","newCurrentPlayer","findNextPlayerInGame","winningPlayer","find","winning_player","newBoard","next_player","new_board","givenMoney","takenMoney","payPlayer","receivingPlayer","givingPlayer","pay_multiplier","giving_player","receiving_player","giving_player_money","receiving_player_money","newLog","time","Date","doubles_rolled","updatePlayerDoublesRolled","checkAndUpdateDoublesRolled","diceSum","checkIfPlayerPassedGo","payLuxuryTax","handleModifierCard","goToJail","roll","Math","floor","random","newCardIndex","newCard","last_chance_card","chance","last_chest_card","chest","playerPassedGoMoneyIncrease","utility","findNearestType","rail_road","amount","payAllPlayers","nearest","ceil","tile_index","tile_bought","auction","auction_tile","old_player","property_index","socketActions","on","mortgage_value","setGameInfo","preDiceRoll","numOwns","base_rent","pow","ownsAll","noneMortgaged","val","num","max","worth","offByOneUp","offByOneDown","sort","b","propertyIndex","decorate","players","observable","computed","liquidWorth","action","setUsername","connectedFromNew","store_Store","Boolean","window","hostname","match","ReactDOM","render","index_module","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9324233f.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {ToastContainer, toast} from 'react-toastify';\n\nconst URL = process.env.REACT_APP_URL || \"https://monopoly.cassimkhouani.com\";\n\nclass NewGame extends Component {\n    state = {\n        game_name: \"\",\n        game_password: \"\",\n        plate: \"mp\",\n        username: \"\",\n        password: \"\",\n        selectedTab: \"home\",\n        searchGameName: \"\",\n        gamesFound: [],\n        gamesFoundSelected: -1,\n        joinGamePassword: \"\",\n        joinGameUsername: \"\",\n        joinGameUsernamePassword: \"\",\n        formError: \"\",\n    };\n\n    componentDidMount() {\n        localStorage.removeItem(\"username\");\n    }\n\n    submitNewGame = (e) => {\n        e.preventDefault();\n        console.log(`${URL}/${this.state.plate}/create_game`)\n        fetch(`${URL}/${this.state.plate}/create_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_name: this.state.game_name,\n                game_password: this.state.game_password,\n                username: this.state.username,\n                password: this.state.password\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                localStorage.setItem(\"previous_game\", JSON.stringify({\n                    game_name: this.state.game_name,\n                    game_password: this.state.game_password,\n                    username: this.state.username,\n                    password: this.state.password,\n                    game_id: response.game_id,\n                }));\n                console.log(response);\n                this.props.history.push(\"/play-game\");\n            });\n    };\n    joinGame = (e) => {\n        e.preventDefault();\n        console.log(this.state.gamesFound[this.state.gamesFoundSelected]._id);\n        fetch(`${URL}/join_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                game_password: this.state.joinGamePassword,\n                username: this.state.joinGameUsername,\n                password: this.state.joinGameUsernamePassword\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response)\n                if (response.error) {\n                    this.setState({formError: response.error}, () => {\n                        if (this.state.formError === \"incorrect_game_pw\") {\n                            toast.error(\"Mot de passe de partie incorrect.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"player_not_in_game\") {\n                            toast.error(\"Vous n'êtes pas dans cette partie.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"incorrect_player_pw\") {\n                            toast.error(\"Mot de passe du joueur incorrect.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        }\n                    });\n                    return;\n                }\n                if (response.success) {\n                    localStorage.setItem(\"previous_game\", JSON.stringify({\n                        game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                        game_name: this.state.gamesFound[this.state.gamesFoundSelected].auth.game_name,\n                        game_password: this.state.joinGamePassword,\n                        username: this.state.joinGameUsername,\n                        password: this.state.joinGameUsernamePassword,\n                    }));\n                    console.log(response);\n                    this.props.history.push(\"/play-game\");\n                }\n            });\n    };\n    keyPress = (e) => {\n        if (e.keyCode === 13) {\n            this.searchForGames();\n        }\n    };\n    searchForGames = () => {\n        this.setState({gamesFound: [], gamesFoundSelected: -1});\n        fetch(`${URL}/search_for_games?game_name=${this.state.searchGameName}`)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({gamesFound: data.games});\n            })\n    };\n\n    render() {\n\n        return (\n            <div>\n                <ToastContainer/>\n                <nav class=\"navbar navbar-expand-lg navbar-light bg-primary\">\n                <a class=\"navbar-brand text-white\" href=\"#\" onClick={() => this.setState({selectedTab: \"home\"})}>Monopoly</a>\n                <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                    <span class=\"navbar-toggler-icon\"></span>\n                </button>\n                <div class=\"collapse navbar-collapse\" id=\"navbarNav\">\n                    <ul className=\"navbar-nav\">\n                        <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"create_game\"})}>\n                            <div className={`nav-link text-white ${this.state.selectedTab === \"create_game\" ? \"active\" : \"\"}`}>\n                                Créer une partie\n                            </div>\n                        </li>\n                        <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"join_game\"})}>\n                            <div className={`nav-link text-white ${this.state.selectedTab === \"join_game\" ? \"active\" : \"\"}`}>\n                                Rejoindre une partie\n                            </div>\n                        </li>\n                    </ul>\n                </div>\n                </nav>\n                {this.state.selectedTab === \"home\" && (\n                    <div className=\"container\" style={{paddingTop: \"50px\"}}>\n                        <div class=\"jumbotron\">\n                        <img \n                            src=\"https://upload.wikimedia.org/wikipedia/fr/thumb/c/ca/Monopoly.svg/1200px-Monopoly.svg.png\"\n                            className=\"center\"\n                            alt=\"monopoly\"\n                        />\n                        <hr class=\"my-4\" />\n                        <p class=\"lead\">\n                            <a class=\"btn btn-primary btn-lg center\" onClick={() => this.setState({selectedTab: \"create_game\"})} href=\"#\" role=\"button\">Jouer</a>\n                        </p>\n                        </div>\n                    </div>\n                )}\n                {this.state.selectedTab === \"create_game\" && (\n                    <div className=\"create-game-input\">\n                        <form onSubmit={this.submitNewGame}>\n                            <h5>Créer une partie</h5>\n                            <small className=\"form-text text-muted align-self-start\">Nom de la partie</small>\n                            <input required value={this.state.game_name}\n                                   onChange={({target}) => this.setState({game_name: target.value})}\n                                   type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Nom partie\"/>\n                            <small className=\"form-text text-muted align-self-start\">Mot de passe de la partie</small>\n                            <input required value={this.state.game_password}\n                                   onChange={({target}) => this.setState({game_password: target.value})}\n                                   type=\"password\" className=\"form-control mb-2\"\n                                   placeholder=\"Mot de passe\"/>\n                            <small className=\"form-text text-muted align-self-start\">Ton nom</small>\n                            <input required value={this.state.username}\n                                   onChange={({target}) => this.setState({username: target.value})}\n                                   type=\"text\" className=\"form-control mb-2\"\n                                   placeholder=\"Nom\"/>\n                            <small className=\"form-text text-muted align-self-start\">Ton mot de passe</small>\n                            <input required value={this.state.password}\n                                   onChange={({target}) => this.setState({password: target.value})} type=\"password\"\n                                   className=\"form-control mb-2\"\n                                   placeholder=\"Mot de passe\"/>\n                            <small className=\"form-text text-muted align-self-start\">Plateau</small>\n                            <select required value={this.state.plate}\n                                   onChange={({target}) => this.setState({plate: target.value})}\n                                   className=\"form-control mb-2\">\n                                <option value=\"social\">Réseaux sociaux</option>\n                                <option value=\"mp\">MP</option>\n                            </select>\n                            <button type=\"submit\" className=\"btn btn-primary\">Créer</button>\n                        </form>\n                    </div>\n                )}\n                {this.state.selectedTab === \"join_game\" && (\n                    <div className=\"create-game-input\">\n                        <h5>Rejoindre une partie</h5>\n                        <small className=\"form-text text-muted align-self-start\">Chercher une partie</small>\n                        <div className=\"input-group\">\n                            <input required value={this.state.searchGameName}\n                                   onChange={({target}) => this.setState({searchGameName: target.value})} type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Search...\"\n                                   onKeyDown={this.keyPress}\n                            />\n                            <div className=\"input-group-append\">\n                                <button onClick={this.searchForGames} className=\"btn btn-outline-secondary\"\n                                        type=\"button\">\n                                    <i className=\"fas fa-search\"/>\n                                </button>\n                            </div>\n                        </div>\n                        {this.state.gamesFound.length > 0 && (\n                            <div className=\"mt-3\">\n                                <h5>Parties trouvées</h5>\n                                <ul className=\"list-group\">\n                                    {this.state.gamesFound.map((game, index) => {\n                                        return (\n                                            <li key={game._id}\n                                                onClick={() => {\n                                                    if (this.state.gamesFoundSelected !== index) {\n                                                        this.setState({\n                                                            gamesFoundSelected: index,\n                                                            joinGamePassword: \"\",\n                                                            joinGameUsername: \"\",\n                                                            joinGameUsernamePassword: \"\",\n                                                        })\n                                                    }\n                                                }}\n                                                className=\"cursor list-group-item\">\n                                                {this.state.gamesFoundSelected !== index && (\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                                        <div className=\"d-flex flex-column\">\n                                                            <div>{game.auth.game_name}</div>\n                                                            <small>Crée par: {game.player_info[0].username}</small>\n                                                        </div>\n                                                        <i className=\"fas fa-arrow-circle-right\"/>\n                                                    </div>\n                                                )}\n                                                {this.state.gamesFoundSelected === index && (\n                                                    <div className=\"\">\n                                                        {game.game_state === \"INVITING_PLAYERS\" && (\n                                                            <div>\n                                                                <small>La partie n'est pas commencé, vous pouvez rejoindre...\n                                                                </small>\n                                                            </div>\n                                                        )}\n                                                        <form onSubmit={this.joinGame}>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Nom de la partie\n                                                            </small>\n                                                            <input required value={game.auth.game_name}\n                                                                   type=\"text\"\n                                                                   readOnly\n                                                                   className=\"form-control\"\n                                                                   placeholder=\"Nom de la partie\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Mot de passe de la partie\n                                                            </small>\n                                                            <input required value={this.state.joinGamePassword}\n                                                                   onChange={({target}) => this.setState({joinGamePassword: target.value})}\n                                                                   type=\"password\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Mot de passe de la partie\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Ton nom\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsername}\n                                                                   onChange={({target}) => this.setState({joinGameUsername: target.value})}\n                                                                   type=\"text\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Ton nom\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Ton mot de passe\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsernamePassword}\n                                                                   onChange={({target}) => this.setState({joinGameUsernamePassword: target.value})}\n                                                                   type=\"password\"\n                                                                   className=\"form-control mb-2\"\n                                                                   placeholder=\"Mot de passe de la partie\"/>\n                                                            <button type=\"submit\" className=\"btn btn-primary\">Rejoindre\n                                                            </button>\n                                                        </form>\n                                                    </div>\n                                                )}\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(NewGame)));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\n\nclass Player extends Component {\n    render() {\n        return (\n            <div\n                className={`${this.props.moving ? \"player-moving\" : \"player\"} d-flex justify-content-center align-items-center`}\n                style={{backgroundColor: !this.props.moving ? this.props.store.game.player_info[this.props.playerNumber].color : null}}\n            >\n                {this.props.moving && (\n                    <i className=\"fas fa-circle\"/>\n                )}\n                {!this.props.moving && (\n                    <b>{this.props.playerNumber + 1}</b>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Player));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\nimport Player from './Player';\n\n// import tiles from '../../server/monopoly';\n\nclass Card extends Component {\n    render() {\n        const boxShadow = {};\n        if (this.props.right) {\n            boxShadow.boxShadow = `-5px 0px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.left) {\n            boxShadow.boxShadow = `5px 0px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.top) {\n            boxShadow.boxShadow = `0px 5px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.bottom) {\n            boxShadow.boxShadow = `0px -5px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        return (\n            <div\n                // onClick={() => this.props.store.devMoveHere(this.props.position)}\n                style={{\n                    backgroundImage: `url(${this.props.store.game.board[this.props.position].url})`,\n                    ...boxShadow,\n                }}\n                className={`game-tile d-flex flex-wrap align-content-between justify-content-between ${this.props.store.game.board[this.props.position].mortgaged ? \"grey-card\" : \"\"}`}\n                onMouseLeave={this.props.store.clearMousedOverTile}\n                onMouseEnter={() => this.props.store.setMousedOverTile(this.props.position)}\n            >\n                {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.position).map((player, i) => {\n                    return <Player playerNumber={player.id} key={i}/>\n                })}\n                {this.props.store.game.animated_players_move.moves.filter(tileIndex => tileIndex === this.props.position).map((tileIndex, i) => {\n                    return <Player key={i} moving={true}/>\n                })}\n                {this.props.right && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-right\"/>}\n                {this.props.right && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-column left-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {/*{this.props.bottom && this.props.store.game.board[this.props.position].color && (*/}\n                {/*<div style={{backgroundColor: this.props.store.game.board[this.props.position].color}}*/}\n                {/*className=\"d-flex flex-row top-tiles-color\"/>*/}\n                {/*)}*/}\n                {this.props.bottom && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-bottom\"/>}\n                {this.props.bottom && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-row top-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {this.props.left && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-left\"/>}\n                {this.props.left && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-column right-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {this.props.top && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-top\"/>}\n                {this.props.top && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-row bottom-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Card));\n","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass NavTabs extends Component {\n    render() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"my_info\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"my_info\" ? \"active\" : \"\"}`}>Mes infos\n                    </div>\n                </li>\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"my_properties\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"my_properties\" ? \"active\" : \"\"}`}>Mes Propriétés\n                    </div>\n                </li>\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"trades\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"trades\" ? \"active\" : \"\"}`}>Mes échanges\n                    </div>\n                </li>\n                <li className=\"nav-item dropdown cursor\"\n                    onMouseEnter={() => this.props.changeDropDown({dropdownExpanded: true})}\n                    onMouseLeave={() => this.props.changeDropDown({dropdownExpanded: false})}\n                >\n                    <div className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\"\n                         aria-haspopup=\"true\" aria-expanded=\"false\">Joueurs\n                    </div>\n                    <div className={`dropdown-menu ${this.props.dropdownExpanded ? \"show\" : \"\"}`}>\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length === 1 && (\n                            <div className=\"dropdown-item\">Pas de joueurs</div>\n                        )}\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length > 1 && this.props.store.game.player_info.filter(player => player.state !== \"OUT\").map((player, index) => ({\n                            ...player,\n                            index\n                        })).filter(player => player.username !== this.props.store.gameAuthInfo.username).map(player =>\n                            <div onClick={() => this.props.selectTab({\n                                selectedTab: \"player_info\",\n                                selectedPlayer: player.id,\n                                dropdownExpanded: false,\n                            })} key={player.id} className=\"dropdown-item\">{player.username} - ({player.id + 1})</div>\n                        )}\n                    </div>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(NavTabs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MyInfoTab extends Component {\n    render() {\n        const [diceOne, diceTwo] = this.props.store.getPlayer.dice;\n        return (\n            <div className=\"info-tab d-flex flex-column\">\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Nom: </span>\n                            <span\n                                className=\"flex-fill\">({this.props.store.playerIndex + 1}) - {this.props.store.getPlayer.username}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Case: </span>\n                            <span className=\"flex-fill\">{this.props.store.playerTile.name}</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Argent: </span>\n                            <span className=\"flex-fill\">${this.props.store.getPlayer.money}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Net: </span>\n                            <span className=\"flex-fill\">${this.props.store.netWorth}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex flex-row justify-content-center align-items-center dice-content\">\n                    {diceOne === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceOne === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceOne === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceOne === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceOne === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceOne === 6 && <i className=\"fas fa-dice-six\"/>}\n                    <div className=\"space-between-dice\"/>\n                    {diceTwo === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceTwo === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceTwo === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceTwo === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceTwo === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceTwo === 6 && <i className=\"fas fa-dice-six\"/>}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(MyInfoTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MyPropertiesTab extends Component {\n    render() {\n        return (\n\n            <div className=\"properties-tab d-flex flex-row justify-content-around my-properties-table\">\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th className=\"text-center\" scope=\"col\">Nom</th>\n                        <th className=\"text-center\" scope=\"col\">Loyer</th>\n                        <th className=\"text-center\" scope=\"col\">Améliorations</th>\n                        <th className=\"text-center\" scope=\"col\">Hypothéqué?</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"\">\n                    {this.props.store.playersProperties(this.props.store.playerIndex).map((property, i) => {\n                        return (\n                            <tr key={i}>\n                                <th scope=\"row\">\n                                    <div className=\"my-properties-pic\" style={{\n                                        backgroundImage: `url(${property.url})`,\n                                    }}/>\n                                </th>\n                                <td className=\"text-center\">{property.name}</td>\n                                <td className=\"text-center\">{property.calculatedRent === parseInt(property.calculatedRent, 10) ? `$${property.calculatedRent}` : property.calculatedRent}</td>\n                                {property.upgrade ?\n                                    <td className=\"text-center upgrade-col\">\n                                        <div className=\"d-flex upgrade-bar\">\n                                            <div\n                                                className={`bar-component bar-component-left ${property.upgrades > 0 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 1 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 2 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 3 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 4 ? \"bar-component-filled\" : \"\"}`}/>\n                                        </div>\n                                        <div className=\"d-flex justify-content-center\">\n                                            <button\n                                                disabled={!property.canUpgrade}\n                                                className='btn btn-sm shadow-none'\n                                                style={{backgroundColor: \"transparent\"}}\n                                                onClick={() => this.props.store.upgradeProperty(property.index)}\n                                            >\n                                                <i className=\"far fa-arrow-alt-circle-up mr-2 cursor upgrade-prop\"/>\n                                            </button>\n                                            <button\n                                                disabled={!property.canDowngrade}\n                                                className='btn btn-sm shadow-none'\n                                                style={{backgroundColor: \"transparent\"}}\n                                                onClick={() => this.props.store.downgradeProperty(property.index)}\n                                            >\n                                                <i className=\"far fa-arrow-alt-circle-down ml-2 cursor upgrade-prop\"/>\n                                            </button>\n                                        </div>\n                                    </td>\n                                    :\n                                    <td/>\n                                }\n                                <td className=\"text-center\">\n                                    <input\n                                        disabled={(property.mortgaged && this.props.store.getPlayer.money - property.cost / 2 < 0) || this.props.store.getPlayer.state === \"NOT_TURN\" || !this.props.store.game.board.filter(el => el.group === property.group).every(el => el.upgrades === 0)}\n                                        onChange={() => this.props.store.mortgageProperty(property.index)}\n                                        checked={property.mortgaged} type=\"checkbox\" className=\"double\"\n                                    /> {property.mortgaged ? \"(-)\" : \"(+)\"}{property.cost / 2}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MyPropertiesTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Logs extends Component {\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    componentDidMount() {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    render() {\n        return (\n            <div ref=\"logs\" className=\"logs-tab\">\n                {this.props.store.game.logs.length === 0 && (\n                    <div>Pas d'actions...</div>\n                )}\n                {this.props.store.game.logs.map((log, i) => {\n                    return (\n                        <div key={i}>\n                            {log.log}\n                        </div>\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Logs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Actions extends Component {\n    render() {\n        if (this.props.store.game.game_state === \"ENDED\") {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    La partie est finie\n                </div>\n            )\n        }\n        if (this.props.store.game.game_state === \"INVITING_PLAYERS\" && this.props.store.playerIndex === 0) {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    <button type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.props.store.startGame}>\n                        Commencer\n                    </button>\n                </div>\n            )\n        }\n        return (\n            <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                {this.props.store.playerState !== \"OUT\" && this.props.store.playerState === \"START_TURN\" && this.props.store.getPlayer.jail_turns < 3 && (\n                    <button type=\"button\" onClick={this.props.store.startTurn}\n                            className=\"btn btn-primary\">Jeter les dés\n                    </button>\n                )}\n                {this.props.store.playerState === \"NOT_TURN\" && (\n                    <div>Tour de {this.props.store.currentPlayerTurn.username}.</div>\n                )}\n                {this.props.store.playerState === \"UTILITY_CHANCE_CARD\" && (\n                    <button type=\"button\" onClick={this.props.store.utilityChanceCardPayment}\n                            className=\"btn btn-primary\">Lance pour voir combien tu payes\n                    </button>\n                )}\n                {this.props.store.getPlayer.jail_state && this.props.store.playerState === \"START_TURN\" && (\n                    <button type=\"button\" onClick={this.props.store.payOutOfJail}\n                            className=\"btn btn-primary\">Payer 50\n                    </button>\n                )}\n                {(this.props.store.playerState === \"BUY_TILE\" || this.props.store.playerState === \"BUY_TILE_NO_MONEY\") && (\n                    <div className=\"accept-reject-tile-buy-div d-flex justify-content-center\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <button disabled={this.props.store.playerState === \"BUY_TILE_NO_MONEY\"} type=\"button\"\n                                    className=\"btn btn-primary buy-tile-button text-center\"\n                                    onClick={this.props.store.buyTile}>\n                                Acheter\n                            </button>\n                            <button type=\"button\" className=\"btn btn-primary reject-buy-tile-button\"\n                                    onClick={this.props.store.rejectBuyTile}>\n                                Non\n                            </button>\n                        </div>\n                    </div>\n                )}\n                {this.props.store.playerState === \"INCOME_TAX\" && (\n                    <div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.store.payPercentTax}>Payer\n                            10%\n                        </button>\n                        <button type=\"button\" className=\"btn btn-primary pay-flat-tax-button\"\n                                onClick={this.props.store.payFlatTax}>Payer\n                            $200\n                        </button>\n                    </div>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && (\n                    <button disabled={this.props.store.getPlayer.money < 0} type=\"button\"\n                            onClick={this.props.store.endTurn}\n                            className=\"btn btn-primary\">Fin du tour\n                    </button>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && this.props.store.getPlayer.money < 0 && (\n                    <button type=\"button\" onClick={this.props.store.giveUp}\n                            className=\"btn btn-primary\">Abandonner\n                    </button>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Actions));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass PlayersTab extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Nom: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.player_info[this.props.player].username} - ({this.props.player + 1})</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Case: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.board[this.props.store.game.player_info[this.props.player].position].name}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Sortie prison: </span>\n                            <span className=\"flex-fill\">Non</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Argent: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.game.player_info[this.props.player].money}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Net: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.netWorthOfPlayer(this.props.player)}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Possible: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.liquidWorthofPlayer(this.props.player)}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <button onClick={() => this.props.selectTab({selectedTab: \"player_trade\"})} type=\"button\"\n                            className=\"btn btn-primary\"\n                            disabled={this.props.store.getPlayer.state === \"NOT_TURN\"}>\n                        Échange\n                    </button>\n                </div>\n                <div\n                    className=\"other-players-properties-tab d-flex flex-row justify-content-around other-players-properties-table\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th/>\n                            <th className=\"text-center\" scope=\"col\">Nom</th>\n                            <th className=\"text-center\" scope=\"col\">Loyer</th>\n                            <th className=\"text-center\" scope=\"col\">Améliorations</th>\n                            <th className=\"text-center\" scope=\"col\">Hypothéqué?</th>\n                        </tr>\n                        </thead>\n                        <tbody className=\"\">\n                        {this.props.store.playersProperties(this.props.player).map((property, i) => {\n                            return (\n                                <tr key={i}>\n                                    <th scope=\"row\">\n                                        <div className=\"my-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                    </th>\n                                    <td className=\"text-center\">{property.name}</td>\n                                    <td className=\"text-center\">{property.calculatedRent === parseInt(property.calculatedRent, 10) ? `$${property.calculatedRent}` : property.calculatedRent}</td>\n                                    {property.upgrade ?\n                                        <td className=\"text-center upgrade-col\">\n                                            <div className=\"d-flex upgrade-bar-other-player justify-content-center\">\n                                                <div\n                                                    className={`bar-component bar-component-left ${property.upgrades > 0 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 1 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 2 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 3 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 4 ? \"bar-component-filled\" : \"\"}`}/>\n                                            </div>\n                                        </td>\n                                        :\n                                        <td/>\n                                    }\n                                    <td className=\"text-center\">\n                                        <input\n                                            disabled\n                                            checked={property.mortgaged} type=\"checkbox\" className=\"double\"\n                                        />\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(PlayersTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass TradeTab extends Component {\n    proposeTrade = () => {\n        this.props.selectTab({selectedTab: \"my_info\"});\n        this.props.store.createTrade(this.props.player, this.props.store.currentProposingTrade.givenProperties, this.props.store.currentProposingTrade.takenProperties, this.props.store.currentProposingTrade.moneyGiven, this.props.store.currentProposingTrade.moneyTaken);\n        this.props.store.refreshCurrentProposingTrade();\n    };\n\n    render() {\n        const yourCash = this.props.store.getPlayer.money;\n        const playersCash = this.props.store.game.player_info[this.props.player].money;\n        const playerIndex = this.props.store.playerIndex;\n        return (\n            <div className=\"d-flex flex-column text-center\">\n                <div className=\"d-flex flex-row justify-content-around main-trade-content\">\n                    <div className=\"d-flex flex-column text-center\">\n                        <div className=\"trade-money-label\">\n                            <u>Vous donnez {this.props.store.game.player_info[this.props.player].username}</u>\n                        </div>\n                        <div className=\"text-left\">\n                            Votre argent: ${yourCash}\n                        </div>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">$</span>\n                            </div>\n                            <input onChange={({target}) => {\n                                if (target.value > yourCash)\n                                    target.value = yourCash;\n                                this.props.store.setCurrentProposingTrade(\"moneyGiven\", target.value);\n                            }}\n                                   value={this.props.store.currentProposingTrade.moneyGiven === 0 ? \"\" : this.props.store.currentProposingTrade.moneyGiven}\n                                   type=\"number\"\n                                   min={0}\n                                   className=\"form-control\"\n                                   placeholder=\"Argent\"/>\n                        </div>\n                        <div className=\"player-properties-trade\">\n                            {this.props.store.playersProperties(playerIndex).filter(property => !property.hasHousesOnAny).map((property, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                        <div className=\"trade-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                        <div className=\"trade-prop-name\">{property.name}</div>\n                                        <div>\n                                            <input\n                                                onChange={() => {\n                                                    const index = this.props.store.currentProposingTrade.givenProperties.findIndex(el => el === property.index);\n                                                    if (index === -1) {\n                                                        this.props.store.setCurrentProposingTrade(\"givenProperties\", [...this.props.store.currentProposingTrade.givenProperties, property.index]);\n                                                    } else {\n                                                        this.props.store.setCurrentProposingTrade(\"givenProperties\", [...this.props.store.currentProposingTrade.givenProperties.slice(0, index), ...this.props.store.currentProposingTrade.givenProperties.slice(index + 1)]);\n                                                    }\n                                                }}\n                                                type=\"checkbox\" className=\"double\"/>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column text-center\">\n                        <div className=\"trade-money-label\">\n                            <u>Vous obtenez de {this.props.store.game.player_info[this.props.player].username}</u>\n                        </div>\n                        <div className=\"text-left\">\n                            Son argent: ${playersCash}\n                        </div>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">$</span>\n                            </div>\n                            <input onChange={({target}) => {\n                                if (target.value > playersCash)\n                                    target.value = playersCash;\n                                this.props.store.setCurrentProposingTrade(\"moneyTaken\", target.value);\n                            }}\n                                   value={this.props.store.currentProposingTrade.moneyTaken === 0 ? \"\" : this.props.store.currentProposingTrade.moneyTaken}\n                                   type=\"number\"\n                                   min={0}\n                                   className=\"form-control\"\n                                   placeholder=\"Argent\"/>\n                        </div>\n                        <div className=\"player-properties-trade\">\n                            {this.props.store.playersProperties(this.props.player).map((property, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                        <div className=\"trade-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                        <div className=\"trade-prop-name\">{property.name}</div>\n                                        <div>\n                                            <input\n                                                onChange={() => {\n                                                    const index = this.props.store.currentProposingTrade.takenProperties.findIndex(el => el === property.index);\n                                                    if (index === -1) {\n                                                        this.props.store.setCurrentProposingTrade(\"takenProperties\", [...this.props.store.currentProposingTrade.takenProperties, property.index]);\n                                                    } else {\n                                                        this.props.store.setCurrentProposingTrade(\"takenProperties\", [...this.props.store.currentProposingTrade.takenProperties.slice(0, index), ...this.props.store.currentProposingTrade.takenProperties.slice(index + 1)]);\n                                                    }\n                                                }}\n                                                type=\"checkbox\" className=\"double\"/>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <button\n                        disabled={(this.props.store.currentProposingTrade.moneyTaken === 0 || this.props.store.currentProposingTrade.moneyTaken === \"0\") && (this.props.store.currentProposingTrade.moneyGiven === 0 || this.props.store.currentProposingTrade.moneyGiven === \"0\") && this.props.store.currentProposingTrade.takenProperties.length === 0 && this.props.store.currentProposingTrade.givenProperties.length === 0}\n                        onClick={this.proposeTrade} type=\"button\"\n                        className=\"btn btn-primary\">Proposer un échange\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(TradeTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass TradesTab extends Component {\n    state = {\n        selectedTrade: 0,\n    };\n\n    componentDidMount() {\n        if (this.props.store.game.player_info && this.props.store.game.trades.length > 0) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            this.setState({selectedTrade: firstIndex});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.selectedTrade === -1) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            if (firstIndex !== -1) {\n                this.setState({selectedTrade: firstIndex});\n            }\n        }\n    }\n\n\n    render() {\n        if (this.props.store.game.player_info && this.props.store.game.trades.length > 0) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            if (firstIndex === -1 || this.state.selectedTrade === -1) {\n                return <div className=\"text-center\">Pas d'échanges</div>\n            }\n            const initiatingPlayer = this.props.store.game.player_info[this.props.store.game.trades[this.state.selectedTrade].initiating_player];\n            const tradingPlayer = this.props.store.game.player_info[this.props.store.game.trades[this.state.selectedTrade].trading_player];\n            const areYouInitiating = this.props.store.game.trades[this.state.selectedTrade].initiating_player === playerIndex;\n            const rightProperties = areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].taken_properties : this.props.store.game.trades[this.state.selectedTrade].given_properties;\n            const leftProperties = areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_properties : this.props.store.game.trades[this.state.selectedTrade].taken_properties;\n            const initiatingPlayerHasAllProperties = this.props.store.game.trades[this.state.selectedTrade].given_properties.every(index => {\n                const property = this.props.store.game.board[index];\n                const hasHousesOnAny = this.props.store.game.board.filter(el => el.group === this.props.store.game.board[index].group && el.upgrade && el.upgrades > 0).length > 0;\n                return property.player === this.props.store.game.trades[this.state.selectedTrade].initiating_player && !hasHousesOnAny;\n            });\n            const tradingPlayerHasAllProperties = this.props.store.game.trades[this.state.selectedTrade].taken_properties.every(index => {\n                const property = this.props.store.game.board[index];\n                const hasHousesOnAny = this.props.store.game.board.filter(el => el.group === this.props.store.game.board[index].group && el.upgrade && el.upgrades > 0).length > 0;\n                return property.player === this.props.store.game.trades[this.state.selectedTrade].trading_player && !hasHousesOnAny;\n            });\n            return (\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column text-center\">\n                        <u>Échanges:</u>\n                        <ul ref=\"trades\" className=\"list-group pending-trades\">\n                            {this.props.store.game.trades.map((trade, i) => ({\n                                ...trade,\n                                index: i\n                            })).filter(trade => trade.state === \"PROPOSED\" && (trade.initiating_player === playerIndex || trade.trading_player === playerIndex)).map((trade, i) => {\n                                return (\n                                    <li key={i}\n                                        onClick={() => this.setState({selectedTrade: trade.index})}\n                                        className={`list-group-item list-group-item-action ${trade.index === this.state.selectedTrade ? \"active\" : \"\"}`}>\n                                        De {this.props.store.game.player_info[trade.initiating_player].username}\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                            <div className=\"d-flex flex-row justify-content-around main-trade-content\">\n                                <div className=\"d-flex flex-column text-center trade-view-left\">\n                                    <div className=\"trade-money-label\">\n                                        <u>{areYouInitiating ? `Vous donnez à ${tradingPlayer.username}` : `Vous donnez à ${initiatingPlayer.username}`}</u>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">$</span>\n                                        </div>\n                                        <input type=\"number\"\n                                               readOnly\n                                               value={areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_money : this.props.store.game.trades[this.state.selectedTrade].taken_money}\n                                               className=\"form-control\"\n                                               placeholder=\"Trade Money\"/>\n                                    </div>\n                                    <div className=\"player-properties-trade\">\n                                        {leftProperties.map((i) => {\n                                            const property = this.props.store.game.board[i];\n                                            return (\n                                                <div key={i}\n                                                     className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                                    <div className=\"trade-properties-pic\" style={{\n                                                        backgroundImage: `url(${property.url})`,\n                                                    }}/>\n                                                    <div className=\"trade-prop-name\">{property.name}</div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column text-center trade-view-right\">\n                                    <div className=\"trade-money-label\">\n                                        <u>{areYouInitiating ? `Vous gagnez de ${tradingPlayer.username}` : `Vous gagnez de ${initiatingPlayer.username}`}</u>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">$</span>\n                                        </div>\n                                        <input type=\"number\"\n                                               readOnly\n                                               value={!areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_money : this.props.store.game.trades[this.state.selectedTrade].taken_money}\n                                               className=\"form-control\"\n                                               placeholder=\"Trade Money\"/>\n                                    </div>\n                                    <div className=\"player-properties-trade\">\n                                        {rightProperties.map((i) => {\n                                            const property = this.props.store.game.board[i];\n                                            return (\n                                                <div key={i}\n                                                     className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                                    <div className=\"trade-properties-pic\" style={{\n                                                        backgroundImage: `url(${property.url})`,\n                                                    }}/>\n                                                    <div className=\"trade-prop-name\">{property.name}</div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                {playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player &&\n                                (\n                                    <button\n                                        disabled={this.props.store.game.player_info[playerIndex].state === \"NOT_TURN\" || !tradingPlayerHasAllProperties || !initiatingPlayerHasAllProperties || tradingPlayer.money < this.props.store.game.trades[this.state.selectedTrade].taken_money || initiatingPlayer.money < this.props.store.game.trades[this.state.selectedTrade].given_money}\n                                        onClick={() => {\n                                            this.props.store.acceptTrade(this.state.selectedTrade);\n                                            this.setState({selectedTrade: firstIndex});\n                                            this.refs.trades.scrollTop = 0;\n                                        }} type=\"button\"\n                                        className=\"btn btn-primary\"\n                                        style={{marginRight: 10}}\n                                    >Accepter\n                                    </button>\n                                )}\n                                <button\n                                    disabled={this.props.store.game.player_info[playerIndex].state === \"NOT_TURN\"}\n                                    onClick={() => {\n                                        playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player ? this.props.store.rejectTrade(this.state.selectedTrade) : this.props.store.cancelTrade(this.state.selectedTrade);\n                                        this.setState({selectedTrade: firstIndex});\n                                        this.refs.trades.scrollTop = 0;\n                                    }}\n                                    type=\"button\"\n                                    className=\"btn btn-primary\">{`${playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player ? \"Rejeter\" : \"Annuler\"}`}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (<div className=\"text-center\">Pas d'échanges</div>);\n        }\n    }\n}\n\nexport default inject(\"store\")(observer(TradesTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MousedOverTileTab extends Component {\n    state = {};\n\n    render() {\n        const tile = this.props.store.game.board[this.props.store.mousedOverTile];\n        const playersOnTile = this.props.store.game.player_info.map((player, i) => ({\n            ...player,\n            index: i\n        })).filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.store.mousedOverTile);\n        let relatedTiles = [];\n        if (tile.type === \"rr\" || tile.type === \"utility\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.type === this.props.store.game.board[this.props.store.mousedOverTile].type && i !== this.props.store.mousedOverTile);\n        } else if (tile.type === \"property\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.group === this.props.store.game.board[this.props.store.mousedOverTile].group && i !== this.props.store.mousedOverTile);\n        }\n        return (\n            <div className=\"d-flex flex-column align-items-center justify-content-center tile-info-container\">\n                <div className=\"d-flex flex-row\">\n                    <div className=\"d-flex flex-column align-items-center justify-content-center\">\n                        <div className=\"tile-info-image-div\" style={{\n                            backgroundImage: `url(${tile.url})`,\n                        }}/>\n                        <div className=\"tile-info-name\">\n                            {tile.name}\n                        </div>\n                    </div>\n                    {(tile.type === \"property\" || tile.type === \"rr\" || tile.type === \"utility\") && (\n                        <div className=\"d-flex flex-row align-items-center justify-content-center\">\n                            {relatedTiles.map((relTile, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"d-flex flex-column align-items-center justify-content-center\">\n                                        <div className=\"rel-tile-info-image-div\" style={{\n                                            backgroundImage: `url(${relTile.url})`,\n                                        }}/>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )}\n                </div>\n                {(tile.type === \"chance\" || tile.type === \"chest\") && (\n                    <div>\n                        Atteri ici ou pioche une carte\n                    </div>\n                )}\n                {(tile.type === \"go\") && (\n                    <div>\n                        Passe ou atteri et gagne $200.\n                    </div>\n                )}\n                {(tile.type === \"lux-tax\") && (\n                    <div>\n                        Paye $75.\n                    </div>\n                )}\n                {(tile.type === \"income-tax\") && (\n                    <div>\n                        Paye $200 ou 10% de ton revenu net\n                    </div>\n                )}\n                {(tile.type === \"property\" || tile.type === \"utility\" || tile.type === \"rr\") && (\n                    <div className=\"d-flex flex-row tile-info-property justify-content-between\">\n                        <div className=\"d-flex flex-column tile-info-rents\">\n                            <div className=\"d-flex justify-content-between\">\n                                <div>Prix:</div>\n                                <div>${tile.cost}</div>\n                            </div>\n                            {tile.owned && (\n                                <div className=\"d-flex justify-content-between\">\n                                    <div>Loyer actuel:</div>\n                                    <div>${this.props.store.calcRentCostTile(this.props.store.mousedOverTile, true)}</div>\n                                </div>\n                            )}\n                            <div className=\"d-flex justify-content-between\">\n                                <div>Loyer de base:</div>\n                                <div>${this.props.store.calcRentCostTile(this.props.store.mousedOverTile, true)}</div>\n                            </div>\n                        </div>\n                        <div className=\"d-flex flex-column justify-content-between tile-info-upgrades\">\n                            {tile.type === \"property\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Coût de financement:</div>\n                                        <div>${tile.upgrade}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>1ère Maison:</div>\n                                        <div>${tile.rent[1]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>2ème Maison:</div>\n                                        <div>${tile.rent[2]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>3ème Maison:</div>\n                                        <div>${tile.rent[3]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>4ère Maison:</div>\n                                        <div>${tile.rent[4]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Hotel:</div>\n                                        <div>${tile.rent[5]}</div>\n                                    </div>\n                                </div>\n                            )}\n                            {tile.type === \"rr\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Un propriétaire:</div>\n                                        <div>$25</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Deux propriétaires:</div>\n                                        <div>$50</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Trois propriétaires:</div>\n                                        <div>$100</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Quatre propriétaires:</div>\n                                        <div>$200</div>\n                                    </div>\n                                </div>\n                            )}\n                            {tile.type === \"utility\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Un propriétaire:</div>\n                                        <div>$Dé×4</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Deux propriétaires:</div>\n                                        <div>$Dé×10</div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column mt-3 players-on-tile\">\n                    {playersOnTile.length > 0 ?\n                        <div>\n                            <span>Joueurs sur la case:</span>\n                            <ul>\n                                {playersOnTile.map((player, i) => {\n                                    return <li key={i}>{player.username} - ({player.index + 1})</li>\n                                })}\n                            </ul>\n                        </div>\n                        :\n                        <span>Pas de joueur ici.</span>\n                    }\n                    {tile.owned ?\n                        <div>\n                            <span>Appartient à: {this.props.store.game.player_info[tile.player].username}</span>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MousedOverTileTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport NavTabs from './NavTabs';\nimport MyInfoTab from './MyInfoTab';\nimport MyPropertiesTab from './MyPropertiesTab';\nimport Logs from './Logs';\nimport Actions from './Actions';\nimport PlayersTab from './PlayersTab';\nimport TradeTab from './TradeTab';\nimport TradesTab from './TradesTab';\nimport MousedOverTileTab from './MousedOverTileTab';\n\nclass MainView extends Component {\n    state = {\n        dropdownExpanded: false,\n        selectedTab: \"my_info\",\n        selectedPlayer: 1,\n    };\n\n    selectTab = (state) => {\n        this.setState(state);\n    };\n    changeDropDown = (state) => {\n        this.setState(state);\n    };\n\n    render() {\n        return (\n            <div className=\"main-view\">\n                {this.props.store.game && this.props.store.game.game_state !== \"NOT_STARTED\" &&\n                <div className=\"main-view-content\">\n                    {this.props.store.mousedOverTile !== null && (\n                        <MousedOverTileTab/>\n                    )}\n                    {this.props.store.mousedOverTile === null && (\n                        <>\n                            <NavTabs\n                                dropdownExpanded={this.state.dropdownExpanded}\n                                changeDropDown={this.changeDropDown}\n                                selectTab={this.selectTab}\n                                selectedTab={this.state.selectedTab}\n                            />\n                            {this.state.selectedTab === \"my_info\" && (\n                                <>\n                                    <MyInfoTab/>\n                                    <Actions/>\n                                    <Logs/>\n                                </>\n                            )}\n                            {this.state.selectedTab === \"my_properties\" && (\n                                <MyPropertiesTab/>\n                            )}\n                            {this.state.selectedTab === \"player_info\" && (\n                                <PlayersTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                            {this.state.selectedTab === \"player_trade\" && (\n                                <TradeTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                            {this.state.selectedTab === \"trades\" && (\n                                <TradesTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                        </>\n                    )}\n\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MainView));","import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport MainView from \"./middleScreen/MainView\";\nimport \"./App.css\";\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\n\nclass Board extends Component {\n    componentDidMount() {\n        let gameInfo = localStorage.getItem(\"previous_game\");\n        if (!gameInfo) {\n            this.props.history.push(\"/start\");\n            return;\n        }\n        gameInfo = JSON.parse(gameInfo);\n        this.props.store.setGameAuthInfo(gameInfo);\n        this.props.store.connectToGame();\n    }\n\n    render() {\n        return (\n            this.props.store.inGame ? <div\n                    style={{outline: `2px solid ${this.props.store.getPlayer.state !== \"NOT_TURN\" ? \"#61c86a\" : \"#c8464b\"}`}}\n                    className=\"d-flex flex-column main-box\">\n                    <MainView/>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={20}/>\n                        <Card bottom={true} position={21}/>\n                        <div/>\n                        <Card bottom={true} position={22}/>\n                        <div/>\n                        <Card bottom={true} position={23}/>\n                        <Card bottom={true} position={24}/>\n                        <Card bottom={true} position={25}/>\n                        <Card bottom={true} position={26}/>\n                        <Card bottom={true} position={27}/>\n                        <Card bottom={true} position={28}/>\n                        <Card bottom={true} position={29}/>\n                        <Card position={30}/>\n                    </div>\n                    <div className=\"main-row-here d-flex flex-row justify-content-between\">\n                        <Card right={true} position={19}/>\n                        <Card left={true} position={31}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={18}/>\n                        <Card left={true} position={32}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={17}/>\n                        <Card left={true} position={33}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={16}/>\n                        <Card left={true} position={34}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={15}/>\n                        <Card left={true} position={35}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={14}/>\n                        <Card left={true} position={36}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={13}/>\n                        <Card left={true} position={37}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={12}/>\n                        <Card left={true} position={38}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={11}/>\n                        <Card left={true} position={39}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={10}/>\n                        <Card top={true} position={9}/>\n                        <Card top={true} position={8}/>\n                        <Card top={true} position={7}/>\n                        <Card top={true} position={6}/>\n                        <Card top={true} position={5}/>\n                        <Card top={true} position={4}/>\n                        <Card top={true} position={3}/>\n                        <Card top={true} position={2}/>\n                        <Card top={true} position={1}/>\n                        <Card position={0}/>\n                    </div>\n                </div>\n                :\n                <div style={{margin: \"auto\", textAlign: \"center\", fontSize: 80}}><i\n                    className=\"fas fa-spinner  fa-spin\"/></div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(Board)));\n","import React, {Component} from 'react';\nimport \"./App.css\";\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport Board from \"./Board\"\n\n\nclass MainApp extends Component {\n    state = {\n        selectedTab: this.props.history.location.pathname\n    };\n\n    render() {\n        return (\n            <div className=\"main d-flex flex-column\">\n                <Board/>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(MainApp)));\n","import React, {Component} from 'react';\nimport NewGame from \"./NewGame\";\nimport MainApp from \"./MainApp\";\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\nconst RedirectHome = () => {\n    return (\n        <Redirect to=\"/start\"/>\n    )\n};\n\nclass App extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/play-game\" component={MainApp}/>\n                <Route exact path=\"/start\" component={NewGame}/>\n                <Route path=\"/\" component={RedirectHome}/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","import {decorate, configure, observable, action, computed, runInAction} from 'mobx'\nimport io from 'socket.io-client';\n\nconfigure({enforceActions: \"observed\"});\nconst URL = process.env.REACT_APP_URL ? process.env.REACT_APP_URL : 'https://monopoly.cassimkhouani.com';\n\nclass Store {\n    socket = io(`${URL}/`, {forceNew: true});\n    mousedOverTile = null;\n    game = {};\n    selectedTab = \"my_info\";\n    gameAuthInfo = {};\n    connectToGame = () => {\n        this.socket.emit('join_game', this.gameAuthInfo);\n    };\n    setGameAuthInfo = (gameInfo) => {\n        this.gameAuthInfo = gameInfo;\n    };\n    updatePlayerJailRolls = (playerIndex) => {\n        this.socket.emit(\"update_player_jail_rolls\", {\n            game_id: this.gameAuthInfo.game_id,\n            jail_turns: this.game.player_info[playerIndex].jail_turns,\n            player_index: playerIndex,\n        });\n    };\n    startTurn = () => {\n        if (!this.playerJailState) {\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            this.movePlayer();\n            this.checkTile();\n        } else {\n            const playerIndex = this.playerIndex;\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setJailState(false);\n                this.syncPlayerJailState();\n                this.game.player_info[playerIndex].jail_turns = 0;\n            } else {\n                this.game.player_info[playerIndex].jail_turns += 1;\n            }\n            if(this.game.player_info[playerIndex].jail_turns >= 3){\n                this.setJailState(false);\n                this.syncPlayerJailState();\n                this.game.player_info[playerIndex].jail_turns = 0;\n            }\n            this.updatePlayerJailRolls(playerIndex);\n            this.setPlayerState(\"END_OF_TURN\");\n            this.syncPlayerState();\n        }\n    };\n    updatePlayerMoney = (playerIndex) => {\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n    payOutOfJail = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 50;\n        this.updatePlayerMoney(playerIndex);\n        this.setJailState(false);\n        this.syncPlayerJailState();\n        this.game.player_info[playerIndex].jail_turns = 0;\n        this.updatePlayerJailRolls(playerIndex);\n        this.setPlayerState(\"END_OF_TURN\");\n        this.syncPlayerState();\n    };\n    movePlayerDev = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = position;\n    };\n    movePlayerToTile = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 100);\n        this.game.player_info[playerIndex].position = position;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: position,\n            player_index: playerIndex,\n        });\n    };\n    devMoveHere = (tile_position) => {\n        this.setPlayerState(\"ROLLING\");\n        this.rollDice();\n        this.movePlayerDev(tile_position);\n        this.checkTile();\n    };\n    mergeTradeData = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.player_info[trade.initiating_player].money -= parseInt(trade.given_money);\n        this.game.player_info[trade.initiating_player].money += parseInt(trade.taken_money);\n        this.game.player_info[trade.trading_player].money += parseInt(trade.given_money);\n        this.game.player_info[trade.trading_player].money -= parseInt(trade.taken_money);\n        trade.given_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.trading_player;\n        });\n        trade.taken_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.initiating_player;\n        });\n    };\n    acceptTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.mergeTradeData(tradeIndex);\n        this.game.trades[tradeIndex].state = \"ACCEPTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} a accepté un échange de ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"accept_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n            trade,\n        });\n\n    };\n    rejectTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"REJECTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} a rejeté un échange de ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"reject_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    cancelTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"CANCELED\";\n        this.addToLog(`${this.game.player_info[trade.initiating_player].username} a annulé un échange de ${this.game.player_info[trade.trading_player].username}`);\n        this.socket.emit(\"cancel_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    giveUp = () => {\n        const playerIndex = this.playerIndex;\n        this.addToLog(`${this.game.player_info[playerIndex].username} a arrêté.`);\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[playerIndex].state = \"OUT\";\n        if (this.game.player_info.filter(player => player.state !== \"OUT\").length === 1) {\n            const winningPlayer = this.game.player_info.find(player => player.state !== \"OUT\");\n            this.socket.emit(\"end_game\", {\n                game_id: this.gameAuthInfo.game_id,\n                winning_player: winningPlayer,\n            });\n            this.game.game_state = \"ENDED\";\n        } else {\n            const newBoard = this.game.board.map(tile => {\n                if (tile.player === playerIndex) {\n                    return {\n                        ...tile,\n                        owned: false,\n                        player: null,\n                        mortgaged: false,\n                        upgrades: 0,\n                    }\n                } else {\n                    return tile;\n                }\n            });\n            this.game.board = newBoard;\n            this.socket.emit(\"player_gives_up\", {\n                game_id: this.gameAuthInfo.game_id,\n                player_index: playerIndex,\n                next_player: newCurrentPlayer,\n                new_board: newBoard,\n            });\n        }\n    };\n    createTrade = (tradingPlayer, givenProperties, takenProperties, givenMoney, takenMoney) => {\n        this.selectedTab = \"my_info\";\n        const initiatingPlayer = this.playerIndex;\n        const trade = {\n            initiating_player: initiatingPlayer,\n            trading_player: tradingPlayer,\n            given_properties: givenProperties,\n            taken_properties: takenProperties,\n            given_money: givenMoney,\n            taken_money: takenMoney,\n            state: \"PROPOSED\",\n        };\n        this.addToLog(`${this.game.player_info[initiatingPlayer].username} a commencé un échange avec ${this.game.player_info[tradingPlayer].username}`);\n        this.game.trades.push(trade);\n        this.socket.emit(\"create_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade\n        });\n    };\n    payPlayer = () => {\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        const rent = this.calcRentCostTile(this.game.player_info[givingPlayer].position, false);\n        this.addToLog(`${this.getPlayer.username} paye ${this.game.player_info[receivingPlayer].username} $${rent} pour avoir visité ${this.playerTile.name}.`);\n        this.game.player_info[receivingPlayer].money += rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].money -= rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].pay_multiplier = 1;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n    };\n    addToLog = (log) => {\n        const newLog = {log: log, time: new Date()};\n        this.game.logs.push(newLog);\n        this.socket.emit(\"add_log\", {\n            game_id: this.gameAuthInfo.game_id,\n            log: newLog,\n        });\n    };\n    checkTile = () => {\n        const tile = this.game.board[this.getPlayer.position];\n        const playerIndex = this.playerIndex;\n        if (this.getPlayer.dice[0] !== this.getPlayer.dice[1]) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.checkAndUpdateDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.jail_state) {\n            return;\n        }\n        this.addToLog(`${this.getPlayer.username} a fait ${this.diceSum} (${this.getPlayer.dice[0]} - ${this.getPlayer.dice[1]}). Case ${tile.name}.`);\n        this.checkIfPlayerPassedGo();\n        if (tile.owned && tile.player !== playerIndex) {\n            this.payPlayer();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        } else if (!tile.owned && (tile.type === \"property\" || tile.type === \"rr\" || tile.type === \"utility\")) {\n            if (this.getPlayer.money < this.game.board[this.getPlayer.position].cost) {\n                this.setPlayerState(\"BUY_TILE_NO_MONEY\");\n            } else {\n                this.setPlayerState(\"BUY_TILE\");\n            }\n        } else if (tile.type === \"lux-tax\") {\n            this.payLuxuryTax();\n        } else if (tile.type === \"chance\" || tile.type === \"chest\") {\n            this.handleModifierCard(tile.type);\n        } else if (tile.type === \"income-tax\") {\n            this.setPlayerState(\"INCOME_TAX\");\n        } else if (tile.type === \"go-to-jail\") {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n            this.goToJail(playerIndex);\n            this.addToLog(`${this.getPlayer.username} est en prison`);\n        } else {\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        }\n        this.syncPlayerState();\n    };\n    utilityChanceCardPayment = () => {\n        const roll = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1\n        ];\n        const rent = (roll[0] + roll[1]) * 10;\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        this.game.player_info[receivingPlayer].money += rent;\n        this.game.player_info[givingPlayer].money -= rent;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    handleModifierCard = (type) => {\n        const playerIndex = this.playerIndex;\n        let newCardIndex = 0;\n        let newCard = {};\n        if (type === \"chance\") {\n            newCardIndex = this.game.last_chance_card + 1 === this.game.chance.length ? 0 : this.game.last_chance_card + 1;\n            this.game.last_chance_card = newCardIndex;\n            newCard = this.game.chance[newCardIndex];\n        } else {\n            newCardIndex = this.game.last_chest_card + 1 === this.game.chest.length ? 0 : this.game.last_chest_card + 1;\n            this.game.last_chest_card = newCardIndex;\n            newCard = this.game.chest[newCardIndex];\n        }\n        this.addToLog(`${this.getPlayer.username} a pris: ${newCard.name}`);\n        if (newCard.type === \"simple_move\") {\n            if (newCard.position === 0) {\n                this.playerPassedGoMoneyIncrease();\n            } else if (this.getPlayer.position > newCard.position) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(newCard.position);\n            this.checkTile();\n        } else if (newCard.type === \"nearest_utility\") {\n            const utility = this.findNearestType(\"utility\");\n            if (this.getPlayer.position > utility) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(utility);\n\n            if (this.game.board[utility].owned && this.game.board[utility].player !== playerIndex) {\n                this.setPlayerState(\"UTILITY_CHANCE_CARD\");\n                this.syncPlayerState();\n            } else {\n                this.checkTile();\n            }\n        } else if (newCard.type === \"nearest_rr\") {\n            this.game.player_info[playerIndex].pay_multiplier = 2;\n            const rail_road = this.findNearestType(\"rr\");\n            if (this.getPlayer.position > rail_road) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(rail_road);\n            this.checkTile();\n        } else if (newCard.type === \"simple_bank_pay\") {\n            this.game.player_info[playerIndex].money += newCard.amount;\n            this.updatePlayerMoney(playerIndex);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        } else if (newCard.type === \"move_amount\") {\n            this.movePlayerToTile(this.getPlayer.position + newCard.amount);\n            this.checkTile();\n        } else if (newCard.type === \"go_to_jail\") {\n            this.goToJail(playerIndex);\n        } else if (newCard.type === \"pay_all_players\") {\n            this.payAllPlayers(newCard.amount);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        }\n\n        if (type === \"chance\") {\n            this.socket.emit(\"increase_chance_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chance_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        } else {\n            this.socket.emit(\"increase_chest_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chest_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        }\n    };\n    payAllPlayers = (amount) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money = this.game.player_info[playerIndex].money - (amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n        this.game.player_info.forEach((player, index) => {\n            if (index !== playerIndex) {\n                player.money += amount;\n            }\n        });\n        this.socket.emit(\"pay_all_players\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            amount: amount,\n        });\n    };\n    findNearestType = (type) => {\n        let nearest = this.game.board.findIndex((tile, index) => {\n            if (index < this.getPlayer.position) {\n                return false;\n            }\n            return tile.type === type;\n        });\n        if (nearest === -1) { // no utilities in front\n            nearest = this.game.board.findIndex((tile) => {\n                return tile.type === type;\n            });\n        }\n        return nearest;\n    };\n    payLuxuryTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 75;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} paye $75 pour s'enfuir de colle :O`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payPercentTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= Math.ceil(this.netWorth * .10);\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} choisi de payer 10% de son revenu net (${Math.ceil(this.netWorth * .10)}).`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payFlatTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 200;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} choisi de payer $200 dollars.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    goToJail = (playerIndex) => {\n        this.game.player_info[playerIndex].position = 10;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: 10,\n            player_index: playerIndex,\n        });\n        this.setJailState(true);\n        this.syncPlayerJailState();\n        this.setPlayerState(\"END_OF_TURN\");\n    };\n    checkAndUpdateDoublesRolled = (playerIndex) => {\n        this.game.player_info[playerIndex].doubles_rolled += 1;\n        if (this.game.player_info[playerIndex].doubles_rolled === 3) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.goToJail(playerIndex);\n        } else {\n            // this.setPlayerState(\"START_TURN\");\n        }\n        this.updatePlayerDoublesRolled(playerIndex);\n    };\n    updatePlayerDoublesRolled = (playerIndex) => {\n        this.socket.emit(\"update_players_doubles\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            doubles_rolled: this.getPlayer.doubles_rolled,\n        });\n    };\n\n    playerPassedGoMoneyIncrease = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += 200;\n        this.addToLog(`${this.getPlayer.username} passe GO et gagne $200!`);\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n    checkIfPlayerPassedGo = () => {\n        if (this.getPlayer.position - this.diceSum < 0) { //passed or on go\n            this.playerPassedGoMoneyIncrease();\n        }\n    };\n    syncPlayerJailState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_jail_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            jail_state: this.playerJailState,\n        });\n    };\n    syncPlayerState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            state: this.playerState,\n        });\n    };\n    buyTile = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[this.getPlayer.position].cost;\n        this.game.board[this.getPlayer.position].owned = true;\n        this.game.board[this.getPlayer.position].player = playerIndex;\n        this.addToLog(`${this.getPlayer.username} achète ${this.playerTile.name} pour $${this.playerTile.cost}.`);\n        this.socket.emit(\"buy_tile\", {\n            game_id: this.gameAuthInfo.game_id,\n            tile_index: this.getPlayer.position,\n            tile_bought: this.game.board[this.getPlayer.position],\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    rejectBuyTile = () => {\n        this.addToLog(`${this.getPlayer.username} refuse de payer ${this.playerTile.name}.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.socket.emit('initiate_auction', {\n            game_id: this.gameAuthInfo.game_id,\n            tile: this.getPlayer.position,\n        });\n        this.game.auction = true;\n        this.game.auction_tile = this.getPlayer.position;\n        this.syncPlayerState();\n    };\n    endTurn = () => {\n        this.refreshCurrentProposingTrade();\n        this.setPlayerState(\"NOT_TURN\");\n        const playerIndex = this.playerIndex;\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[newCurrentPlayer].state = \"START_TURN\";\n        this.socket.emit('end_turn', {\n            game_id: this.gameAuthInfo.game_id,\n            next_player: newCurrentPlayer,\n            old_player: playerIndex,\n        });\n    };\n    startGame = () => {\n        this.game.game_state = \"STARTED\";\n        this.socket.emit('start_game', {\n            game_id: this.gameAuthInfo.game_id,\n        });\n    };\n    movePlayer = () => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = 0;\n        while (i <= this.diceSum) {\n            this.game.animated_players_move.moves.push(this.circularAdd(this.game.player_info[playerIndex].position, i, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = this.circularAdd(this.game.player_info[playerIndex].position, this.diceSum, 39);\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: this.game.player_info[playerIndex].position,\n            player_index: playerIndex,\n        });\n    };\n    upgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[index].upgrade;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades += 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n    downgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += this.game.board[index].upgrade / 2;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades -= 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n\n    constructor() {\n        this.socket.on(\"game_info\", (data) => {\n            console.log(\"game info\", data);\n            if (data) {\n                this.setGameInfo(data);\n            }\n        });\n        this.socket.on('reconnect', () => {\n            console.log(\"reconnecting\");\n            this.connectToGame();\n        });\n        this.socketActions();\n\n    }\n\n    socketActions = () => {\n        this.socket.on(\"player_moved\", data => {\n            console.log(\"player_moved\", data);\n            runInAction(() => {\n                this.game.player_info[data.player].position = data.position;\n            });\n        });\n        this.socket.on(\"tile_bought\", data => {\n            console.log(\"tile_bought\", data);\n            runInAction(() => {\n                this.game.player_info[data.player.player_index].money = data.player.player_money;\n                this.game.board[data.tile.tile_index] = data.tile.tile;\n            });\n        });\n        this.socket.on(\"player_money_updated\", data => {\n            console.log(\"player_money_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = data.player_money;\n            });\n        });\n        this.socket.on(\"turn_ended\", data => {\n            console.log(\"turn_ended\", data);\n            runInAction(() => {\n                if (data.next_player === this.playerIndex) {\n                    if (this.game.player_info[this.playerIndex].state === \"OUT\") {\n                        this.endTurn();\n                    } else {\n                        this.game.player_info[data.next_player].state = \"START_TURN\";\n                        this.game.player_info[data.old_player].state = \"NOT_TURN\";\n                    }\n                }\n            });\n        });\n        this.socket.on(\"sync_player_jail_state_synced\", data => {\n            console.log(\"sync_player_jail_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_state = data.jail_state;\n            });\n        });\n        this.socket.on(\"update_player_jail_rolls_updated\", data => {\n            console.log(\"update_player_jail_rolls_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_turns = data.jail_turns;\n            });\n        });\n        this.socket.on(\"transaction_processed\", data => {\n            console.log(\"transaction_processed\", data);\n            runInAction(() => {\n                this.game.player_info[data.giving_player].money = data.giving_player_money;\n                this.game.player_info[data.giving_player].pay_multiplier = 1;\n                this.game.player_info[data.receiving_player].money = data.receiving_player_money;\n            });\n        });\n        this.socket.on(\"players_doubles_updated\", data => {\n            console.log(\"players_doubles_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].doubles_rolled = data.doubles_rolled;\n            });\n        });\n        this.socket.on(\"dice_roll_updated\", data => {\n            console.log(\"dice_roll_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].dice = data.dice;\n            });\n        });\n        this.socket.on(\"player_state_synced\", data => {\n            console.log(\"player_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = data.state;\n            });\n        });\n        this.socket.on(\"chest_card_increased\", data => {\n            console.log(\"chest_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chest_card = data.last_chest_card;\n            });\n        });\n        this.socket.on(\"chance_card_increased\", data => {\n            console.log(\"chance_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chance_card = data.last_chance_card;\n            });\n        });\n        this.socket.on(\"property_mortgaged\", data => {\n            console.log(\"property_mortgaged\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].mortgaged = data.mortgage_value;\n            });\n        });\n        this.socket.on(\"tile_upgraded\", data => {\n            console.log(\"tile_upgraded\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].upgrades = data.upgrades;\n            });\n        });\n        this.socket.on(\"trade_accepted\", data => {\n            console.log(\"trade_accepted\", data);\n            this.mergeTradeData(data.trade_index);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"ACCEPTED\";\n            });\n        });\n        this.socket.on(\"trade_rejected\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"REJECTED\";\n            });\n        });\n        this.socket.on(\"auction_initiated\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.auction = true;\n                this.game.auction_tile = data.tile;\n            });\n        });\n        this.socket.on(\"trade_canceled\", data => {\n            console.log(\"trade_canceled\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"CANCELED\";\n            });\n        });\n        this.socket.on(\"trade_created\", data => {\n            console.log(\"trade_created\", data);\n            runInAction(() => {\n                this.game.trades.push(data.trade);\n            });\n        });\n        this.socket.on(\"log_added\", data => {\n            console.log(\"log_added\", data);\n            runInAction(() => {\n                this.game.logs.push(data.log);\n            });\n        });\n        this.socket.on(\"game_started\", data => {\n            console.log(\"game_started\", data);\n            runInAction(() => {\n                this.game.game_state = \"STARTED\";\n            });\n        });\n        this.socket.on(\"player_gave_up\", data => {\n            console.log(\"player_gave_up\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = \"OUT\";\n                this.game.player_info[data.next_player].state = \"START_TURN\";\n                this.game.board = data.new_board;\n            });\n        });\n        this.socket.on(\"game_ended\", data => {\n            console.log(\"game_ended\", data);\n            runInAction(() => {\n                this.game.game_state = \"ENDED\";\n            });\n        });\n        this.socket.on(\"animated_players_moved\", data => {\n            console.log(\"animated_players_moved\", data);\n            runInAction(() => {\n                this.game.animated_players_move = data.animated_players_move;\n                const movingPlayer = setInterval(() => {\n                    runInAction(() => {\n                        this.game.animated_players_move.moves.shift();\n                        if (this.game.animated_players_move.moves.length === 0) {\n                            clearInterval(movingPlayer);\n                        }\n                    });\n                }, 200);\n            });\n        });\n        this.socket.on(\"pay_all_players_payed\", data => {\n            console.log(\"pay_all_players_payed\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = this.game.player_info[data.player_index].money - (data.amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n                this.game.player_info.forEach((player, index) => {\n                    if (index !== data.player_index) {\n                        player.money += data.amount;\n                    }\n                });\n            });\n        });\n    };\n    setGameInfo = (data) => {\n        this.game = data\n    };\n    setMousedOverTile = (tile) => {\n        this.mousedOverTile = tile;\n    };\n    clearMousedOverTile = () => {\n        this.mousedOverTile = null;\n    };\n\n    rollDice = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].dice = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n        ];\n        this.socket.emit(\"update_dice_roll\", {\n            game_id: this.gameAuthInfo.game_id,\n            dice: this.game.player_info[playerIndex].dice,\n            player_index: playerIndex,\n        });\n    };\n    calcRentCostTile = (tileIndex, preDiceRoll) => {\n        const tile = this.game.board[tileIndex];\n        if (tile.type === \"rr\") {\n            let numOwns = this.game.board.filter(el => el.type === \"rr\" && el.player === tile.player).length;\n            return tile.base_rent * Math.pow(2, numOwns - 1);\n        } else if (tile.type === \"property\") {\n            if (tile.mortgaged) {\n                return 0;\n            }\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            let noneMortgaged = this.game.board.filter(el => el.group === tile.group).every(el => !el.mortgaged);\n            if (ownsAll && noneMortgaged) {\n                if (tile.upgrades > 0) {\n                    return tile.rent[tile.upgrades];\n                }\n                return tile.rent[0] * 2;\n            } else {\n                return tile.rent[0];\n            }\n        } else if (tile.type === \"utility\") {\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            if (!ownsAll) {\n                if (preDiceRoll) {\n                    return \"Dé×4\";\n                }\n                return this.diceSum * 4;\n            } else {\n                if (preDiceRoll) {\n                    return \"Dé×10\";\n                }\n                return this.diceSum * 10;\n            }\n        }\n    };\n    mortgageProperty = (property) => {\n        const playerIndex = this.playerIndex;\n        if (this.game.board[property].mortgaged) {\n            this.game.player_info[playerIndex].money -= this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        } else {\n            this.game.player_info[playerIndex].money += this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        }\n        this.game.board[property].mortgaged = !this.game.board[property].mortgaged;\n        this.socket.emit(\"mortgage_property\", {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: property,\n            mortgage_value: this.game.board[property].mortgaged,\n        });\n    };\n    circularAdd = (val, num, max) => {\n        if (val + num > max) {\n            num = num - (max - val);\n            return num - 1;\n        } else {\n            return val + num;\n        }\n    };\n\n    get diceSum() {\n        return this.getPlayer.dice[0] + this.getPlayer.dice[1];\n    }\n\n    get playerTile() {\n        return this.game.board[this.getPlayer.position];\n    }\n\n    get getPlayer() {\n        return this.game.player_info[this.playerIndex];\n    }\n\n    get inGame() {\n        if (!this.game.player_info) {\n            return false;\n        } else if (this.playerIndex === -1) {\n            return false;\n        } else {\n            return true\n        }\n    }\n\n    setPlayerState = (state) => {\n        this.game.player_info[this.playerIndex].state = state;\n    };\n    setJailState = (state) => {\n        this.game.player_info[this.playerIndex].jail_state = state;\n    };\n\n    get playerState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return \"NOT_TURN\";\n        // } else {\n        return this.getPlayer.state;\n        // }\n    }\n\n    get playerJailState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return false;\n        // } else {\n        return this.getPlayer.jail_state;\n        // }\n    }\n\n    netWorthOfPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    };\n    liquidWorthofPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    };\n\n    get netWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    }\n\n    get liquidWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    }\n\n    playersProperties = (playerIndex) => {\n        const player = this.game.player_info[playerIndex];\n        return this.game.board\n            .map((tile, i) => {\n                let ownsAll = this.game.board.filter(el => el.group === this.game.board[i].group && el.player !== this.game.board[i].player).length === 0;\n                let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => !el.mortgaged);\n                let offByOneUp = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades > el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades < el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                let offByOneDown = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades < el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades > el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                const hasHousesOnAny = this.game.board.filter(el => el.group === this.game.board[i].group && el.upgrade && el.upgrades > 0).length > 0;\n                const canUpgrade = offByOneUp && ownsAll && noneMortgaged && this.game.board[i].upgrades < 5 && player.money >= this.game.board[i].upgrade;\n                const canDowngrade = offByOneDown && ownsAll && noneMortgaged && this.game.board[i].upgrades > 0;\n                let calculatedRent = this.calcRentCostTile(i, true);\n                return {...tile, index: i, canUpgrade, canDowngrade, calculatedRent, ownsAll, hasHousesOnAny}\n            })\n            .filter(tile => {\n                return tile.owned && tile.player === playerIndex;\n            })\n            .sort((a, b) => {\n                return a.group === b.group ? a.cost < b.cost ? 1 : -1 : a.type === b.type ? a.group < b.group ? -1 : 1 : a.type < b.type ? -1 : 1\n            });\n    };\n\n    get playerIndex() {\n        if (!this.game.player_info) {\n            return null;\n        }\n        return this.game.player_info.findIndex(el => el.username === this.gameAuthInfo.username);\n    }\n\n    canUpgrade = (propertyIndex) => {\n        let ownsAll = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group && el.player !== this.game.board[propertyIndex].player).length === 0;\n        let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group).every(el => !el.mortgaged);\n        return ownsAll && noneMortgaged && this.game.board[propertyIndex].upgrades < 3 && this.getPlayer.money >= this.game.board[propertyIndex].upgrade;\n    };\n\n    get currentPlayerTurn() {\n        const player = this.game.player_info.find(player => (player.state !== \"NOT_TURN\" && player.state !== \"OUT\"));\n        return player || {};\n    }\n\n    findNextPlayerInGame = (playerIndex) => {\n        for (let i = playerIndex; i < this.game.player_info.length * 3; i++) {\n            const player = this.game.player_info[(i % this.game.player_info.length + this.game.player_info.length) % this.game.player_info.length];\n            if (player.state !== \"OUT\" && player.id !== playerIndex) {\n                return player.id\n            }\n        }\n    };\n    refreshCurrentProposingTrade = () => {\n        this.currentProposingTrade = {\n            moneyGiven: 0,\n            moneyTaken: 0,\n            givenProperties: [],\n            takenProperties: [],\n        }\n    };\n    setCurrentProposingTrade = (key, val) => {\n        this.currentProposingTrade[key] = val;\n    };\n    currentProposingTrade = {\n        moneyGiven: 0,\n        moneyTaken: 0,\n        givenProperties: [],\n        takenProperties: [],\n    }\n}\n\ndecorate(Store, {\n    players: observable,\n    game: observable,\n    currentProposingTrade: observable,\n    // gameState: observable,\n    mousedOverTile: observable,\n    selectedTab: observable,\n    gameAuthInfo: observable,\n    diceSum: computed,\n    playerState: computed,\n    inGame: computed,\n    playerJailState: computed,\n    getPlayer: computed,\n    playerTile: computed,\n    netWorth: computed,\n    liquidWorth: computed,\n    playerIndex: computed,\n    currentPlayerTurn: computed,\n    rollDice: action,\n    refreshCurrentProposingTrade: action,\n    setCurrentProposingTrade: action,\n    setPlayerState: action,\n    movePlayerToTile: action,\n    checkTile: action,\n    payPercentTax: action,\n    payFlatTax: action,\n    goToJail: action,\n    utilityChanceCardPayment: action,\n    checkAndUpdateDoublesRolled: action,\n    setJailState: action,\n    clearMousedOverTile: action,\n    setMousedOverTile: action,\n    setUsername: action,\n    mortgageProperty: action,\n    setGameInfo: action,\n    createTrade: action,\n    payOutOfJail: action,\n    payLuxuryTax: action,\n    connectedFromNew: action,\n    movePlayerDev: action,\n    movePlayer: action,\n    payPlayer: action,\n    buyTile: action,\n    mergeTradeData: action,\n    acceptTrade: action,\n    addToLog: action,\n    startTurn: action,\n    payAllPlayers: action,\n    endTurn: action,\n    handleModifierCard: action,\n    upgradeProperty: action,\n    giveUp: action,\n    rejectTrade: action,\n    rejectBuyTile: action,\n    cancelTrade: action,\n    setGameAuthInfo: action,\n    downgradeProperty: action,\n    checkIfPlayerPassedGo: action,\n    playerPassedGoMoneyIncrease: action,\n    socketActions: action,\n    connectToGame: action,\n    startGame: action,\n});\n\nexport default new Store();","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'mobx-react';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './store/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}