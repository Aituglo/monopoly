{"version":3,"sources":["NewGame.js","Player.js","Card.js","middleScreen/NavTabs.js","middleScreen/MyInfoTab.js","middleScreen/MyPropertiesTab.js","middleScreen/Logs.js","middleScreen/Actions.js","middleScreen/PlayersTab.js","middleScreen/TradeTab.js","middleScreen/TradesTab.js","middleScreen/MousedOverTileTab.js","middleScreen/MainView.js","Board.js","MainApp.js","App.js","store/Store.js","serviceWorker.js","index.js"],"names":["URL","process","REACT_APP_URL","NewGame","state","game_name","game_password","username","password","selectedTab","searchGameName","gamesFound","gamesFoundSelected","joinGamePassword","joinGameUsername","joinGameUsernamePassword","formError","submitNewGame","e","preventDefault","fetch","concat","method","headers","Content-Type","body","JSON","stringify","_this","then","res","json","response","localStorage","setItem","game_id","console","log","props","history","push","joinGame","_id","error","setState","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","success","auth","keyPress","keyCode","searchForGames","data","games","removeItem","_this2","this","react_default","a","createElement","className","lib","onClick","onSubmit","required","value","onChange","_ref","target","type","placeholder","_ref2","_ref3","_ref4","_ref5","onKeyDown","length","map","game","index","key","player_info","game_state","readOnly","_ref6","_ref7","_ref8","Component","withRouter","inject","observer","Player","moving","style","backgroundColor","store","playerNumber","color","Card","boxShadow","right","board","left","top","bottom","Object","objectSpread","backgroundImage","url","mortgaged","onMouseLeave","clearMousedOverTile","onMouseEnter","setMousedOverTile","filter","player","i","src_Player","id","animated_players_move","moves","tileIndex","owned","upgrades","NavTabs","selectTab","changeDropDown","dropdownExpanded","data-toggle","role","aria-haspopup","aria-expanded","gameAuthInfo","selectedPlayer","MyInfoTab","_this$props$store$get","slicedToArray","getPlayer","dice","diceOne","diceTwo","playerIndex","playerTile","name","money","netWorth","liquidWorth","MyPropertiesTab","scope","playersProperties","property","calculatedRent","parseInt","upgrade","disabled","canUpgrade","upgradeProperty","canDowngrade","downgradeProperty","cost","el","group","every","mortgageProperty","checked","Logs","prevProps","prevState","snapshot","div","refs","logs","scrollTop","scrollHeight","ref","date","Date","time","toLocaleString","slice","Actions","startGame","playerState","jail_turns","startTurn","currentPlayerTurn","utilityChanceCardPayment","jail_state","payOutOfJail","buyTile","rejectBuyTile","payPercentTax","payFlatTax","endTurn","giveUp","PlayersTab","netWorthOfPlayer","liquidWorthofPlayer","TradeTab","proposeTrade","createTrade","currentProposingTrade","givenProperties","takenProperties","moneyGiven","moneyTaken","refreshCurrentProposingTrade","yourCash","playersCash","setCurrentProposingTrade","min","hasHousesOnAny","findIndex","toConsumableArray","TradesTab","selectedTrade","trades","firstIndex","initiating_player","trading_player","initiatingPlayer","tradingPlayer","areYouInitiating","rightProperties","taken_properties","given_properties","leftProperties","initiatingPlayerHasAllProperties","tradingPlayerHasAllProperties","trade","given_money","taken_money","acceptTrade","marginRight","rejectTrade","cancelTrade","MousedOverTileTab","tile","mousedOverTile","playersOnTile","relatedTiles","relTile","calcRentCostTile","rent","MainView","middleScreen_MousedOverTileTab","Fragment","middleScreen_NavTabs","middleScreen_MyInfoTab","middleScreen_Actions","middleScreen_Logs","middleScreen_MyPropertiesTab","middleScreen_PlayersTab","middleScreen_TradeTab","middleScreen_TradesTab","Board","gameInfo","getItem","parse","setGameAuthInfo","connectToGame","inGame","outline","middleScreen_MainView","src_Card","margin","textAlign","fontSize","MainApp","location","pathname","src_Board","RedirectHome","Redirect","to","App","Switch","Route","exact","path","component","configure","enforceActions","Store","classCallCheck","socket","io","forceNew","emit","updatePlayerJailRolls","player_index","playerJailState","setPlayerState","rollDice","setJailState","syncPlayerJailState","syncPlayerState","movePlayer","checkTile","updatePlayerMoney","player_money","movePlayerDev","circularAdd","movingPlayer","setInterval","runInAction","shift","clearInterval","movePlayerToTile","new_position","devMoveHere","tile_position","mergeTradeData","tradeIndex","forEach","propIndex","addToLog","trade_index","newCurrentPlayer","findNextPlayerInGame","winningPlayer","find","winning_player","newBoard","next_player","new_board","givenMoney","takenMoney","payPlayer","receivingPlayer","givingPlayer","pay_multiplier","giving_player","receiving_player","giving_player_money","receiving_player_money","newLog","doubles_rolled","updatePlayerDoublesRolled","checkAndUpdateDoublesRolled","diceSum","checkIfPlayerPassedGo","payLuxuryTax","handleModifierCard","goToJail","roll","Math","floor","random","newCardIndex","newCard","last_chance_card","chance","last_chest_card","chest","playerPassedGoMoneyIncrease","utility","findNearestType","rail_road","amount","payAllPlayers","nearest","ceil","tile_index","tile_bought","auction","auction_tile","old_player","property_index","socketActions","on","Notification","onclick","window","focus","mortgage_value","setGameInfo","preDiceRoll","numOwns","base_rent","pow","ownsAll","noneMortgaged","val","num","max","worth","offByOneUp","offByOneDown","sort","b","propertyIndex","decorate","players","observable","computed","action","setUsername","connectedFromNew","store_Store","Boolean","hostname","match","ReactDOM","render","index_module","BrowserRouter","src_App_0","document","getElementById","requestPermission","result","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6NAMMA,EAAMC,8CAAYC,eAAiB,qCAEnCC,6MACFC,MAAQ,CACJC,UAAW,GACXC,cAAe,GACfC,SAAU,GACVC,SAAU,GACVC,YAAa,cACbC,eAAgB,GAChBC,WAAY,GACZC,oBAAqB,EACrBC,iBAAkB,GAClBC,iBAAkB,GAClBC,yBAA0B,GAC1BC,UAAW,MAOfC,cAAgB,SAACC,GACbA,EAAEC,iBACFC,MAAK,GAAAC,OAAIrB,EAAJ,gBAAuB,CACxBsB,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBtB,UAAWuB,EAAKxB,MAAMC,UACtBC,cAAesB,EAAKxB,MAAME,cAC1BC,SAAUqB,EAAKxB,MAAMG,SACrBC,SAAUoB,EAAKxB,MAAMI,aAGxBqB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACFC,aAAaC,QAAQ,gBAAiBR,KAAKC,UAAU,CACjDtB,UAAWuB,EAAKxB,MAAMC,UACtBC,cAAesB,EAAKxB,MAAME,cAC1BC,SAAUqB,EAAKxB,MAAMG,SACrBC,SAAUoB,EAAKxB,MAAMI,SACrB2B,QAASH,EAASG,WAEtBC,QAAQC,IAAIL,GACZJ,EAAKU,MAAMC,QAAQC,KAAK,mBAGpCC,SAAW,SAACvB,GACRA,EAAEC,iBACFiB,QAAQC,IAAIT,EAAKxB,MAAMO,WAAWiB,EAAKxB,MAAMQ,oBAAoB8B,KACjEtB,MAAK,GAAAC,OAAIrB,EAAJ,cAAqB,CACtBsB,OAAQ,OACRC,QAAS,CACLC,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBQ,QAASP,EAAKxB,MAAMO,WAAWiB,EAAKxB,MAAMQ,oBAAoB8B,IAC9DpC,cAAesB,EAAKxB,MAAMS,iBAC1BN,SAAUqB,EAAKxB,MAAMU,iBACrBN,SAAUoB,EAAKxB,MAAMW,6BAGxBc,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAAG,GACFI,QAAQC,IAAIL,GACRA,EAASW,MACTf,EAAKgB,SAAS,CAAC5B,UAAWgB,EAASW,OAAQ,WACV,sBAAzBf,EAAKxB,MAAMY,UACX6B,QAAMF,MAAM,oCAAqC,CAC7CG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAEiB,uBAAzBvB,EAAKxB,MAAMY,UAClB6B,QAAMF,MAAM,wCAAsC,CAC9CG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,IAEiB,wBAAzBvB,EAAKxB,MAAMY,WAClB6B,QAAMF,MAAM,oCAAqC,CAC7CG,SAAU,YACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,MAMvBnB,EAASoB,UACTnB,aAAaC,QAAQ,gBAAiBR,KAAKC,UAAU,CACjDQ,QAASP,EAAKxB,MAAMO,WAAWiB,EAAKxB,MAAMQ,oBAAoB8B,IAC9DrC,UAAWuB,EAAKxB,MAAMO,WAAWiB,EAAKxB,MAAMQ,oBAAoByC,KAAKhD,UACrEC,cAAesB,EAAKxB,MAAMS,iBAC1BN,SAAUqB,EAAKxB,MAAMU,iBACrBN,SAAUoB,EAAKxB,MAAMW,4BAEzBqB,QAAQC,IAAIL,GACZJ,EAAKU,MAAMC,QAAQC,KAAK,oBAIxCc,SAAW,SAACpC,GACU,KAAdA,EAAEqC,SACF3B,EAAK4B,oBAGbA,eAAiB,WACb5B,EAAKgB,SAAS,CAACjC,WAAY,GAAIC,oBAAqB,IACpDQ,MAAK,GAAAC,OAAIrB,EAAJ,gCAAAqB,OAAsCO,EAAKxB,MAAMM,iBACjDmB,KAAK,SAAAC,GAAG,OAAIA,EAAIC,SAChBF,KAAK,SAAA4B,GACF7B,EAAKgB,SAAS,CAACjC,WAAY8C,EAAKC,8FAxGxCzB,aAAa0B,WAAW,6CA4GnB,IAAAC,EAAAC,KAEL,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACE,EAAA,eAAD,MACAJ,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBE,QAAS,kBAAMP,EAAKhB,SAAS,CAACnC,YAAa,kBACvEqD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAA5C,OAAyC,gBAA3BwC,KAAKzD,MAAMK,YAAgC,SAAW,KAAlF,wBAIJqD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBE,QAAS,kBAAMP,EAAKhB,SAAS,CAACnC,YAAa,gBACvEqD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAA5C,OAAyC,cAA3BwC,KAAKzD,MAAMK,YAA8B,SAAW,KAAhF,0BAKoB,gBAA3BoD,KAAKzD,MAAMK,aACRqD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,QAAMI,SAAUP,KAAK5C,eACjB6C,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yCAAjB,oBACAH,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACC,MAAOT,KAAKzD,MAAMC,UAC3BkE,SAAU,SAAAC,GAAA,IAAEC,EAAFD,EAAEC,OAAF,OAAcb,EAAKhB,SAAS,CAACvC,UAAWoE,EAAOH,SACzDI,KAAK,OACLT,UAAU,eACVU,YAAY,eACnBb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yCAAjB,6BACAH,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACC,MAAOT,KAAKzD,MAAME,cAC3BiE,SAAU,SAAAK,GAAA,IAAEH,EAAFG,EAAEH,OAAF,OAAcb,EAAKhB,SAAS,CAACtC,cAAemE,EAAOH,SAC7DI,KAAK,WAAWT,UAAU,oBAC1BU,YAAY,iBACnBb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yCAAjB,WACAH,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACC,MAAOT,KAAKzD,MAAMG,SAC3BgE,SAAU,SAAAM,GAAA,IAAEJ,EAAFI,EAAEJ,OAAF,OAAcb,EAAKhB,SAAS,CAACrC,SAAUkE,EAAOH,SACxDI,KAAK,OAAOT,UAAU,oBACtBU,YAAY,QACnBb,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yCAAjB,oBACAH,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACC,MAAOT,KAAKzD,MAAMI,SAC3B+D,SAAU,SAAAO,GAAA,IAAEL,EAAFK,EAAEL,OAAF,OAAcb,EAAKhB,SAAS,CAACpC,SAAUiE,EAAOH,SAASI,KAAK,WACtET,UAAU,oBACVU,YAAY,iBACnBb,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAAST,UAAU,mBAAhC,cAIgB,cAA3BJ,KAAKzD,MAAMK,aACRqD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,yCAAjB,uBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACC,MAAOT,KAAKzD,MAAMM,eAC3B6D,SAAU,SAAAQ,GAAA,IAAEN,EAAFM,EAAEN,OAAF,OAAcb,EAAKhB,SAAS,CAAClC,eAAgB+D,EAAOH,SAASI,KAAK,OAC5ET,UAAU,eACVU,YAAY,YACZK,UAAWnB,KAAKP,WAEvBQ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,UAAQG,QAASN,KAAKL,eAAgBS,UAAU,4BACxCS,KAAK,UACTZ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAIxBJ,KAAKzD,MAAMO,WAAWsE,OAAS,GAC5BnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACXH,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACTJ,KAAKzD,MAAMO,WAAWuE,IAAI,SAACC,EAAMC,GAC9B,OACItB,EAAAC,EAAAC,cAAA,MAAIqB,IAAKF,EAAKzC,IACVyB,QAAS,WACDP,EAAKxD,MAAMQ,qBAAuBwE,GAClCxB,EAAKhB,SAAS,CACVhC,mBAAoBwE,EACpBvE,iBAAkB,GAClBC,iBAAkB,GAClBC,yBAA0B,MAItCkD,UAAU,0BACTL,EAAKxD,MAAMQ,qBAAuBwE,GAC/BtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,WAAMmB,EAAK9B,KAAKhD,WAChByD,EAAAC,EAAAC,cAAA,6BAAkBmB,EAAKG,YAAY,GAAG/E,WAE1CuD,EAAAC,EAAAC,cAAA,KAAGC,UAAU,+BAGpBL,EAAKxD,MAAMQ,qBAAuBwE,GAC/BtB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,IACU,qBAApBkB,EAAKI,YACFzB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,2EAIRF,EAAAC,EAAAC,cAAA,QAAMI,SAAUR,EAAKnB,UACjBqB,EAAAC,EAAAC,cAAA,SACIC,UAAU,yCADd,oBAGAH,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACC,MAAOa,EAAK9B,KAAKhD,UAC1BqE,KAAK,OACLc,UAAQ,EACRvB,UAAU,eACVU,YAAY,qBACnBb,EAAAC,EAAAC,cAAA,SACIC,UAAU,yCADd,6BAGAH,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACC,MAAOV,EAAKxD,MAAMS,iBAC3B0D,SAAU,SAAAkB,GAAA,IAAEhB,EAAFgB,EAAEhB,OAAF,OAAcb,EAAKhB,SAAS,CAAC/B,iBAAkB4D,EAAOH,SAChEI,KAAK,WAAWT,UAAU,oBAC1BU,YAAY,8BACnBb,EAAAC,EAAAC,cAAA,SACIC,UAAU,yCADd,WAGAH,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACC,MAAOV,EAAKxD,MAAMU,iBAC3ByD,SAAU,SAAAmB,GAAA,IAAEjB,EAAFiB,EAAEjB,OAAF,OAAcb,EAAKhB,SAAS,CAAC9B,iBAAkB2D,EAAOH,SAChEI,KAAK,OAAOT,UAAU,oBACtBU,YAAY,YACnBb,EAAAC,EAAAC,cAAA,SACIC,UAAU,yCADd,oBAGAH,EAAAC,EAAAC,cAAA,SAAOK,UAAQ,EAACC,MAAOV,EAAKxD,MAAMW,yBAC3BwD,SAAU,SAAAoB,GAAA,IAAElB,EAAFkB,EAAElB,OAAF,OAAcb,EAAKhB,SAAS,CAAC7B,yBAA0B0D,EAAOH,SACxEI,KAAK,WACLT,UAAU,oBACVU,YAAY,8BACnBb,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAAST,UAAU,mBAAhC,6BA/PtC2B,aAiRPC,cAAWC,YAAO,QAAPA,CAAgBC,YAAS5F,qBCtR7C6F,mLAEE,OACIlC,EAAAC,EAAAC,cAAA,OACIC,UAAS,GAAA5C,OAAKwC,KAAKvB,MAAM2D,OAAS,gBAAkB,SAA3C,qDACTC,MAAO,CAACC,gBAAkBtC,KAAKvB,MAAM2D,OAA4E,KAAnEpC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM+D,cAAcC,QAExGzC,KAAKvB,MAAM2D,QACRnC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEfJ,KAAKvB,MAAM2D,QACTnC,EAAAC,EAAAC,cAAA,SAAIH,KAAKvB,MAAM+D,aAAe,WAX7BT,aAkBNE,cAAO,QAAPA,CAAgBC,YAASC,ICflCO,mLACO,IAAA3E,EAAAiC,KACC2C,EAAY,GAalB,OAZI3C,KAAKvB,MAAMmE,QACXD,EAAUA,UAAV,oBAAAnF,OAA0CwC,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUwD,QAE3FzC,KAAKvB,MAAMqE,OACXH,EAAUA,UAAV,mBAAAnF,OAAyCwC,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUwD,QAE1FzC,KAAKvB,MAAMsE,MACXJ,EAAUA,UAAV,mBAAAnF,OAAyCwC,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUwD,QAE1FzC,KAAKvB,MAAMuE,SACXL,EAAUA,UAAV,oBAAAnF,OAA0CwC,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUwD,QAG3FxC,EAAAC,EAAAC,cAAA,OAEIkC,MAAKY,OAAAC,EAAA,EAAAD,CAAA,CACDE,gBAAe,OAAA3F,OAASwC,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUmE,IAA1D,MACZT,GAEPvC,UAAS,4EAAA5C,OAA8EwC,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUoE,UAAY,YAAc,IAClKC,aAActD,KAAKvB,MAAM8D,MAAMgB,oBAC/BC,aAAc,kBAAMzF,EAAKU,MAAM8D,MAAMkB,kBAAkB1F,EAAKU,MAAMQ,YAEjEe,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYiC,OAAO,SAAAC,GAAM,MAAqB,QAAjBA,EAAOpH,QAAiBmH,OAAO,SAAAC,GAAM,OAAIA,EAAO1E,WAAalB,EAAKU,MAAMQ,WAAUoC,IAAI,SAACsC,EAAQC,GAC/I,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAQrB,aAAcmB,EAAOG,GAAItC,IAAKoC,MAEhD5D,KAAKvB,MAAM8D,MAAMjB,KAAKyC,sBAAsBC,MAAMN,OAAO,SAAAO,GAAS,OAAIA,IAAclG,EAAKU,MAAMQ,WAAUoC,IAAI,SAAC4C,EAAWL,GACtH,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,CAAQrC,IAAKoC,EAAGxB,QAAQ,MAElCpC,KAAKvB,MAAMmE,OAAS5C,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUiF,OAASjE,EAAAC,EAAAC,cAAA,OAC3EkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,uBACbJ,KAAKvB,MAAMmE,OAAS5C,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUiF,OAClEjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6CACVJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,qCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,qCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,qCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,qCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,qCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,sCASrBJ,KAAKvB,MAAMuE,QAAUhD,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUiF,OAASjE,EAAAC,EAAAC,cAAA,OAC5EkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,wBACbJ,KAAKvB,MAAMuE,QAAUhD,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUiF,OACnEjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACVJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,oCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,oCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,oCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,oCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,qCAKrBJ,KAAKvB,MAAMqE,MAAQ9C,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUiF,OAASjE,EAAAC,EAAAC,cAAA,OAC1EkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,sBACbJ,KAAKvB,MAAMqE,MAAQ9C,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUiF,OACjEjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8CACVJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,sCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,sCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,sCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,sCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,uCAKrBJ,KAAKvB,MAAMsE,KAAO/C,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUiF,OAASjE,EAAAC,EAAAC,cAAA,OACzEkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,qBACbJ,KAAKvB,MAAMsE,KAAO/C,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUiF,OAChEjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4CACVJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,uCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,uCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,uCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,uCAGbJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAUkF,SAAW,GAC7DlE,EAAAC,EAAAC,cAAA,OACIkC,MAAO,CAACC,gBAAiBtC,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAMQ,UAAU0E,QAAQlB,OACpHrC,UAAU,gDAzLnB2B,aAmMJE,cAAO,QAAPA,CAAgBC,YAASQ,ICtMlC0B,mLACO,IAAArG,EAAAiC,KACL,OACIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gBACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBE,QAAS,kBAAMvC,EAAKU,MAAM4F,UAAU,CAACzH,YAAa,cAC9EqD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAA5C,OAAyC,YAA3BwC,KAAKvB,MAAM7B,YAA4B,SAAW,KAA9E,cAGJqD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBE,QAAS,kBAAMvC,EAAKU,MAAM4F,UAAU,CAACzH,YAAa,oBAC9EqD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAA5C,OAAyC,kBAA3BwC,KAAKvB,MAAM7B,YAAkC,SAAW,KAApF,yBAGJqD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAkBE,QAAS,kBAAMvC,EAAKU,MAAM4F,UAAU,CAACzH,YAAa,aAC9EqD,EAAAC,EAAAC,cAAA,OAAKC,UAAS,YAAA5C,OAAyC,WAA3BwC,KAAKvB,MAAM7B,YAA2B,SAAW,KAA7E,oBAGJqD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACVoD,aAAc,kBAAMzF,EAAKU,MAAM6F,eAAe,CAACC,kBAAkB,KACjEjB,aAAc,kBAAMvF,EAAKU,MAAM6F,eAAe,CAACC,kBAAkB,MAEjEtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BAA2BoE,cAAY,WAAWC,KAAK,SACjEC,gBAAc,OAAOC,gBAAc,SADxC,WAGA1E,EAAAC,EAAAC,cAAA,OAAKC,UAAS,iBAAA5C,OAAmBwC,KAAKvB,MAAM8F,iBAAmB,OAAS,KACmB,IAAtFvE,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYiC,OAAO,SAAAC,GAAM,MAAqB,QAAjBA,EAAOpH,QAAiB6E,QACxEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBAAf,kBAEHJ,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYiC,OAAO,SAAAC,GAAM,MAAqB,QAAjBA,EAAOpH,QAAiB6E,OAAS,GAAKpB,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYiC,OAAO,SAAAC,GAAM,MAAqB,QAAjBA,EAAOpH,QAAiB8E,IAAI,SAACsC,EAAQpC,GAAT,OAAA0B,OAAAC,EAAA,EAAAD,CAAA,GAClKU,EADkK,CAErKpC,YACAmC,OAAO,SAAAC,GAAM,OAAIA,EAAOjH,WAAaqB,EAAKU,MAAM8D,MAAMqC,aAAalI,WAAU2E,IAAI,SAAAsC,GAAM,OACvF1D,EAAAC,EAAAC,cAAA,OAAKG,QAAS,kBAAMvC,EAAKU,MAAM4F,UAAU,CACrCzH,YAAa,cACbiI,eAAgBlB,EAAOG,GACvBS,kBAAkB,KAClB/C,IAAKmC,EAAOG,GAAI1D,UAAU,iBAAiBuD,EAAOjH,SAJtD,OAIoEiH,EAAOG,GAAK,EAJhF,iBA/BN/B,aA4CPE,cAAO,QAAPA,CAAgBC,YAASkC,YC5ClCU,mLACO,IAAAC,EAAA9B,OAAA+B,EAAA,EAAA/B,CACsBjD,KAAKvB,MAAM8D,MAAM0C,UAAUC,KADjD,GACEC,EADFJ,EAAA,GACWK,EADXL,EAAA,GAEL,OACI9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,SACAH,EAAAC,EAAAC,cAAA,QACIC,UAAU,aAAaJ,KAAKvB,MAAM8D,MAAM0C,UAAUvI,SADtD,OACoEsD,KAAKvB,MAAM8D,MAAM8C,YAAc,EADnG,MAGJpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,UACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaJ,KAAKvB,MAAM8D,MAAM+C,WAAWC,OAE7DtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,mBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,SAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,YACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BJ,KAAKvB,MAAM8D,MAAM0C,UAAUO,QAE7DvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,SACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BJ,KAAKvB,MAAM8D,MAAMkD,WAEnDxF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,aACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BJ,KAAKvB,MAAM8D,MAAMmD,gBAI3DzF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0EACE,IAAZ+E,GAAiBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAClB,IAAZ+E,GAAiBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAClB,IAAZ+E,GAAiBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAClB,IAAZ+E,GAAiBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAClB,IAAZ+E,GAAiBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAClB,IAAZ+E,GAAiBlF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAC/BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACF,IAAZgF,GAAiBnF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAClB,IAAZgF,GAAiBnF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAClB,IAAZgF,GAAiBnF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAClB,IAAZgF,GAAiBnF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAClB,IAAZgF,GAAiBnF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAClB,IAAZgF,GAAiBnF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6BAjD3B2B,aAyDTE,cAAO,QAAPA,CAAgBC,YAAS4C,ICzDlCa,mLACO,IAAA5H,EAAAiC,KACL,OAEIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6EACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcwF,MAAM,OAAlC,OACA3F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcwF,MAAM,OAAlC,SACA3F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcwF,MAAM,OAAlC,oBACA3F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcwF,MAAM,OAAlC,uBAGJ3F,EAAAC,EAAAC,cAAA,SAAOC,UAAU,IAChBJ,KAAKvB,MAAM8D,MAAMsD,kBAAkB7F,KAAKvB,MAAM8D,MAAM8C,aAAahE,IAAI,SAACyE,EAAUlC,GAC7E,OACI3D,EAAAC,EAAAC,cAAA,MAAIqB,IAAKoC,GACL3D,EAAAC,EAAAC,cAAA,MAAIyF,MAAM,OACN3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBiC,MAAO,CACtCc,gBAAe,OAAA3F,OAASsI,EAAS1C,IAAlB,SAGvBnD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe0F,EAASP,MACtCtF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe0F,EAASC,iBAAmBC,SAASF,EAASC,eAAgB,IAA9D,IAAAvI,OAAwEsI,EAASC,gBAAmBD,EAASC,gBACzID,EAASG,QACNhG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OACIC,UAAS,oCAAA5C,OAAsCsI,EAAS3B,SAAW,EAAI,uBAAyB,MACpGlE,EAAAC,EAAAC,cAAA,OACIC,UAAS,iBAAA5C,OAAmBsI,EAAS3B,SAAW,EAAI,uBAAyB,MACjFlE,EAAAC,EAAAC,cAAA,OACIC,UAAS,iBAAA5C,OAAmBsI,EAAS3B,SAAW,EAAI,uBAAyB,MACjFlE,EAAAC,EAAAC,cAAA,OACIC,UAAS,iBAAA5C,OAAmBsI,EAAS3B,SAAW,EAAI,uBAAyB,MACjFlE,EAAAC,EAAAC,cAAA,OACIC,UAAS,iBAAA5C,OAAmBsI,EAAS3B,SAAW,EAAI,uBAAyB,OAErFlE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,UACI+F,UAAWJ,EAASK,WACpB/F,UAAU,yBACViC,MAAO,CAACC,gBAAiB,eACzBhC,QAAS,kBAAMvC,EAAKU,MAAM8D,MAAM6D,gBAAgBN,EAASvE,SAEzDtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yDAEjBH,EAAAC,EAAAC,cAAA,UACI+F,UAAWJ,EAASO,aACpBjG,UAAU,yBACViC,MAAO,CAACC,gBAAiB,eACzBhC,QAAS,kBAAMvC,EAAKU,MAAM8D,MAAM+D,kBAAkBR,EAASvE,SAE3DtB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,6DAKzBH,EAAAC,EAAAC,cAAA,WAEJF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACVH,EAAAC,EAAAC,cAAA,SACI+F,SAAWJ,EAASzC,WAAatF,EAAKU,MAAM8D,MAAM0C,UAAUO,MAAQM,EAASS,KAAO,EAAI,GAA2C,aAArCxI,EAAKU,MAAM8D,MAAM0C,UAAU1I,QAAyBwB,EAAKU,MAAM8D,MAAMjB,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAUX,EAASW,QAAOC,MAAM,SAAAF,GAAE,OAAoB,IAAhBA,EAAGrC,WACvOzD,SAAU,kBAAM3C,EAAKU,MAAM8D,MAAMoE,iBAAiBb,EAASvE,QAC3DqF,QAASd,EAASzC,UAAWxC,KAAK,WAAWT,UAAU,WAJ/D,IAKQ0F,EAASzC,UAAY,MAAQ,MAAOyC,EAASS,KAAO,gBAnE9DxE,aA+EfE,cAAO,QAAPA,CAAgBC,YAASyD,IC/ElCkB,6LAEiBC,EAAWC,EAAWC,GACrC,IAAMC,EAAMjH,KAAKkH,KAAKC,KACtBF,EAAIG,UAAYH,EAAII,yDAIpB,IAAMJ,EAAMjH,KAAKkH,KAAKC,KACtBF,EAAIG,UAAYH,EAAII,8CAIpB,OACIpH,EAAAC,EAAAC,cAAA,OAAKmH,IAAI,OAAOlH,UAAU,YACiB,IAAtCJ,KAAKvB,MAAM8D,MAAMjB,KAAK6F,KAAK/F,QACxBnB,EAAAC,EAAAC,cAAA,+BAEHH,KAAKvB,MAAM8D,MAAMjB,KAAK6F,KAAK9F,IAAI,SAAC7C,EAAKoF,GAClC,IAAI2D,EAAO,IAAIC,KAAKhJ,EAAIiJ,MAAMC,iBAE9B,OADAH,EAAOA,EAAKI,MAAM,GAAI,GAAKJ,EAAKI,OAAO,EAAGJ,EAAKnG,QAE3CnB,EAAAC,EAAAC,cAAA,OAAKqB,IAAKoC,GACL2D,EADL,KACa/I,EAAIA,eAvBtBuD,aAgCJE,cAAO,QAAPA,CAAgBC,YAAS2E,IChClCe,mLAEE,MAAyC,UAArC5H,KAAKvB,MAAM8D,MAAMjB,KAAKI,WAElBzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yEAAf,uBAKiC,qBAArCJ,KAAKvB,MAAM8D,MAAMjB,KAAKI,YAAsE,IAAjC1B,KAAKvB,MAAM8D,MAAM8C,YAExEpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yEACXH,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SACLT,UAAU,kBACVE,QAASN,KAAKvB,MAAM8D,MAAMsF,WAFlC,cASR5H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yEACuB,QAAjCJ,KAAKvB,MAAM8D,MAAMuF,aAA0D,eAAjC9H,KAAKvB,MAAM8D,MAAMuF,aAAgC9H,KAAKvB,MAAM8D,MAAM0C,UAAU8C,WAAa,GAChI9H,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAASP,QAASN,KAAKvB,MAAM8D,MAAMyF,UACxC5H,UAAU,mBADlB,oBAI8B,aAAjCJ,KAAKvB,MAAM8D,MAAMuF,aACd7H,EAAAC,EAAAC,cAAA,sBAAcH,KAAKvB,MAAM8D,MAAM0F,kBAAkBvL,SAAjD,KAE8B,wBAAjCsD,KAAKvB,MAAM8D,MAAMuF,aACd7H,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAASP,QAASN,KAAKvB,MAAM8D,MAAM2F,yBACxC9H,UAAU,mBADlB,oCAIHJ,KAAKvB,MAAM8D,MAAM0C,UAAUkD,YAA+C,eAAjCnI,KAAKvB,MAAM8D,MAAMuF,aACvD7H,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAASP,QAASN,KAAKvB,MAAM8D,MAAM6F,aACxChI,UAAU,mBADlB,aAI+B,aAAjCJ,KAAKvB,MAAM8D,MAAMuF,aAA+D,sBAAjC9H,KAAKvB,MAAM8D,MAAMuF,cAC9D7H,EAAAC,EAAAC,cAAA,OAAKC,UAAU,4DACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYqE,KAAK,SAC5BxE,EAAAC,EAAAC,cAAA,UAAQ+F,SAA2C,sBAAjClG,KAAKvB,MAAM8D,MAAMuF,YAAqCjH,KAAK,SACrET,UAAU,8CACVE,QAASN,KAAKvB,MAAM8D,MAAM8F,SAFlC,WAKApI,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAAST,UAAU,yCACxBE,QAASN,KAAKvB,MAAM8D,MAAM+F,eADlC,SAOsB,eAAjCtI,KAAKvB,MAAM8D,MAAMuF,aACd7H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAAST,UAAU,kBAAkBE,QAASN,KAAKvB,MAAM8D,MAAMgG,eAA5E,aAGAtI,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAAST,UAAU,sCACxBE,QAASN,KAAKvB,MAAM8D,MAAMiG,YADlC,eAM0B,gBAAjCxI,KAAKvB,MAAM8D,MAAMuF,aACd7H,EAAAC,EAAAC,cAAA,UAAQ+F,SAAUlG,KAAKvB,MAAM8D,MAAM0C,UAAUO,MAAQ,EAAG3E,KAAK,SACrDP,QAASN,KAAKvB,MAAM8D,MAAMkG,QAC1BrI,UAAU,mBAFlB,eAK8B,gBAAjCJ,KAAKvB,MAAM8D,MAAMuF,aAAiC9H,KAAKvB,MAAM8D,MAAM0C,UAAUO,MAAQ,GAClFvF,EAAAC,EAAAC,cAAA,UAAQU,KAAK,SAASP,QAASN,KAAKvB,MAAM8D,MAAMmG,OACxCtI,UAAU,mBADlB,sBAzEE2B,aAkFPE,cAAO,QAAPA,CAAgBC,YAAS0F,IClFlCe,mLACO,IAAA5K,EAAAiC,KACL,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,SACAH,EAAAC,EAAAC,cAAA,QACIC,UAAU,aAAaJ,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAMkF,QAAQjH,SADhF,OAC8FsD,KAAKvB,MAAMkF,OAAS,EADlH,MAGJ1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,UACAH,EAAAC,EAAAC,cAAA,QACIC,UAAU,aAAaJ,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAMkF,QAAQ1E,UAAUsG,OAE1HtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,mBACAH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,SAGRH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,YACAH,EAAAC,EAAAC,cAAA,QACIC,UAAU,aADd,IAC4BJ,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAMkF,QAAQ6B,QAErFvF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,SACAH,EAAAC,EAAAC,cAAA,QACIC,UAAU,aADd,IAC4BJ,KAAKvB,MAAM8D,MAAMqG,iBAAiB5I,KAAKvB,MAAMkF,UAE7E1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,kBAAhB,aACAH,EAAAC,EAAAC,cAAA,QACIC,UAAU,aADd,IAC4BJ,KAAKvB,MAAM8D,MAAMsG,oBAAoB7I,KAAKvB,MAAMkF,YAIxF1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCACXH,EAAAC,EAAAC,cAAA,UAAQG,QAAS,kBAAMvC,EAAKU,MAAM4F,UAAU,CAACzH,YAAa,kBAAkBiE,KAAK,SACzET,UAAU,kBACV8F,SAA+C,aAArClG,KAAKvB,MAAM8D,MAAM0C,UAAU1I,OAF7C,eAMJ0D,EAAAC,EAAAC,cAAA,OACIC,UAAU,sGACVH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SACbH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcwF,MAAM,OAAlC,OACA3F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcwF,MAAM,OAAlC,SACA3F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcwF,MAAM,OAAlC,oBACA3F,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcwF,MAAM,OAAlC,uBAGJ3F,EAAAC,EAAAC,cAAA,SAAOC,UAAU,IAChBJ,KAAKvB,MAAM8D,MAAMsD,kBAAkB7F,KAAKvB,MAAMkF,QAAQtC,IAAI,SAACyE,EAAUlC,GAClE,OACI3D,EAAAC,EAAAC,cAAA,MAAIqB,IAAKoC,GACL3D,EAAAC,EAAAC,cAAA,MAAIyF,MAAM,OACN3F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBiC,MAAO,CACtCc,gBAAe,OAAA3F,OAASsI,EAAS1C,IAAlB,SAGvBnD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe0F,EAASP,MACtCtF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAe0F,EAASC,iBAAmBC,SAASF,EAASC,eAAgB,IAA9D,IAAAvI,OAAwEsI,EAASC,gBAAmBD,EAASC,gBACzID,EAASG,QACNhG,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BACVH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0DACXH,EAAAC,EAAAC,cAAA,OACIC,UAAS,oCAAA5C,OAAsCsI,EAAS3B,SAAW,EAAI,uBAAyB,MACpGlE,EAAAC,EAAAC,cAAA,OACIC,UAAS,iBAAA5C,OAAmBsI,EAAS3B,SAAW,EAAI,uBAAyB,MACjFlE,EAAAC,EAAAC,cAAA,OACIC,UAAS,iBAAA5C,OAAmBsI,EAAS3B,SAAW,EAAI,uBAAyB,MACjFlE,EAAAC,EAAAC,cAAA,OACIC,UAAS,iBAAA5C,OAAmBsI,EAAS3B,SAAW,EAAI,uBAAyB,MACjFlE,EAAAC,EAAAC,cAAA,OACIC,UAAS,iBAAA5C,OAAmBsI,EAAS3B,SAAW,EAAI,uBAAyB,QAIzFlE,EAAAC,EAAAC,cAAA,WAEJF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eACVH,EAAAC,EAAAC,cAAA,SACI+F,UAAQ,EACRU,QAASd,EAASzC,UAAWxC,KAAK,WAAWT,UAAU,0BA1F1E2B,aAwGVE,cAAO,QAAPA,CAAgBC,YAASyG,YCxGlCG,6MACFC,aAAe,WACXhL,EAAKU,MAAM4F,UAAU,CAACzH,YAAa,YACnCmB,EAAKU,MAAM8D,MAAMyG,YAAYjL,EAAKU,MAAMkF,OAAQ5F,EAAKU,MAAM8D,MAAM0G,sBAAsBC,gBAAiBnL,EAAKU,MAAM8D,MAAM0G,sBAAsBE,gBAAiBpL,EAAKU,MAAM8D,MAAM0G,sBAAsBG,WAAYrL,EAAKU,MAAM8D,MAAM0G,sBAAsBI,YAC1PtL,EAAKU,MAAM8D,MAAM+G,wGAGZ,IAAAvJ,EAAAC,KACCuJ,EAAWvJ,KAAKvB,MAAM8D,MAAM0C,UAAUO,MACtCgE,EAAcxJ,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAMkF,QAAQ6B,MACnEH,EAAcrF,KAAKvB,MAAM8D,MAAM8C,YACrC,OACIpF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,wBAAgBH,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAMkF,QAAQjH,WAEzEuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,kBACoBmJ,GAEpBtJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,MAEJH,EAAAC,EAAAC,cAAA,SAAOO,SAAU,SAAAC,GAAc,IAAZC,EAAYD,EAAZC,OACXA,EAAOH,MAAQ8I,IACf3I,EAAOH,MAAQ8I,GACnBxJ,EAAKtB,MAAM8D,MAAMkH,yBAAyB,aAAc7I,EAAOH,QAE5DA,MAA6D,IAAtDT,KAAKvB,MAAM8D,MAAM0G,sBAAsBG,WAAmB,GAAKpJ,KAAKvB,MAAM8D,MAAM0G,sBAAsBG,WAC7GvI,KAAK,SACL6I,IAAK,EACLtJ,UAAU,eACVU,YAAY,YAEvBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACVJ,KAAKvB,MAAM8D,MAAMsD,kBAAkBR,GAAa3B,OAAO,SAAAoC,GAAQ,OAAKA,EAAS6D,iBAAgBtI,IAAI,SAACyE,EAAUlC,GACzG,OACI3D,EAAAC,EAAAC,cAAA,OAAKqB,IAAKoC,EACLxD,UAAU,wEACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBiC,MAAO,CACzCc,gBAAe,OAAA3F,OAASsI,EAAS1C,IAAlB,QAEnBnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB0F,EAASP,MAC3CtF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIO,SAAU,WACN,IAAMa,EAAQxB,EAAKtB,MAAM8D,MAAM0G,sBAAsBC,gBAAgBU,UAAU,SAAApD,GAAE,OAAIA,IAAOV,EAASvE,SACtF,IAAXA,EACAxB,EAAKtB,MAAM8D,MAAMkH,yBAAyB,kBAA1C,GAAAjM,OAAAyF,OAAA4G,EAAA,EAAA5G,CAAiElD,EAAKtB,MAAM8D,MAAM0G,sBAAsBC,iBAAxG,CAAyHpD,EAASvE,SAElIxB,EAAKtB,MAAM8D,MAAMkH,yBAAyB,kBAA1C,GAAAjM,OAAAyF,OAAA4G,EAAA,EAAA5G,CAAiElD,EAAKtB,MAAM8D,MAAM0G,sBAAsBC,gBAAgBvB,MAAM,EAAGpG,IAAjI0B,OAAA4G,EAAA,EAAA5G,CAA4IlD,EAAKtB,MAAM8D,MAAM0G,sBAAsBC,gBAAgBvB,MAAMpG,EAAQ,OAGzNV,KAAK,WAAWT,UAAU,iBAOtDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,4BAAoBH,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAMkF,QAAQjH,WAE7EuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAf,gBACkBoJ,GAElBvJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,MAEJH,EAAAC,EAAAC,cAAA,SAAOO,SAAU,SAAAK,GAAc,IAAZH,EAAYG,EAAZH,OACXA,EAAOH,MAAQ+I,IACf5I,EAAOH,MAAQ+I,GACnBzJ,EAAKtB,MAAM8D,MAAMkH,yBAAyB,aAAc7I,EAAOH,QAE5DA,MAA6D,IAAtDT,KAAKvB,MAAM8D,MAAM0G,sBAAsBI,WAAmB,GAAKrJ,KAAKvB,MAAM8D,MAAM0G,sBAAsBI,WAC7GxI,KAAK,SACL6I,IAAK,EACLtJ,UAAU,eACVU,YAAY,YAEvBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACVJ,KAAKvB,MAAM8D,MAAMsD,kBAAkB7F,KAAKvB,MAAMkF,QAAQtC,IAAI,SAACyE,EAAUlC,GAClE,OACI3D,EAAAC,EAAAC,cAAA,OAAKqB,IAAKoC,EACLxD,UAAU,wEACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBiC,MAAO,CACzCc,gBAAe,OAAA3F,OAASsI,EAAS1C,IAAlB,QAEnBnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB0F,EAASP,MAC3CtF,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACIO,SAAU,WACN,IAAMa,EAAQxB,EAAKtB,MAAM8D,MAAM0G,sBAAsBE,gBAAgBS,UAAU,SAAApD,GAAE,OAAIA,IAAOV,EAASvE,SACtF,IAAXA,EACAxB,EAAKtB,MAAM8D,MAAMkH,yBAAyB,kBAA1C,GAAAjM,OAAAyF,OAAA4G,EAAA,EAAA5G,CAAiElD,EAAKtB,MAAM8D,MAAM0G,sBAAsBE,iBAAxG,CAAyHrD,EAASvE,SAElIxB,EAAKtB,MAAM8D,MAAMkH,yBAAyB,kBAA1C,GAAAjM,OAAAyF,OAAA4G,EAAA,EAAA5G,CAAiElD,EAAKtB,MAAM8D,MAAM0G,sBAAsBE,gBAAgBxB,MAAM,EAAGpG,IAAjI0B,OAAA4G,EAAA,EAAA5G,CAA4IlD,EAAKtB,MAAM8D,MAAM0G,sBAAsBE,gBAAgBxB,MAAMpG,EAAQ,OAGzNV,KAAK,WAAWT,UAAU,kBAQ1DH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UACI+F,UAAiE,IAAtDlG,KAAKvB,MAAM8D,MAAM0G,sBAAsBI,YAA0E,MAAtDrJ,KAAKvB,MAAM8D,MAAM0G,sBAAsBI,cAA8E,IAAtDrJ,KAAKvB,MAAM8D,MAAM0G,sBAAsBG,YAA0E,MAAtDpJ,KAAKvB,MAAM8D,MAAM0G,sBAAsBG,aAAyF,IAAlEpJ,KAAKvB,MAAM8D,MAAM0G,sBAAsBE,gBAAgB/H,QAAkF,IAAlEpB,KAAKvB,MAAM8D,MAAM0G,sBAAsBC,gBAAgB9H,OAC5Xd,QAASN,KAAK+I,aAAclI,KAAK,SACjCT,UAAU,mBAHd,mCAhHG2B,aA2HRE,cAAO,QAAPA,CAAgBC,YAAS4G,IC3HlCgB,6MACFvN,MAAQ,CACJwN,cAAe,sFAIf,GAAI/J,KAAKvB,MAAM8D,MAAMjB,KAAKG,aAAezB,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAO5I,OAAS,EAAG,CAC9E,IAAMiE,EAAcrF,KAAKvB,MAAM8D,MAAM8C,YAC/B4E,EAAajK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOJ,UAAU,SAAApD,GACtD,OAAQA,EAAG0D,oBAAsB7E,GAAemB,EAAG2D,iBAAmB9E,IAA6B,aAAbmB,EAAGjK,QAE7FyD,KAAKjB,SAAS,CAACgL,cAAeE,gDAInBnD,EAAWC,EAAWC,GACrC,IAAiC,IAA7BD,EAAUgD,cAAsB,CAChC,IAAM1E,EAAcrF,KAAKvB,MAAM8D,MAAM8C,YAC/B4E,EAAajK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOJ,UAAU,SAAApD,GACtD,OAAQA,EAAG0D,oBAAsB7E,GAAemB,EAAG2D,iBAAmB9E,IAA6B,aAAbmB,EAAGjK,SAEzE,IAAhB0N,GACAjK,KAAKjB,SAAS,CAACgL,cAAeE,sCAMjC,IAAAlK,EAAAC,KACL,GAAIA,KAAKvB,MAAM8D,MAAMjB,KAAKG,aAAezB,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAO5I,OAAS,EAAG,CAC9E,IAAMiE,EAAcrF,KAAKvB,MAAM8D,MAAM8C,YAC/B4E,EAAajK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOJ,UAAU,SAAApD,GACtD,OAAQA,EAAG0D,oBAAsB7E,GAAemB,EAAG2D,iBAAmB9E,IAA6B,aAAbmB,EAAGjK,QAE7F,IAAoB,IAAhB0N,IAAmD,IAA9BjK,KAAKzD,MAAMwN,cAChC,OAAO9J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,qBAEX,IAAMgK,EAAmBpK,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeG,mBAC5GG,EAAgBrK,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYzB,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeI,gBACzGG,EAAmBtK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeG,oBAAsB7E,EAChGkF,EAAkBD,EAAmBtK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeS,iBAAmBxK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeU,iBACtKC,EAAiBJ,EAAmBtK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeU,iBAAmBzK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeS,iBACrKG,EAAmC3K,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeU,iBAAiB/D,MAAM,SAAAnF,GACnH,IAAMuE,EAAW/F,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAMtB,GACvCoI,EAAiB5J,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU1G,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAMtB,GAAOkF,OAASD,EAAGP,SAAWO,EAAGrC,SAAW,IAAG/C,OAAS,EACjK,OAAO0E,EAASnC,SAAW5D,EAAKtB,MAAM8D,MAAMjB,KAAK0I,OAAOjK,EAAKxD,MAAMwN,eAAeG,oBAAsBP,IAEtGiB,EAAgC5K,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeS,iBAAiB9D,MAAM,SAAAnF,GAChH,IAAMuE,EAAW/F,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAMtB,GACvCoI,EAAiB5J,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU1G,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAMtB,GAAOkF,OAASD,EAAGP,SAAWO,EAAGrC,SAAW,IAAG/C,OAAS,EACjK,OAAO0E,EAASnC,SAAW5D,EAAKtB,MAAM8D,MAAMjB,KAAK0I,OAAOjK,EAAKxD,MAAMwN,eAAeI,iBAAmBR,IAEzG,OACI1J,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0CACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,MAAImH,IAAI,SAASlH,UAAU,6BACtBJ,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAO3I,IAAI,SAACwJ,EAAOjH,GAAR,OAAAX,OAAAC,EAAA,EAAAD,CAAA,GAC3B4H,EAD2B,CAE9BtJ,MAAOqC,MACPF,OAAO,SAAAmH,GAAK,MAAoB,aAAhBA,EAAMtO,QAAyBsO,EAAMX,oBAAsB7E,GAAewF,EAAMV,iBAAmB9E,KAAchE,IAAI,SAACwJ,EAAOjH,GAC7I,OACI3D,EAAAC,EAAAC,cAAA,MAAIqB,IAAKoC,EACLtD,QAAS,kBAAMP,EAAKhB,SAAS,CAACgL,cAAec,EAAMtJ,SACnDnB,UAAS,0CAAA5C,OAA4CqN,EAAMtJ,QAAUxB,EAAKxD,MAAMwN,cAAgB,SAAW,KAF/G,MAGQhK,EAAKtB,MAAM8D,MAAMjB,KAAKG,YAAYoJ,EAAMX,mBAAmBxN,cAMnFuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gEACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,SAAoB,eAAA3C,OAAhB8M,EAAkCD,EAAc3N,SAA4B0N,EAAiB1N,YAErGuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,MAEJH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SACLc,UAAQ,EACRlB,MAAO6J,EAAmBtK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAee,YAAc9K,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAegB,YACtJ3K,UAAU,eACVU,YAAY,iBAEvBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACVsK,EAAerJ,IAAI,SAACuC,GACjB,IAAMkC,EAAW/F,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAMe,GAC7C,OACI3D,EAAAC,EAAAC,cAAA,OAAKqB,IAAKoC,EACLxD,UAAU,wEACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBiC,MAAO,CACzCc,gBAAe,OAAA3F,OAASsI,EAAS1C,IAAlB,QAEnBnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB0F,EAASP,WAM/DtF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAAA,SAAoB,gBAAA3C,OAAhB8M,EAAmCD,EAAc3N,SAA6B0N,EAAiB1N,YAEvGuD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,MAEJH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SACLc,UAAQ,EACRlB,MAAQ6J,EAAwFtK,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAegB,YAA5H/K,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAee,YAClF1K,UAAU,eACVU,YAAY,iBAEvBb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACVmK,EAAgBlJ,IAAI,SAACuC,GAClB,IAAMkC,EAAW/F,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAMe,GAC7C,OACI3D,EAAAC,EAAAC,cAAA,OAAKqB,IAAKoC,EACLxD,UAAU,wEACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAAuBiC,MAAO,CACzCc,gBAAe,OAAA3F,OAASsI,EAAS1C,IAAlB,QAEnBnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmB0F,EAASP,YAOnEtF,EAAAC,EAAAC,cAAA,WACKkF,IAAgBrF,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeG,mBAEpEjK,EAAAC,EAAAC,cAAA,UACI+F,SAAmE,aAAzDlG,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAY4D,GAAa9I,QAAyBqO,IAAkCD,GAAoCN,EAAc7E,MAAQxF,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAegB,aAAeX,EAAiB5E,MAAQxF,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAee,YACpUxK,QAAS,WACLP,EAAKtB,MAAM8D,MAAMyI,YAAYjL,EAAKxD,MAAMwN,eACxChK,EAAKhB,SAAS,CAACgL,cAAeE,IAC9BlK,EAAKmH,KAAK8C,OAAO5C,UAAY,GAC9BvG,KAAK,SACRT,UAAU,kBACViC,MAAO,CAAC4I,YAAa,KARzB,YAYJhL,EAAAC,EAAAC,cAAA,UACI+F,SAAmE,aAAzDlG,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAY4D,GAAa9I,MACzD+D,QAAS,WACL+E,IAAgBtF,EAAKtB,MAAM8D,MAAMjB,KAAK0I,OAAOjK,EAAKxD,MAAMwN,eAAeG,kBAAoBnK,EAAKtB,MAAM8D,MAAM2I,YAAYnL,EAAKxD,MAAMwN,eAAiBhK,EAAKtB,MAAM8D,MAAM4I,YAAYpL,EAAKxD,MAAMwN,eAC5LhK,EAAKhB,SAAS,CAACgL,cAAeE,IAC9BlK,EAAKmH,KAAK8C,OAAO5C,UAAY,GAEjCvG,KAAK,SACLT,UAAU,mBARd,GAAA5C,OAQoC6H,IAAgBrF,KAAKvB,MAAM8D,MAAMjB,KAAK0I,OAAOhK,KAAKzD,MAAMwN,eAAeG,kBAAoB,eAAiB,qBAQpK,OAAQjK,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAf,4BApKI2B,aAyKTE,cAAO,QAAPA,CAAgBC,YAAS4H,ICzKlCsB,6MACF7O,MAAQ,2EAEC,IAAAwD,EAAAC,KACCqL,EAAOrL,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAM7C,KAAKvB,MAAM8D,MAAM+I,gBACpDC,EAAgBvL,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAYJ,IAAI,SAACsC,EAAQC,GAAT,OAAAX,OAAAC,EAAA,EAAAD,CAAA,GACrDU,EADqD,CAExDpC,MAAOqC,MACPF,OAAO,SAAAC,GAAM,MAAqB,QAAjBA,EAAOpH,QAAiBmH,OAAO,SAAAC,GAAM,OAAIA,EAAO1E,WAAac,EAAKtB,MAAM8D,MAAM+I,iBAC/FE,EAAe,GAMnB,MALkB,OAAdH,EAAKxK,MAA+B,YAAdwK,EAAKxK,KAC3B2K,EAAexL,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAMa,OAAO,SAAC2H,EAAMzH,GAAP,OAAayH,EAAKxK,OAASd,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAM9C,EAAKtB,MAAM8D,MAAM+I,gBAAgBzK,MAAQ+C,IAAM7D,EAAKtB,MAAM8D,MAAM+I,iBACpJ,aAAdD,EAAKxK,OACZ2K,EAAexL,KAAKvB,MAAM8D,MAAMjB,KAAKuB,MAAMa,OAAO,SAAC2H,EAAMzH,GAAP,OAAayH,EAAK5E,QAAU1G,EAAKtB,MAAM8D,MAAMjB,KAAKuB,MAAM9C,EAAKtB,MAAM8D,MAAM+I,gBAAgB7E,OAAS7C,IAAM7D,EAAKtB,MAAM8D,MAAM+I,kBAG3KrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oFACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gEACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAsBiC,MAAO,CACxCc,gBAAe,OAAA3F,OAAS6N,EAAKjI,IAAd,QAEnBnD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACViL,EAAK9F,QAGE,aAAd8F,EAAKxK,MAAqC,OAAdwK,EAAKxK,MAA+B,YAAdwK,EAAKxK,OACrDZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,6DACVoL,EAAanK,IAAI,SAACoK,EAAS7H,GACxB,OACI3D,EAAAC,EAAAC,cAAA,OAAKqB,IAAKoC,EACLxD,UAAU,gEACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAA0BiC,MAAO,CAC5Cc,gBAAe,OAAA3F,OAASiO,EAAQrI,IAAjB,cAQ3B,WAAdiI,EAAKxK,MAAmC,UAAdwK,EAAKxK,OAC7BZ,EAAAC,EAAAC,cAAA,6CAIY,OAAdkL,EAAKxK,MACHZ,EAAAC,EAAAC,cAAA,6CAIY,YAAdkL,EAAKxK,MACHZ,EAAAC,EAAAC,cAAA,wBAIY,eAAdkL,EAAKxK,MACHZ,EAAAC,EAAAC,cAAA,kDAIY,aAAdkL,EAAKxK,MAAqC,YAAdwK,EAAKxK,MAAoC,OAAdwK,EAAKxK,OAC1DZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8DACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,eAAOkL,EAAK9E,OAEf8E,EAAKnH,OACFjE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,eAAOH,KAAKvB,MAAM8D,MAAMmJ,iBAAiB1L,KAAKvB,MAAM8D,MAAM+I,gBAAgB,KAGlFrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,6BACAF,EAAAC,EAAAC,cAAA,eAAOH,KAAKvB,MAAM8D,MAAMmJ,iBAAiB1L,KAAKvB,MAAM8D,MAAM+I,gBAAgB,MAGlFrL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iEACI,aAAdiL,EAAKxK,MACFZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,eAAOkL,EAAKpF,UAEhBhG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,eAAOkL,EAAKM,KAAK,KAErB1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,eAAOkL,EAAKM,KAAK,KAErB1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,eAAOkL,EAAKM,KAAK,KAErB1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,eAAOkL,EAAKM,KAAK,KAErB1L,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,eAAOkL,EAAKM,KAAK,MAId,OAAdN,EAAKxK,MACFZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,mBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,mBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,sCACAF,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,uCACAF,EAAAC,EAAAC,cAAA,qBAIG,YAAdkL,EAAKxK,MACFZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,2BAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kCACXH,EAAAC,EAAAC,cAAA,qCACAF,EAAAC,EAAAC,cAAA,+BAOxBF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACVmL,EAAcnK,OAAS,EACpBnB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,oCACAF,EAAAC,EAAAC,cAAA,UACKoL,EAAclK,IAAI,SAACsC,EAAQC,GACxB,OAAO3D,EAAAC,EAAAC,cAAA,MAAIqB,IAAKoC,GAAID,EAAOjH,SAApB,OAAkCiH,EAAOpC,MAAQ,EAAjD,SAKnBtB,EAAAC,EAAAC,cAAA,kCAEHkL,EAAKnH,MACFjE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gCAAqBH,KAAKvB,MAAM8D,MAAMjB,KAAKG,YAAY4J,EAAK1H,QAAQjH,WAGxE,cAjKQqF,aAyKjBE,cAAO,QAAPA,CAAgBC,YAASkJ,IChKlCQ,6MACFrP,MAAQ,CACJgI,kBAAkB,EAClB3H,YAAa,UACbiI,eAAgB,KAGpBR,UAAY,SAAC9H,GACTwB,EAAKgB,SAASxC,MAElB+H,eAAiB,SAAC/H,GACdwB,EAAKgB,SAASxC,4EAId,OACI0D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACVJ,KAAKvB,MAAM8D,MAAMjB,MAA6C,gBAArCtB,KAAKvB,MAAM8D,MAAMjB,KAAKI,YAChDzB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAC0B,OAApCJ,KAAKvB,MAAM8D,MAAM+I,gBACdrL,EAAAC,EAAAC,cAAC0L,EAAD,MAEiC,OAApC7L,KAAKvB,MAAM8D,MAAM+I,gBACdrL,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4L,SAAA,KACI7L,EAAAC,EAAAC,cAAC4L,EAAD,CACIxH,iBAAkBvE,KAAKzD,MAAMgI,iBAC7BD,eAAgBtE,KAAKsE,eACrBD,UAAWrE,KAAKqE,UAChBzH,YAAaoD,KAAKzD,MAAMK,cAEA,YAA3BoD,KAAKzD,MAAMK,aACRqD,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4L,SAAA,KACI7L,EAAAC,EAAAC,cAAC6L,EAAD,MACA/L,EAAAC,EAAAC,cAAC8L,EAAD,MACAhM,EAAAC,EAAAC,cAAC+L,EAAD,OAGoB,kBAA3BlM,KAAKzD,MAAMK,aACRqD,EAAAC,EAAAC,cAACgM,EAAD,MAEwB,gBAA3BnM,KAAKzD,MAAMK,aACRqD,EAAAC,EAAAC,cAACiM,EAAD,CAAY/H,UAAWrE,KAAKqE,UAAWV,OAAQ3D,KAAKzD,MAAMsI,iBAElC,iBAA3B7E,KAAKzD,MAAMK,aACRqD,EAAAC,EAAAC,cAACkM,EAAD,CAAUhI,UAAWrE,KAAKqE,UAAWV,OAAQ3D,KAAKzD,MAAMsI,iBAEhC,WAA3B7E,KAAKzD,MAAMK,aACRqD,EAAAC,EAAAC,cAACmM,EAAD,CAAWjI,UAAWrE,KAAKqE,UAAWV,OAAQ3D,KAAKzD,MAAMsI,2BA/ClE9C,aA2DRE,cAAO,QAAPA,CAAgBC,YAAS0J,IChElCW,8LAEE,IAAIC,EAAWpO,aAAaqO,QAAQ,iBAC/BD,GAILA,EAAW3O,KAAK6O,MAAMF,GACtBxM,KAAKvB,MAAM8D,MAAMoK,gBAAgBH,GACjCxM,KAAKvB,MAAM8D,MAAMqK,iBALb5M,KAAKvB,MAAMC,QAAQC,KAAK,2CAS5B,OACIqB,KAAKvB,MAAM8D,MAAMsK,OAAS5M,EAAAC,EAAAC,cAAA,OAClBkC,MAAO,CAACyK,QAAO,aAAAtP,OAAoD,aAArCwC,KAAKvB,MAAM8D,MAAM0C,UAAU1I,MAAuB,UAAY,YAC5F6D,UAAU,+BACVH,EAAAC,EAAAC,cAAC4M,EAAD,MACA9M,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAM/N,SAAU,KAChBgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMhK,QAAQ,EAAM/D,SAAU,KAC9BgB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAC6M,EAAD,CAAMhK,QAAQ,EAAM/D,SAAU,KAC9BgB,EAAAC,EAAAC,cAAA,YACAF,EAAAC,EAAAC,cAAC6M,EAAD,CAAMhK,QAAQ,EAAM/D,SAAU,KAC9BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMhK,QAAQ,EAAM/D,SAAU,KAC9BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMhK,QAAQ,EAAM/D,SAAU,KAC9BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMhK,QAAQ,EAAM/D,SAAU,KAC9BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMhK,QAAQ,EAAM/D,SAAU,KAC9BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMhK,QAAQ,EAAM/D,SAAU,KAC9BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMhK,QAAQ,EAAM/D,SAAU,KAC9BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAM/N,SAAU,MAEpBgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yDACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAMpK,OAAO,EAAM3D,SAAU,KAC7BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMlK,MAAM,EAAM7D,SAAU,MAEhCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAMpK,OAAO,EAAM3D,SAAU,KAC7BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMlK,MAAM,EAAM7D,SAAU,MAEhCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAMpK,OAAO,EAAM3D,SAAU,KAC7BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMlK,MAAM,EAAM7D,SAAU,MAEhCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAMpK,OAAO,EAAM3D,SAAU,KAC7BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMlK,MAAM,EAAM7D,SAAU,MAEhCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAMpK,OAAO,EAAM3D,SAAU,KAC7BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMlK,MAAM,EAAM7D,SAAU,MAEhCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAMpK,OAAO,EAAM3D,SAAU,KAC7BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMlK,MAAM,EAAM7D,SAAU,MAEhCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAMpK,OAAO,EAAM3D,SAAU,KAC7BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMlK,MAAM,EAAM7D,SAAU,MAEhCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAMpK,OAAO,EAAM3D,SAAU,KAC7BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMlK,MAAM,EAAM7D,SAAU,MAEhCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2CACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAMpK,OAAO,EAAM3D,SAAU,KAC7BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMlK,MAAM,EAAM7D,SAAU,MAEhCgB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAC6M,EAAD,CAAM/N,SAAU,KAChBgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMjK,KAAK,EAAM9D,SAAU,IAC3BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMjK,KAAK,EAAM9D,SAAU,IAC3BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMjK,KAAK,EAAM9D,SAAU,IAC3BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMjK,KAAK,EAAM9D,SAAU,IAC3BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMjK,KAAK,EAAM9D,SAAU,IAC3BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMjK,KAAK,EAAM9D,SAAU,IAC3BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMjK,KAAK,EAAM9D,SAAU,IAC3BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMjK,KAAK,EAAM9D,SAAU,IAC3BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAMjK,KAAK,EAAM9D,SAAU,IAC3BgB,EAAAC,EAAAC,cAAC6M,EAAD,CAAM/N,SAAU,MAIxBgB,EAAAC,EAAAC,cAAA,OAAKkC,MAAO,CAAC4K,OAAQ,OAAQC,UAAW,SAAUC,SAAU,KAAKlN,EAAAC,EAAAC,cAAA,KAC7DC,UAAU,oCArFV2B,aA0FLC,cAAWC,YAAO,QAAPA,CAAgBC,YAASqK,KC1F7Ca,6MACF7Q,MAAQ,CACJK,YAAamB,EAAKU,MAAMC,QAAQ2O,SAASC,kFAIzC,OACIrN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAACoN,EAAD,cARMxL,aAcPC,cAAWC,YAAO,QAAPA,CAAgBC,YAASkL,gCChB7CI,EAAe,WACjB,OACIvN,EAAAC,EAAAC,cAACsN,EAAA,EAAD,CAAUC,GAAG,YAgBNC,mLAVP,OACI1N,EAAAC,EAAAC,cAACyN,EAAA,EAAD,KACI3N,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,UAAWZ,IAC1CnN,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,SAASC,UAAW1R,IACtC2D,EAAAC,EAAAC,cAAC0N,EAAA,EAAD,CAAOE,KAAK,IAAIC,UAAWR,YANzBzL,mDCPlBkM,aAAU,CAACC,eAAgB,aAC3B,IAAM/R,GAAMC,8CAAYC,cAAgBD,8CAAYC,cAAgB,qCAE9D8R,cA6mBF,SAAAA,IAAc,IAAApQ,EAAAiC,KAAAiD,OAAAmL,EAAA,EAAAnL,CAAAjD,KAAAmO,GAAAnO,KA5mBdqO,OAASC,KAAE,GAAA9Q,OAAIrB,GAAJ,KAAY,CAACoS,UAAU,IA4mBpBvO,KA3mBdsL,eAAiB,KA2mBHtL,KA1mBdsB,KAAO,GA0mBOtB,KAzmBdpD,YAAc,UAymBAoD,KAxmBd4E,aAAe,GAwmBD5E,KAvmBd4M,cAAgB,WACZ7O,EAAKsQ,OAAOG,KAAK,YAAazQ,EAAK6G,eAsmBzB5E,KApmBd2M,gBAAkB,SAACH,GACfzO,EAAK6G,aAAe4H,GAmmBVxM,KAjmBdyO,sBAAwB,SAACpJ,GACrBtH,EAAKsQ,OAAOG,KAAK,2BAA4B,CACzClQ,QAASP,EAAK6G,aAAatG,QAC3ByJ,WAAYhK,EAAKuD,KAAKG,YAAY4D,GAAa0C,WAC/C2G,aAAcrJ,KA6lBRrF,KA1lBdgI,UAAY,WACR,GAAKjK,EAAK4Q,gBAKH,CACH,IAAMtJ,EAActH,EAAKsH,YACzBtH,EAAK6Q,eAAe,WACpB7Q,EAAK8Q,WACD9Q,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,IAC/CnH,EAAK+Q,cAAa,GAClB/Q,EAAKgR,sBACLhR,EAAKuD,KAAKG,YAAY4D,GAAa0C,WAAa,GAEhDhK,EAAKuD,KAAKG,YAAY4D,GAAa0C,YAAc,EAErDhK,EAAK0Q,sBAAsBpJ,GAC3BtH,EAAK6Q,eAAe,eACpB7Q,EAAKiR,uBAjBLjR,EAAK6Q,eAAe,WACpB7Q,EAAK8Q,WACL9Q,EAAKkR,aACLlR,EAAKmR,aAqlBClP,KApkBdmP,kBAAoB,SAAC9J,GACjBtH,EAAKsQ,OAAOG,KAAK,sBAAuB,CACpClQ,QAASP,EAAK6G,aAAatG,QAC3B8Q,aAAcrR,EAAKuD,KAAKG,YAAY4D,GAAaG,MACjDkJ,aAAcrJ,KAgkBRrF,KA7jBdoI,aAAe,WACX,IAAM/C,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,OAAS,GAC5CzH,EAAKoR,kBAAkB9J,GACvBtH,EAAK+Q,cAAa,GAClB/Q,EAAKgR,sBACLhR,EAAKuD,KAAKG,YAAY4D,GAAa0C,WAAa,EAChDhK,EAAK0Q,sBAAsBpJ,GACO,IAA9BtH,EAAKkH,UAAU8C,WACfhK,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eAExB7Q,EAAKiR,mBAgjBKhP,KA9iBdqP,cAAgB,SAACpQ,GACb,IAAMoG,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKyC,sBAAwB,CAACJ,QAAS,EAAGK,MAAO,IAEtD,IADA,IAAIJ,EAAI7F,EAAKuD,KAAKG,YAAY4D,GAAapG,SACpClB,EAAKuR,YAAY1L,EAAG,EAAG,MAAQ7F,EAAKuR,YAAYrQ,EAAU,EAAG,KAChElB,EAAKuD,KAAKyC,sBAAsBC,MAAMrF,KAAKZ,EAAKuR,YAAY1L,EAAG,EAAG,KAClEA,GAAK,EAET7F,EAAKsQ,OAAOG,KAAK,wBAAyB,CACtClQ,QAASP,EAAK6G,aAAatG,QAC3ByF,sBAAuBhG,EAAKuD,KAAKyC,wBAErC,IAAMwL,EAAeC,YAAY,WAC7BC,aAAY,WACR1R,EAAKuD,KAAKyC,sBAAsBC,MAAM0L,QACe,IAAjD3R,EAAKuD,KAAKyC,sBAAsBC,MAAM5C,QACtCuO,cAAcJ,MAGvB,KACHxR,EAAKuD,KAAKG,YAAY4D,GAAapG,SAAWA,GA0hBpCe,KAxhBd4P,iBAAmB,SAAC3Q,GAChB,IAAMoG,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKyC,sBAAwB,CAACJ,QAAS,EAAGK,MAAO,IAEtD,IADA,IAAIJ,EAAI7F,EAAKuD,KAAKG,YAAY4D,GAAapG,SACpClB,EAAKuR,YAAY1L,EAAG,EAAG,MAAQ7F,EAAKuR,YAAYrQ,EAAU,EAAG,KAChElB,EAAKuD,KAAKyC,sBAAsBC,MAAMrF,KAAKZ,EAAKuR,YAAY1L,EAAG,EAAG,KAClEA,GAAK,EAET7F,EAAKsQ,OAAOG,KAAK,wBAAyB,CACtClQ,QAASP,EAAK6G,aAAatG,QAC3ByF,sBAAuBhG,EAAKuD,KAAKyC,wBAErC,IAAMwL,EAAeC,YAAY,WAC7BC,aAAY,WACR1R,EAAKuD,KAAKyC,sBAAsBC,MAAM0L,QACe,IAAjD3R,EAAKuD,KAAKyC,sBAAsBC,MAAM5C,QACtCuO,cAAcJ,MAGvB,KACHxR,EAAKuD,KAAKG,YAAY4D,GAAapG,SAAWA,EAC9ClB,EAAKsQ,OAAOG,KAAK,OAAQ,CACrBlQ,QAASP,EAAK6G,aAAatG,QAC3BuR,aAAc5Q,EACdyP,aAAcrJ,KAggBRrF,KA7fd8P,YAAc,SAACC,GACXhS,EAAK6Q,eAAe,WACpB7Q,EAAK8Q,WACL9Q,EAAKsR,cAAcU,GACnBhS,EAAKmR,aAyfKlP,KAvfdgQ,eAAiB,SAACC,GACd,IAAMpF,EAAQ9M,EAAKuD,KAAK0I,OAAOiG,GAC/BlS,EAAKuD,KAAKG,YAAYoJ,EAAMX,mBAAmB1E,OAASQ,SAAS6E,EAAMC,aACvE/M,EAAKuD,KAAKG,YAAYoJ,EAAMX,mBAAmB1E,OAASQ,SAAS6E,EAAME,aACvEhN,EAAKuD,KAAKG,YAAYoJ,EAAMV,gBAAgB3E,OAASQ,SAAS6E,EAAMC,aACpE/M,EAAKuD,KAAKG,YAAYoJ,EAAMV,gBAAgB3E,OAASQ,SAAS6E,EAAME,aACpEF,EAAMJ,iBAAiByF,QAAQ,SAAAC,GAC3BpS,EAAKuD,KAAKuB,MAAMsN,GAAWxM,OAASkH,EAAMV,iBAE9CU,EAAML,iBAAiB0F,QAAQ,SAAAC,GAC3BpS,EAAKuD,KAAKuB,MAAMsN,GAAWxM,OAASkH,EAAMX,qBA6epClK,KA1edgL,YAAc,SAACiF,GACX,IAAMpF,EAAQ9M,EAAKuD,KAAK0I,OAAOiG,GAC/BlS,EAAKiS,eAAeC,GACpBlS,EAAKuD,KAAK0I,OAAOiG,GAAY1T,MAAQ,WACrCwB,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKuD,KAAKG,YAAYoJ,EAAMV,gBAAgBzN,SAA7D,mCAAAc,OAAiGO,EAAKuD,KAAKG,YAAYoJ,EAAMX,mBAAmBxN,WAChJqB,EAAKsQ,OAAOG,KAAK,eAAgB,CAC7BlQ,QAASP,EAAK6G,aAAatG,QAC3B+R,YAAaJ,EACbpF,WAkeM7K,KA9ddkL,YAAc,SAAC+E,GACX,IAAMpF,EAAQ9M,EAAKuD,KAAK0I,OAAOiG,GAC/BlS,EAAKuD,KAAK0I,OAAOiG,GAAY1T,MAAQ,WACrCwB,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKuD,KAAKG,YAAYoJ,EAAMV,gBAAgBzN,SAA7D,kCAAAc,OAAgGO,EAAKuD,KAAKG,YAAYoJ,EAAMX,mBAAmBxN,WAC/IqB,EAAKsQ,OAAOG,KAAK,eAAgB,CAC7BlQ,QAASP,EAAK6G,aAAatG,QAC3B+R,YAAaJ,KAwdPjQ,KArddmL,YAAc,SAAC8E,GACX,IAAMpF,EAAQ9M,EAAKuD,KAAK0I,OAAOiG,GAC/BlS,EAAKuD,KAAK0I,OAAOiG,GAAY1T,MAAQ,WACrCwB,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKuD,KAAKG,YAAYoJ,EAAMX,mBAAmBxN,SAAhE,kCAAAc,OAAmGO,EAAKuD,KAAKG,YAAYoJ,EAAMV,gBAAgBzN,WAC/IqB,EAAKsQ,OAAOG,KAAK,eAAgB,CAC7BlQ,QAASP,EAAK6G,aAAatG,QAC3B+R,YAAaJ,KA+cPjQ,KA5cd0I,OAAS,WACL,IAAMrD,EAActH,EAAKsH,YACzBtH,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKuD,KAAKG,YAAY4D,GAAa3I,SAApD,qBACA,IAAI4T,EAAmBvS,EAAKwS,qBAAqBlL,GAEjD,GADAtH,EAAKuD,KAAKG,YAAY4D,GAAa9I,MAAQ,MACmC,IAA1EwB,EAAKuD,KAAKG,YAAYiC,OAAO,SAAAC,GAAM,MAAqB,QAAjBA,EAAOpH,QAAiB6E,OAAc,CAC7E,IAAMoP,EAAgBzS,EAAKuD,KAAKG,YAAYgP,KAAK,SAAA9M,GAAM,MAAqB,QAAjBA,EAAOpH,QAClEwB,EAAKsQ,OAAOG,KAAK,WAAY,CACzBlQ,QAASP,EAAK6G,aAAatG,QAC3BoS,eAAgBF,IAEpBzS,EAAKuD,KAAKI,WAAa,YACpB,CACH,IAAMiP,EAAW5S,EAAKuD,KAAKuB,MAAMxB,IAAI,SAAAgK,GACjC,OAAIA,EAAK1H,SAAW0B,EACTpC,OAAAC,EAAA,EAAAD,CAAA,GACAoI,EADP,CAEInH,OAAO,EACPP,OAAQ,KACRN,WAAW,EACXc,SAAU,IAGPkH,IAGftN,EAAKuD,KAAKuB,MAAQ8N,EAClB5S,EAAKsQ,OAAOG,KAAK,kBAAmB,CAChClQ,QAASP,EAAK6G,aAAatG,QAC3BoQ,aAAcrJ,EACduL,YAAaN,EACbO,UAAWF,MA6aT3Q,KAzadgJ,YAAc,SAACqB,EAAenB,EAAiBC,EAAiB2H,EAAYC,GACxEhT,EAAKnB,YAAc,UACnB,IAAMwN,EAAmBrM,EAAKsH,YACxBwF,EAAQ,CACVX,kBAAmBE,EACnBD,eAAgBE,EAChBI,iBAAkBvB,EAClBsB,iBAAkBrB,EAClB2B,YAAagG,EACb/F,YAAagG,EACbxU,MAAO,YAEXwB,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKuD,KAAKG,YAAY2I,GAAkB1N,SAAzD,sCAAAc,OAAgGO,EAAKuD,KAAKG,YAAY4I,GAAe3N,WACrIqB,EAAKuD,KAAK0I,OAAOrL,KAAKkM,GACtB9M,EAAKsQ,OAAOG,KAAK,eAAgB,CAC7BlQ,QAASP,EAAK6G,aAAatG,QAC3BuM,WAyZM7K,KAtZdgR,UAAY,WACR,IAAMC,EAAkBlT,EAAKuH,WAAW3B,OAClCuN,EAAenT,EAAKsH,YACpBsG,EAAO5N,EAAK2N,iBAAiB3N,EAAKuD,KAAKG,YAAYyP,GAAcjS,UAAU,GACjFlB,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,UAAAc,OAAiDO,EAAKuD,KAAKG,YAAYwP,GAAiBvU,SAAxF,MAAAc,OAAqGmO,EAArG,0BAAAnO,OAA+HO,EAAKuH,WAAWC,KAA/I,MACAxH,EAAKuD,KAAKG,YAAYwP,GAAiBzL,OAASmG,EAAO5N,EAAKkH,UAAUkM,eACtEpT,EAAKuD,KAAKG,YAAYyP,GAAc1L,OAASmG,EAAO5N,EAAKkH,UAAUkM,eACnEpT,EAAKuD,KAAKG,YAAYyP,GAAcC,eAAiB,EACrDpT,EAAKsQ,OAAOG,KAAK,sBAAuB,CACpClQ,QAASP,EAAK6G,aAAatG,QAC3B8S,cAAeF,EACfG,iBAAkBJ,EAClBK,oBAAqBvT,EAAKuD,KAAKG,YAAYyP,GAAc1L,MACzD+L,uBAAwBxT,EAAKuD,KAAKG,YAAYwP,GAAiBzL,SAyYzDxF,KAtYdoQ,SAAW,SAAC5R,GACR,IAAMgT,EAAS,CAAChT,IAAKA,EAAKiJ,KAAM,IAAID,MACpCzJ,EAAKuD,KAAK6F,KAAKxI,KAAK6S,GACpBzT,EAAKsQ,OAAOG,KAAK,UAAW,CACxBlQ,QAASP,EAAK6G,aAAatG,QAC3BE,IAAKgT,KAiYCxR,KA9XdkP,UAAY,WACR,IAAM7D,EAAOtN,EAAKuD,KAAKuB,MAAM9E,EAAKkH,UAAUhG,UACtCoG,EAActH,EAAKsH,YACrBtH,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,KAC/CnH,EAAKuD,KAAKG,YAAY4D,GAAaoM,eAAiB,EACpD1T,EAAK2T,0BAA0BrM,IAE/BtH,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,IAC/CnH,EAAK4T,4BAA4BtM,GAEjCtH,EAAKkH,UAAUkD,aAGnBpK,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,YAAAc,OAAmDO,EAAK6T,QAAxD,MAAApU,OAAoEO,EAAKkH,UAAUC,KAAK,GAAxF,OAAA1H,OAAgGO,EAAKkH,UAAUC,KAAK,GAApH,qBAAA1H,OAA0I6N,EAAK9F,KAA/I,MACAxH,EAAK8T,wBACDxG,EAAKnH,OAASmH,EAAK1H,SAAW0B,GAC9BtH,EAAKiT,YACDjT,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,gBAEhBvD,EAAKnH,OAAwB,aAAdmH,EAAKxK,MAAqC,OAAdwK,EAAKxK,MAA+B,YAAdwK,EAAKxK,KAMzD,YAAdwK,EAAKxK,KACZ9C,EAAK+T,eACgB,WAAdzG,EAAKxK,MAAmC,UAAdwK,EAAKxK,KACtC9C,EAAKgU,mBAAmB1G,EAAKxK,MACR,eAAdwK,EAAKxK,KACZ9C,EAAK6Q,eAAe,cACC,eAAdvD,EAAKxK,MACZ9C,EAAKuD,KAAKG,YAAY4D,GAAaoM,eAAiB,EACpD1T,EAAK2T,0BAA0BrM,GAC/BtH,EAAKiU,SAAS3M,GACdtH,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,8BAEIqB,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eApBpB7Q,EAAKkH,UAAUO,MAAQzH,EAAKuD,KAAKuB,MAAM9E,EAAKkH,UAAUhG,UAAUsH,KAChExI,EAAK6Q,eAAe,qBAEpB7Q,EAAK6Q,eAAe,YAoB5B7Q,EAAKiR,oBAgVKhP,KA9UdkI,yBAA2B,WACvB,IAAM+J,EAAO,CACTC,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,IAAM,EAC5CD,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,IAAM,GAE1CxG,EAA6B,IAArBsG,EAAK,GAAKA,EAAK,IACvBhB,EAAkBlT,EAAKuH,WAAW3B,OAClCuN,EAAenT,EAAKsH,YAC1BtH,EAAKuD,KAAKG,YAAYwP,GAAiBzL,OAASmG,EAChD5N,EAAKuD,KAAKG,YAAYyP,GAAc1L,OAASmG,EAC7C5N,EAAKsQ,OAAOG,KAAK,sBAAuB,CACpClQ,QAASP,EAAK6G,aAAatG,QAC3B8S,cAAeF,EACfG,iBAAkBJ,EAClBK,oBAAqBvT,EAAKuD,KAAKG,YAAYyP,GAAc1L,MACzD+L,uBAAwBxT,EAAKuD,KAAKG,YAAYwP,GAAiBzL,QAE/DzH,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eAExB7Q,EAAKiR,mBAwTKhP,KAtTd+R,mBAAqB,SAAClR,GAClB,IAAMwE,EAActH,EAAKsH,YACrBgN,EAAe,EACfC,EAAU,GAWd,GAVa,WAATzR,GACAwR,EAAetU,EAAKuD,KAAKiR,iBAAmB,IAAMxU,EAAKuD,KAAKkR,OAAOpR,OAAS,EAAIrD,EAAKuD,KAAKiR,iBAAmB,EAC7GxU,EAAKuD,KAAKiR,iBAAmBF,EAC7BC,EAAUvU,EAAKuD,KAAKkR,OAAOH,KAE3BA,EAAetU,EAAKuD,KAAKmR,gBAAkB,IAAM1U,EAAKuD,KAAKoR,MAAMtR,OAAS,EAAIrD,EAAKuD,KAAKmR,gBAAkB,EAC1G1U,EAAKuD,KAAKmR,gBAAkBJ,EAC5BC,EAAUvU,EAAKuD,KAAKoR,MAAML,IAE9BtU,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,aAAAc,OAAoD8U,EAAQ/M,OACvC,gBAAjB+M,EAAQzR,KACiB,IAArByR,EAAQrT,SACRlB,EAAK4U,8BACE5U,EAAKkH,UAAUhG,SAAWqT,EAAQrT,UACzClB,EAAK4U,8BAET5U,EAAK6R,iBAAiB0C,EAAQrT,UAC9BlB,EAAKmR,iBACF,GAAqB,oBAAjBoD,EAAQzR,KAA4B,CAC3C,IAAM+R,EAAU7U,EAAK8U,gBAAgB,WACjC9U,EAAKkH,UAAUhG,SAAW2T,GAC1B7U,EAAK4U,8BAET5U,EAAK6R,iBAAiBgD,GAElB7U,EAAKuD,KAAKuB,MAAM+P,GAAS1O,OAASnG,EAAKuD,KAAKuB,MAAM+P,GAASjP,SAAW0B,GACtEtH,EAAK6Q,eAAe,uBACpB7Q,EAAKiR,mBAELjR,EAAKmR,iBAEN,GAAqB,eAAjBoD,EAAQzR,KAAuB,CACtC9C,EAAKuD,KAAKG,YAAY4D,GAAa8L,eAAiB,EACpD,IAAM2B,EAAY/U,EAAK8U,gBAAgB,MACnC9U,EAAKkH,UAAUhG,SAAW6T,GAC1B/U,EAAK4U,8BAET5U,EAAK6R,iBAAiBkD,GACtB/U,EAAKmR,gBACmB,oBAAjBoD,EAAQzR,MACf9C,EAAKuD,KAAKG,YAAY4D,GAAaG,OAAS8M,EAAQS,OACpDhV,EAAKoR,kBAAkB9J,GACnBtH,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eAExB7Q,EAAKiR,mBACmB,gBAAjBsD,EAAQzR,MACf9C,EAAK6R,iBAAiB7R,EAAKkH,UAAUhG,SAAWqT,EAAQS,QACxDhV,EAAKmR,aACmB,eAAjBoD,EAAQzR,KACf9C,EAAKiU,SAAS3M,GACU,oBAAjBiN,EAAQzR,OACf9C,EAAKiV,cAAcV,EAAQS,QACvBhV,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eAExB7Q,EAAKiR,mBAGI,WAATnO,EACA9C,EAAKsQ,OAAOG,KAAK,uBAAwB,CACrClQ,QAASP,EAAK6G,aAAatG,QAC3BiU,iBAAkBF,EAClB3D,aAAcrJ,EACd8L,eAAgBpT,EAAKuD,KAAKG,YAAY4D,GAAa8L,iBAGvDpT,EAAKsQ,OAAOG,KAAK,sBAAuB,CACpClQ,QAASP,EAAK6G,aAAatG,QAC3BmU,gBAAiBJ,EACjB3D,aAAcrJ,EACd8L,eAAgBpT,EAAKuD,KAAKG,YAAY4D,GAAa8L,kBAuOjDnR,KAnOdgT,cAAgB,SAACD,GACb,IAAM1N,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,MAAQzH,EAAKuD,KAAKG,YAAY4D,GAAaG,MAASuN,GAAUhV,EAAKuD,KAAKG,YAAYiC,OAAO,SAAAC,GAAM,MAAqB,QAAjBA,EAAOpH,QAAiB6E,OAAS,GACzKrD,EAAKuD,KAAKG,YAAYyO,QAAQ,SAACvM,EAAQpC,GAC/BA,IAAU8D,IACV1B,EAAO6B,OAASuN,KAGxBhV,EAAKsQ,OAAOG,KAAK,kBAAmB,CAChClQ,QAASP,EAAK6G,aAAatG,QAC3BoQ,aAAcrJ,EACd0N,OAAQA,KAwNF/S,KArNd6S,gBAAkB,SAAChS,GACf,IAAIoS,EAAUlV,EAAKuD,KAAKuB,MAAM+G,UAAU,SAACyB,EAAM9J,GAC3C,QAAIA,EAAQxD,EAAKkH,UAAUhG,WAGpBoM,EAAKxK,OAASA,IAOzB,OALiB,IAAboS,IACAA,EAAUlV,EAAKuD,KAAKuB,MAAM+G,UAAU,SAACyB,GACjC,OAAOA,EAAKxK,OAASA,KAGtBoS,GAyMGjT,KAvMd8R,aAAe,WACX,IAAMzM,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,OAAS,GAC5CzH,EAAKoR,kBAAkB9J,GACvBtH,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,wCACIqB,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eAExB7Q,EAAKiR,mBA6LKhP,KA3LduI,cAAgB,WACZ,IAAMlD,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,OAAS0M,KAAKgB,KAAqB,GAAhBnV,EAAK0H,UAC3D1H,EAAKoR,kBAAkB9J,GACvBtH,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,4CAAAc,OAAmF0U,KAAKgB,KAAqB,GAAhBnV,EAAK0H,UAAlG,OACI1H,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eAExB7Q,EAAKiR,mBAiLKhP,KA/KdwI,WAAa,WACT,IAAMnD,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,OAAS,IAC5CzH,EAAKoR,kBAAkB9J,GACvBtH,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,mCACIqB,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eAExB7Q,EAAKiR,mBAqKKhP,KAnKdgS,SAAW,SAAC3M,GACRtH,EAAKuD,KAAKG,YAAY4D,GAAapG,SAAW,GAC9ClB,EAAKsQ,OAAOG,KAAK,OAAQ,CACrBlQ,QAASP,EAAK6G,aAAatG,QAC3BuR,aAAc,GACdnB,aAAcrJ,IAElBtH,EAAK+Q,cAAa,GAClB/Q,EAAKgR,sBACLhR,EAAK6Q,eAAe,gBA0JV5O,KAxJd2R,4BAA8B,SAACtM,GAC3BtH,EAAKuD,KAAKG,YAAY4D,GAAaoM,gBAAkB,EACK,IAAtD1T,EAAKuD,KAAKG,YAAY4D,GAAaoM,iBACnC1T,EAAKuD,KAAKG,YAAY4D,GAAaoM,eAAiB,EACpD1T,EAAKiU,SAAS3M,IAIlBtH,EAAK2T,0BAA0BrM,IAgJrBrF,KA9Id0R,0BAA4B,SAACrM,GACzBtH,EAAKsQ,OAAOG,KAAK,yBAA0B,CACvClQ,QAASP,EAAK6G,aAAatG,QAC3BoQ,aAAcrJ,EACdoM,eAAgB1T,EAAKkH,UAAUwM,kBA0IzBzR,KAtId2S,4BAA8B,WAC1B,IAAMtN,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,OAAS,IAC5CzH,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,6BACAqB,EAAKsQ,OAAOG,KAAK,sBAAuB,CACpClQ,QAASP,EAAK6G,aAAatG,QAC3B8Q,aAAcrR,EAAKuD,KAAKG,YAAY4D,GAAaG,MACjDkJ,aAAcrJ,KA+HRrF,KA5Hd6R,sBAAwB,WAChB9T,EAAKkH,UAAUhG,SAAWlB,EAAK6T,QAAU,GACzC7T,EAAK4U,+BA0HC3S,KAvHd+O,oBAAsB,WAClB,IAAM1J,EAActH,EAAKsH,YACzBtH,EAAKsQ,OAAOG,KAAK,yBAA0B,CACvClQ,QAASP,EAAK6G,aAAatG,QAC3BoQ,aAAcrJ,EACd8C,WAAYpK,EAAK4Q,mBAkHX3O,KA/GdgP,gBAAkB,WACd,IAAM3J,EAActH,EAAKsH,YACzBtH,EAAKsQ,OAAOG,KAAK,oBAAqB,CAClClQ,QAASP,EAAK6G,aAAatG,QAC3BoQ,aAAcrJ,EACd9I,MAAOwB,EAAK+J,eA0GN9H,KAvGdqI,QAAU,WACN,IAAMhD,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,OAASzH,EAAKuD,KAAKuB,MAAM9E,EAAKkH,UAAUhG,UAAUsH,KACrFxI,EAAKuD,KAAKuB,MAAM9E,EAAKkH,UAAUhG,UAAUiF,OAAQ,EACjDnG,EAAKuD,KAAKuB,MAAM9E,EAAKkH,UAAUhG,UAAU0E,OAAS0B,EAClDtH,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,eAAAc,OAAmDO,EAAKuH,WAAWC,KAAnE,WAAA/H,OAAiFO,EAAKuH,WAAWiB,KAAjG,MACAxI,EAAKsQ,OAAOG,KAAK,WAAY,CACzBlQ,QAASP,EAAK6G,aAAatG,QAC3B6U,WAAYpV,EAAKkH,UAAUhG,SAC3BmU,YAAarV,EAAKuD,KAAKuB,MAAM9E,EAAKkH,UAAUhG,UAC5CmQ,aAAcrR,EAAKuD,KAAKG,YAAY4D,GAAaG,MACjDkJ,aAAcrJ,IAEdtH,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eAExB7Q,EAAKiR,mBAqFKhP,KAnFdsI,cAAgB,WACZvK,EAAKqS,SAAL,GAAA5S,OAAiBO,EAAKkH,UAAUvI,SAAhC,qBAAAc,OAA4DO,EAAKuH,WAAWC,KAA5E,mBACIxH,EAAKkH,UAAUC,KAAK,KAAOnH,EAAKkH,UAAUC,KAAK,GAC/CnH,EAAK6Q,eAAe,cAEpB7Q,EAAK6Q,eAAe,eAExB7Q,EAAKsQ,OAAOG,KAAK,mBAAoB,CACjClQ,QAASP,EAAK6G,aAAatG,QAC3B+M,KAAMtN,EAAKkH,UAAUhG,WAEzBlB,EAAKuD,KAAK+R,SAAU,EACpBtV,EAAKuD,KAAKgS,aAAevV,EAAKkH,UAAUhG,SACxClB,EAAKiR,mBAsEKhP,KApEdyI,QAAU,WACN1K,EAAKuL,+BACLvL,EAAK6Q,eAAe,YACpB,IAAMvJ,EAActH,EAAKsH,YACrBiL,EAAmBvS,EAAKwS,qBAAqBlL,GACjDtH,EAAKuD,KAAKG,YAAY6O,GAAkB/T,MAAQ,aAChDwB,EAAKsQ,OAAOG,KAAK,WAAY,CACzBlQ,QAASP,EAAK6G,aAAatG,QAC3BsS,YAAaN,EACbiD,WAAYlO,KA2DNrF,KAxDd6H,UAAY,WACR9J,EAAKuD,KAAKI,WAAa,UACvB3D,EAAKsQ,OAAOG,KAAK,aAAc,CAC3BlQ,QAASP,EAAK6G,aAAatG,WAqDrB0B,KAlDdiP,WAAa,WACT,IAAM5J,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKyC,sBAAwB,CAACJ,QAAS,EAAGK,MAAO,IAEtD,IADA,IAAIJ,EAAI,EACDA,GAAK7F,EAAK6T,SACb7T,EAAKuD,KAAKyC,sBAAsBC,MAAMrF,KAAKZ,EAAKuR,YAAYvR,EAAKuD,KAAKG,YAAY4D,GAAapG,SAAU2E,EAAG,KAC5GA,GAAK,EAET7F,EAAKsQ,OAAOG,KAAK,wBAAyB,CACtClQ,QAASP,EAAK6G,aAAatG,QAC3ByF,sBAAuBhG,EAAKuD,KAAKyC,wBAErC,IAAMwL,EAAeC,YAAY,WAC7BC,aAAY,WACR1R,EAAKuD,KAAKyC,sBAAsBC,MAAM0L,QACe,IAAjD3R,EAAKuD,KAAKyC,sBAAsBC,MAAM5C,QACtCuO,cAAcJ,MAGvB,KACHxR,EAAKuD,KAAKG,YAAY4D,GAAapG,SAAWlB,EAAKuR,YAAYvR,EAAKuD,KAAKG,YAAY4D,GAAapG,SAAUlB,EAAK6T,QAAS,IAC1H7T,EAAKsQ,OAAOG,KAAK,OAAQ,CACrBlQ,QAASP,EAAK6G,aAAatG,QAC3BuR,aAAc9R,EAAKuD,KAAKG,YAAY4D,GAAapG,SACjDyP,aAAcrJ,KA0BRrF,KAvBdoG,gBAAkB,SAAC7E,GACf,IAAM8D,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,OAASzH,EAAKuD,KAAKuB,MAAMtB,GAAO0E,QACnElI,EAAKoR,kBAAkB9J,GACvBtH,EAAKuD,KAAKuB,MAAMtB,GAAO4C,UAAY,EACnCpG,EAAKsQ,OAAOG,KAAK,eAAgB,CAC7BlQ,QAASP,EAAK6G,aAAatG,QAC3BkV,eAAgBjS,EAChB4C,SAAUpG,EAAKuD,KAAKuB,MAAMtB,GAAO4C,YAe3BnE,KAZdsG,kBAAoB,SAAC/E,GACjB,IAAM8D,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,OAASzH,EAAKuD,KAAKuB,MAAMtB,GAAO0E,QAAU,EAC7ElI,EAAKoR,kBAAkB9J,GACvBtH,EAAKuD,KAAKuB,MAAMtB,GAAO4C,UAAY,EACnCpG,EAAKsQ,OAAOG,KAAK,eAAgB,CAC7BlQ,QAASP,EAAK6G,aAAatG,QAC3BkV,eAAgBjS,EAChB4C,SAAUpG,EAAKuD,KAAKuB,MAAMtB,GAAO4C,YAI3BnE,KAedyT,cAAgB,WACZ1V,EAAKsQ,OAAOqF,GAAG,eAAgB,SAAA9T,GAC3BrB,QAAQC,IAAI,eAAgBoB,GAC5B6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK+D,QAAQ1E,SAAWW,EAAKX,aAG3DlB,EAAKsQ,OAAOqF,GAAG,cAAe,SAAA9T,GAC1BrB,QAAQC,IAAI,cAAeoB,GAC3B6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK+D,OAAO+K,cAAclJ,MAAQ5F,EAAK+D,OAAOyL,aACpErR,EAAKuD,KAAKuB,MAAMjD,EAAKyL,KAAK8H,YAAcvT,EAAKyL,KAAKA,SAG1DtN,EAAKsQ,OAAOqF,GAAG,uBAAwB,SAAA9T,GACnCrB,QAAQC,IAAI,uBAAwBoB,GACpC6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAclJ,MAAQ5F,EAAKwP,iBAG9DrR,EAAKsQ,OAAOqF,GAAG,aAAc,SAAA9T,GACzBrB,QAAQC,IAAI,aAAcoB,GAC1B6P,aAAY,WACJ7P,EAAKgR,cAAgB7S,EAAKsH,cAC4B,QAAlDtH,EAAKuD,KAAKG,YAAY1D,EAAKsH,aAAa9I,MACxCwB,EAAK0K,WAEL1K,EAAKuD,KAAKG,YAAY7B,EAAKgR,aAAarU,MAAQ,aAChDwB,EAAKuD,KAAKG,YAAY7B,EAAK2T,YAAYhX,MAAQ,WAC1B,IAAIoX,aAAa,cACzBC,QAAU,WACnBC,OAAOC,eAM3B/V,EAAKsQ,OAAOqF,GAAG,gCAAiC,SAAA9T,GAC5CrB,QAAQC,IAAI,gCAAiCoB,GAC7C6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAcvG,WAAavI,EAAKuI,eAGnEpK,EAAKsQ,OAAOqF,GAAG,mCAAoC,SAAA9T,GAC/CrB,QAAQC,IAAI,mCAAoCoB,GAChD6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAc3G,WAAanI,EAAKmI,eAGnEhK,EAAKsQ,OAAOqF,GAAG,wBAAyB,SAAA9T,GACpCrB,QAAQC,IAAI,wBAAyBoB,GACrC6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAKwR,eAAe5L,MAAQ5F,EAAK0R,oBACvDvT,EAAKuD,KAAKG,YAAY7B,EAAKwR,eAAeD,eAAiB,EAC3DpT,EAAKuD,KAAKG,YAAY7B,EAAKyR,kBAAkB7L,MAAQ5F,EAAK2R,2BAGlExT,EAAKsQ,OAAOqF,GAAG,0BAA2B,SAAA9T,GACtCrB,QAAQC,IAAI,0BAA2BoB,GACvC6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAc+C,eAAiB7R,EAAK6R,mBAGvE1T,EAAKsQ,OAAOqF,GAAG,oBAAqB,SAAA9T,GAChCrB,QAAQC,IAAI,oBAAqBoB,GACjC6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAcxJ,KAAOtF,EAAKsF,SAG7DnH,EAAKsQ,OAAOqF,GAAG,sBAAuB,SAAA9T,GAClCrB,QAAQC,IAAI,sBAAuBoB,GACnC6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAcnS,MAAQqD,EAAKrD,UAG9DwB,EAAKsQ,OAAOqF,GAAG,uBAAwB,SAAA9T,GACnCrB,QAAQC,IAAI,uBAAwBoB,GACpC6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAcyC,eAAiBvR,EAAKuR,eAC/DpT,EAAKuD,KAAKmR,gBAAkB7S,EAAK6S,oBAGzC1U,EAAKsQ,OAAOqF,GAAG,wBAAyB,SAAA9T,GACpCrB,QAAQC,IAAI,wBAAyBoB,GACrC6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAcyC,eAAiBvR,EAAKuR,eAC/DpT,EAAKuD,KAAKiR,iBAAmB3S,EAAK2S,qBAG1CxU,EAAKsQ,OAAOqF,GAAG,qBAAsB,SAAA9T,GACjCrB,QAAQC,IAAI,qBAAsBoB,GAClC6P,aAAY,WACR1R,EAAKuD,KAAKuB,MAAMjD,EAAK4T,gBAAgBnQ,UAAYzD,EAAKmU,mBAG9DhW,EAAKsQ,OAAOqF,GAAG,gBAAiB,SAAA9T,GAC5BrB,QAAQC,IAAI,gBAAiBoB,GAC7B6P,aAAY,WACR1R,EAAKuD,KAAKuB,MAAMjD,EAAK4T,gBAAgBrP,SAAWvE,EAAKuE,aAG7DpG,EAAKsQ,OAAOqF,GAAG,iBAAkB,SAAA9T,GAC7BrB,QAAQC,IAAI,iBAAkBoB,GAC9B7B,EAAKiS,eAAepQ,EAAKyQ,aACzBZ,aAAY,WACR1R,EAAKuD,KAAK0I,OAAOpK,EAAKyQ,aAAa9T,MAAQ,eAGnDwB,EAAKsQ,OAAOqF,GAAG,iBAAkB,SAAA9T,GAC7BrB,QAAQC,IAAI,iBAAkBoB,GAC9B6P,aAAY,WACR1R,EAAKuD,KAAK0I,OAAOpK,EAAKyQ,aAAa9T,MAAQ,eAGnDwB,EAAKsQ,OAAOqF,GAAG,oBAAqB,SAAA9T,GAChCrB,QAAQC,IAAI,iBAAkBoB,GAC9B6P,aAAY,WACR1R,EAAKuD,KAAK+R,SAAU,EACpBtV,EAAKuD,KAAKgS,aAAe1T,EAAKyL,SAGtCtN,EAAKsQ,OAAOqF,GAAG,iBAAkB,SAAA9T,GAC7BrB,QAAQC,IAAI,iBAAkBoB,GAC9B6P,aAAY,WACR1R,EAAKuD,KAAK0I,OAAOpK,EAAKyQ,aAAa9T,MAAQ,eAGnDwB,EAAKsQ,OAAOqF,GAAG,gBAAiB,SAAA9T,GAC5BrB,QAAQC,IAAI,gBAAiBoB,GAC7B6P,aAAY,WACR1R,EAAKuD,KAAK0I,OAAOrL,KAAKiB,EAAKiL,WAGnC9M,EAAKsQ,OAAOqF,GAAG,YAAa,SAAA9T,GACxBrB,QAAQC,IAAI,YAAaoB,GACzB6P,aAAY,WACR1R,EAAKuD,KAAK6F,KAAKxI,KAAKiB,EAAKpB,SAGjCT,EAAKsQ,OAAOqF,GAAG,eAAgB,SAAA9T,GAC3BrB,QAAQC,IAAI,eAAgBoB,GAC5B6P,aAAY,WACR1R,EAAKuD,KAAKI,WAAa,cAG/B3D,EAAKsQ,OAAOqF,GAAG,iBAAkB,SAAA9T,GAC7BrB,QAAQC,IAAI,iBAAkBoB,GAC9B6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAcnS,MAAQ,MACjDwB,EAAKuD,KAAKG,YAAY7B,EAAKgR,aAAarU,MAAQ,aAChDwB,EAAKuD,KAAKuB,MAAQjD,EAAKiR,cAG/B9S,EAAKsQ,OAAOqF,GAAG,aAAc,SAAA9T,GACzBrB,QAAQC,IAAI,aAAcoB,GAC1B6P,aAAY,WACR1R,EAAKuD,KAAKI,WAAa,YAG/B3D,EAAKsQ,OAAOqF,GAAG,yBAA0B,SAAA9T,GACrCrB,QAAQC,IAAI,yBAA0BoB,GACtC6P,aAAY,WACR1R,EAAKuD,KAAKyC,sBAAwBnE,EAAKmE,sBACvC,IAAMwL,EAAeC,YAAY,WAC7BC,aAAY,WACR1R,EAAKuD,KAAKyC,sBAAsBC,MAAM0L,QACe,IAAjD3R,EAAKuD,KAAKyC,sBAAsBC,MAAM5C,QACtCuO,cAAcJ,MAGvB,SAGXxR,EAAKsQ,OAAOqF,GAAG,wBAAyB,SAAA9T,GACpCrB,QAAQC,IAAI,wBAAyBoB,GACrC6P,aAAY,WACR1R,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAclJ,MAAQzH,EAAKuD,KAAKG,YAAY7B,EAAK8O,cAAclJ,MAAS5F,EAAKmT,QAAUhV,EAAKuD,KAAKG,YAAYiC,OAAO,SAAAC,GAAM,MAAqB,QAAjBA,EAAOpH,QAAiB6E,OAAS,GAC1LrD,EAAKuD,KAAKG,YAAYyO,QAAQ,SAACvM,EAAQpC,GAC/BA,IAAU3B,EAAK8O,eACf/K,EAAO6B,OAAS5F,EAAKmT,eAlM3B/S,KAwMdgU,YAAc,SAACpU,GACX7B,EAAKuD,KAAO1B,GAzMFI,KA2MdyD,kBAAoB,SAAC4H,GACjBtN,EAAKuN,eAAiBD,GA5MZrL,KA8MduD,oBAAsB,WAClBxF,EAAKuN,eAAiB,MA/MZtL,KAkNd6O,SAAW,WACP,IAAMxJ,EAActH,EAAKsH,YACzBtH,EAAKuD,KAAKG,YAAY4D,GAAaH,KAAO,CACtCgN,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,IAAM,EAC5CD,KAAKC,MAAMD,KAAKE,SAAWF,KAAKC,MAAM,IAAM,GAEhDpU,EAAKsQ,OAAOG,KAAK,mBAAoB,CACjClQ,QAASP,EAAK6G,aAAatG,QAC3B4G,KAAMnH,EAAKuD,KAAKG,YAAY4D,GAAaH,KACzCwJ,aAAcrJ,KA3NRrF,KA8Nd0L,iBAAmB,SAACzH,EAAWgQ,GAC3B,IAAM5I,EAAOtN,EAAKuD,KAAKuB,MAAMoB,GAC7B,GAAkB,OAAdoH,EAAKxK,KAAe,CACpB,IAAIqT,EAAUnW,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,MAAgB,OAAZA,EAAG3F,MAAiB2F,EAAG7C,SAAW0H,EAAK1H,SAAQvC,OAC1F,OAAOiK,EAAK8I,UAAYjC,KAAKkC,IAAI,EAAGF,EAAU,GAC3C,GAAkB,aAAd7I,EAAKxK,KAAqB,CACjC,GAAIwK,EAAKhI,UACL,OAAO,EAEX,IAAIgR,EAAwG,IAA9FtW,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU4E,EAAK5E,OAASD,EAAG7C,SAAW0H,EAAK1H,SAAQvC,OAC7FkT,EAAgBvW,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU4E,EAAK5E,QAAOC,MAAM,SAAAF,GAAE,OAAKA,EAAGnD,YAC1F,OAAIgR,GAAWC,EACPjJ,EAAKlH,SAAW,EACTkH,EAAKM,KAAKN,EAAKlH,UAEJ,EAAfkH,EAAKM,KAAK,GAEVN,EAAKM,KAAK,GAElB,GAAkB,YAAdN,EAAKxK,KAEZ,OAD4G,IAA9F9C,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU4E,EAAK5E,OAASD,EAAG7C,SAAW0H,EAAK1H,SAAQvC,OAOzF6S,EACO,cAEW,GAAflW,EAAK6T,QARRqC,EACO,aAEW,EAAflW,EAAK6T,SAvPV5R,KAgQd2G,iBAAmB,SAACb,GAChB,IAAMT,EAActH,EAAKsH,YACrBtH,EAAKuD,KAAKuB,MAAMiD,GAAUzC,WAC1BtF,EAAKuD,KAAKG,YAAY4D,GAAaG,OAASzH,EAAKuD,KAAKuB,MAAMiD,GAAUS,KAAO,EAC7ExI,EAAKoR,kBAAkB9J,KAEvBtH,EAAKuD,KAAKG,YAAY4D,GAAaG,OAASzH,EAAKuD,KAAKuB,MAAMiD,GAAUS,KAAO,EAC7ExI,EAAKoR,kBAAkB9J,IAE3BtH,EAAKuD,KAAKuB,MAAMiD,GAAUzC,WAAatF,EAAKuD,KAAKuB,MAAMiD,GAAUzC,UACjEtF,EAAKsQ,OAAOG,KAAK,oBAAqB,CAClClQ,QAASP,EAAK6G,aAAatG,QAC3BkV,eAAgB1N,EAChBiO,eAAgBhW,EAAKuD,KAAKuB,MAAMiD,GAAUzC,aA7QpCrD,KAgRdsP,YAAc,SAACiF,EAAKC,EAAKC,GACrB,OAAIF,EAAMC,EAAMC,GACZD,GAAaC,EAAMF,GACN,EAENA,EAAMC,GArRPxU,KA+Sd4O,eAAiB,SAACrS,GACdwB,EAAKuD,KAAKG,YAAY1D,EAAKsH,aAAa9I,MAAQA,GAhTtCyD,KAkTd8O,aAAe,SAACvS,GACZwB,EAAKuD,KAAKG,YAAY1D,EAAKsH,aAAa8C,WAAa5L,GAnT3CyD,KAsUd4I,iBAAmB,SAACvD,GAChB,IAAKtH,EAAKuD,KAAKG,YACX,OAAO,EAEX,IAAIiT,EAAQ3W,EAAKuD,KAAKG,YAAY4D,GAAaG,MAS/C,OARAzH,EAAKuD,KAAKuB,MAAMqN,QAAQ,SAAA7E,GAChBA,EAAKnH,OAASmH,EAAK1H,SAAW0B,IAC9BqP,GAASrJ,EAAK9E,KACV8E,EAAKlH,WACLuQ,GAASrJ,EAAKlH,SAAWkH,EAAKpF,YAInCyO,GAnVG1U,KAqVd6I,oBAAsB,SAACxD,GACnB,IAAKtH,EAAKuD,KAAKG,YACX,OAAO,EAEX,IAAIiT,EAAQ3W,EAAKuD,KAAKG,YAAY4D,GAAaG,MAS/C,OARAzH,EAAKuD,KAAKuB,MAAMqN,QAAQ,SAAA7E,GAChBA,EAAKnH,OAASmH,EAAK1H,SAAW0B,IAC9BqP,GAASrJ,EAAK9E,KAAO,EACjB8E,EAAKlH,WACLuQ,GAASrJ,EAAKlH,UAAYkH,EAAKpF,QAAU,OAI9CyO,GAlWG1U,KAiYd6F,kBAAoB,SAACR,GACjB,IAAM1B,EAAS5F,EAAKuD,KAAKG,YAAY4D,GACrC,OAAOtH,EAAKuD,KAAKuB,MACZxB,IAAI,SAACgK,EAAMzH,GACR,IAAIyQ,EAAoI,IAA1HtW,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU1I,EAAKuD,KAAKuB,MAAMe,GAAG6C,OAASD,EAAG7C,SAAW5F,EAAKuD,KAAKuB,MAAMe,GAAGD,SAAQvC,OACzHkT,EAAgBvW,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU1I,EAAKuD,KAAKuB,MAAMe,GAAG6C,QAAOC,MAAM,SAAAF,GAAE,OAAKA,EAAGnD,YACpGsR,EAAa5W,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU1I,EAAKuD,KAAKuB,MAAMe,GAAG6C,QAAOC,MAAM,SAAAF,GACvF,QAAI6E,EAAKlH,SAAWqC,EAAGrC,YAGhBkH,EAAKlH,SAAWqC,EAAGrC,UAAYkH,EAAKlH,WAAaqC,EAAGrC,YAG3DyQ,EAAe7W,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU1I,EAAKuD,KAAKuB,MAAMe,GAAG6C,QAAOC,MAAM,SAAAF,GACzF,QAAI6E,EAAKlH,SAAWqC,EAAGrC,YAGhBkH,EAAKlH,SAAWqC,EAAGrC,UAAYkH,EAAKlH,WAAaqC,EAAGrC,YAGzDwF,EAAiB5L,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU1I,EAAKuD,KAAKuB,MAAMe,GAAG6C,OAASD,EAAGP,SAAWO,EAAGrC,SAAW,IAAG/C,OAAS,EAC/H+E,EAAawO,GAAcN,GAAWC,GAAiBvW,EAAKuD,KAAKuB,MAAMe,GAAGO,SAAW,GAAKR,EAAO6B,OAASzH,EAAKuD,KAAKuB,MAAMe,GAAGqC,QAC7HI,EAAeuO,GAAgBP,GAAWC,GAAiBvW,EAAKuD,KAAKuB,MAAMe,GAAGO,SAAW,EAC3F4B,EAAiBhI,EAAK2N,iBAAiB9H,GAAG,GAC9C,OAAOX,OAAAC,EAAA,EAAAD,CAAA,GAAIoI,EAAX,CAAiB9J,MAAOqC,EAAGuC,aAAYE,eAAcN,iBAAgBsO,UAAS1K,qBAEjFjG,OAAO,SAAA2H,GACJ,OAAOA,EAAKnH,OAASmH,EAAK1H,SAAW0B,IAExCwP,KAAK,SAAC3U,EAAG4U,GACN,OAAO5U,EAAEuG,QAAUqO,EAAErO,MAAQvG,EAAEqG,KAAOuO,EAAEvO,KAAO,GAAK,EAAIrG,EAAEW,OAASiU,EAAEjU,KAAOX,EAAEuG,MAAQqO,EAAErO,OAAS,EAAI,EAAIvG,EAAEW,KAAOiU,EAAEjU,MAAQ,EAAI,KA/Z9Hb,KA0admG,WAAa,SAAC4O,GACV,IAAIV,EAA4J,IAAlJtW,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU1I,EAAKuD,KAAKuB,MAAMkS,GAAetO,OAASD,EAAG7C,SAAW5F,EAAKuD,KAAKuB,MAAMkS,GAAepR,SAAQvC,OACjJkT,EAAgBvW,EAAKuD,KAAKuB,MAAMa,OAAO,SAAA8C,GAAE,OAAIA,EAAGC,QAAU1I,EAAKuD,KAAKuB,MAAMkS,GAAetO,QAAOC,MAAM,SAAAF,GAAE,OAAKA,EAAGnD,YACpH,OAAOgR,GAAWC,GAAiBvW,EAAKuD,KAAKuB,MAAMkS,GAAe5Q,SAAW,GAAKpG,EAAKkH,UAAUO,OAASzH,EAAKuD,KAAKuB,MAAMkS,GAAe9O,SA7a/HjG,KAqbduQ,qBAAuB,SAAClL,GACpB,IAAK,IAAIzB,EAAIyB,EAAazB,EAAmC,EAA/B7F,EAAKuD,KAAKG,YAAYL,OAAYwC,IAAK,CACjE,IAAMD,EAAS5F,EAAKuD,KAAKG,aAAamC,EAAI7F,EAAKuD,KAAKG,YAAYL,OAASrD,EAAKuD,KAAKG,YAAYL,QAAUrD,EAAKuD,KAAKG,YAAYL,QAC/H,GAAqB,QAAjBuC,EAAOpH,OAAmBoH,EAAOG,KAAOuB,EACxC,OAAO1B,EAAOG,KAzbZ9D,KA6bdsJ,6BAA+B,WAC3BvL,EAAKkL,sBAAwB,CACzBG,WAAY,EACZC,WAAY,EACZH,gBAAiB,GACjBC,gBAAiB,KAlcXnJ,KAqcdyJ,yBAA2B,SAACjI,EAAK+S,GAC7BxW,EAAKkL,sBAAsBzH,GAAO+S,GAtcxBvU,KAwcdiJ,sBAAwB,CACpBG,WAAY,EACZC,WAAY,EACZH,gBAAiB,GACjBC,gBAAiB,IA3cjBnJ,KAAKqO,OAAOqF,GAAG,YAAa,SAAC9T,GACzBrB,QAAQC,IAAI,YAAaoB,GACrBA,GACA7B,EAAKiW,YAAYpU,KAGzBI,KAAKqO,OAAOqF,GAAG,YAAa,WACxBnV,QAAQC,IAAI,gBACZT,EAAK6O,kBAET5M,KAAKyT,oEA+QL,OAAOzT,KAAKiF,UAAUC,KAAK,GAAKlF,KAAKiF,UAAUC,KAAK,sCAIpD,OAAOlF,KAAKsB,KAAKuB,MAAM7C,KAAKiF,UAAUhG,4CAItC,OAAOe,KAAKsB,KAAKG,YAAYzB,KAAKqF,4CAIlC,QAAKrF,KAAKsB,KAAKG,cAEkB,IAAtBzB,KAAKqF,gDAkBhB,OAAOrF,KAAKiF,UAAU1I,8CAQtB,OAAOyD,KAAKiF,UAAUkD,4CAoCtB,IAAM9C,EAAcrF,KAAKqF,YACrBqP,EAAQ1U,KAAKiF,UAAUO,MAS3B,OARAxF,KAAKsB,KAAKuB,MAAMqN,QAAQ,SAAA7E,GAChBA,EAAKnH,OAASmH,EAAK1H,SAAW0B,IAC9BqP,GAASrJ,EAAK9E,KACV8E,EAAKlH,WACLuQ,GAASrJ,EAAKlH,SAAWkH,EAAKpF,YAInCyO,sCAIP,IAAMrP,EAAcrF,KAAKqF,YACrBqP,EAAQ1U,KAAKiF,UAAUO,MAS3B,OARAxF,KAAKsB,KAAKuB,MAAMqN,QAAQ,SAAA7E,GAChBA,EAAKnH,OAASmH,EAAK1H,SAAW0B,IAC9BqP,GAASrJ,EAAK9E,KAAO,EACjB8E,EAAKlH,WACLuQ,GAASrJ,EAAKlH,UAAYkH,EAAKpF,QAAU,OAI9CyO,sCAqCO,IAAA3U,EAAAC,KACd,OAAKA,KAAKsB,KAAKG,YAGRzB,KAAKsB,KAAKG,YAAYmI,UAAU,SAAApD,GAAE,OAAIA,EAAG9J,WAAaqD,EAAK6E,aAAalI,WAFpE,+CAaX,OADesD,KAAKsB,KAAKG,YAAYgP,KAAK,SAAA9M,GAAM,MAAsB,aAAjBA,EAAOpH,OAAyC,QAAjBoH,EAAOpH,SAC1E,YA8BzByY,aAAS7G,GAAO,CACZ8G,QAASC,KACT5T,KAAM4T,KACNjM,sBAAuBiM,KAEvB5J,eAAgB4J,KAChBtY,YAAasY,KACbtQ,aAAcsQ,KACdtD,QAASuD,KACTrN,YAAaqN,KACbtI,OAAQsI,KACRxG,gBAAiBwG,KACjBlQ,UAAWkQ,KACX7P,WAAY6P,KACZ1P,SAAU0P,KACVzP,YAAayP,KACb9P,YAAa8P,KACblN,kBAAmBkN,KACnBtG,SAAUuG,KACV9L,6BAA8B8L,KAC9B3L,yBAA0B2L,KAC1BxG,eAAgBwG,KAChBxF,iBAAkBwF,KAClBlG,UAAWkG,KACX7M,cAAe6M,KACf5M,WAAY4M,KACZpD,SAAUoD,KACVlN,yBAA0BkN,KAC1BzD,4BAA6ByD,KAC7BtG,aAAcsG,KACd7R,oBAAqB6R,KACrB3R,kBAAmB2R,KACnBC,YAAaD,KACbzO,iBAAkByO,KAClBpB,YAAaoB,KACbpM,YAAaoM,KACbhN,aAAcgN,KACdtD,aAAcsD,KACdE,iBAAkBF,KAClB/F,cAAe+F,KACfnG,WAAYmG,KACZpE,UAAWoE,KACX/M,QAAS+M,KACTpF,eAAgBoF,KAChBpK,YAAaoK,KACbhF,SAAUgF,KACVpN,UAAWoN,KACXpC,cAAeoC,KACf3M,QAAS2M,KACTrD,mBAAoBqD,KACpBhP,gBAAiBgP,KACjB1M,OAAQ0M,KACRlK,YAAakK,KACb9M,cAAe8M,KACfjK,YAAaiK,KACbzI,gBAAiByI,KACjB9O,kBAAmB8O,KACnBvD,sBAAuBuD,KACvBzC,4BAA6ByC,KAC7B3B,cAAe2B,KACfxI,cAAewI,KACfvN,UAAWuN,OAGA,IAAAG,GAAA,IAAIpH,GCxnCCqH,QACW,cAA7B3B,OAAOxG,SAASoI,UAEe,UAA7B5B,OAAOxG,SAASoI,UAEhB5B,OAAOxG,SAASoI,SAASC,MACvB,2DCVNC,IAASC,OACL3V,EAAAC,EAAAC,cAAC0V,EAAA,EAAD,CAAUtT,MAAOA,IACbtC,EAAAC,EAAAC,cAAC2V,GAAA,EAAD,KACI7V,EAAAC,EAAAC,cAAC4V,EAAD,QAGNC,SAASC,eAAe,SAK9BtC,aAAauC,oBAAoBlY,KAAK,SAAUmY,MD8G1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMtY,KAAK,SAAAuY,GACjCA,EAAaC","file":"static/js/main.dbdea8c9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {ToastContainer, toast} from 'react-toastify';\n\nconst URL = process.env.REACT_APP_URL || \"https://monopoly.cassimkhouani.com\";\n\nclass NewGame extends Component {\n    state = {\n        game_name: \"\",\n        game_password: \"\",\n        username: \"\",\n        password: \"\",\n        selectedTab: \"create_game\",\n        searchGameName: \"\",\n        gamesFound: [],\n        gamesFoundSelected: -1,\n        joinGamePassword: \"\",\n        joinGameUsername: \"\",\n        joinGameUsernamePassword: \"\",\n        formError: \"\",\n    };\n\n    componentDidMount() {\n        localStorage.removeItem(\"username\");\n    }\n\n    submitNewGame = (e) => {\n        e.preventDefault();\n        fetch(`${URL}/create_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_name: this.state.game_name,\n                game_password: this.state.game_password,\n                username: this.state.username,\n                password: this.state.password\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                localStorage.setItem(\"previous_game\", JSON.stringify({\n                    game_name: this.state.game_name,\n                    game_password: this.state.game_password,\n                    username: this.state.username,\n                    password: this.state.password,\n                    game_id: response.game_id,\n                }));\n                console.log(response);\n                this.props.history.push(\"/play-game\");\n            });\n    };\n    joinGame = (e) => {\n        e.preventDefault();\n        console.log(this.state.gamesFound[this.state.gamesFoundSelected]._id);\n        fetch(`${URL}/join_game`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n                game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                game_password: this.state.joinGamePassword,\n                username: this.state.joinGameUsername,\n                password: this.state.joinGameUsernamePassword\n            }),\n        })\n            .then(res => res.json())\n            .then(response => {\n                console.log(response)\n                if (response.error) {\n                    this.setState({formError: response.error}, () => {\n                        if (this.state.formError === \"incorrect_game_pw\") {\n                            toast.error(\"Mot de passe de partie incorrect.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"player_not_in_game\") {\n                            toast.error(\"Vous n'êtes pas dans cette partie.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        } else if (this.state.formError === \"incorrect_player_pw\") {\n                            toast.error(\"Mot de passe du joueur incorrect.\", {\n                                position: \"top-right\",\n                                autoClose: 2000,\n                                hideProgressBar: false,\n                                closeOnClick: true,\n                                pauseOnHover: true,\n                                draggable: true,\n                            });\n                        }\n                    });\n                    return;\n                }\n                if (response.success) {\n                    localStorage.setItem(\"previous_game\", JSON.stringify({\n                        game_id: this.state.gamesFound[this.state.gamesFoundSelected]._id,\n                        game_name: this.state.gamesFound[this.state.gamesFoundSelected].auth.game_name,\n                        game_password: this.state.joinGamePassword,\n                        username: this.state.joinGameUsername,\n                        password: this.state.joinGameUsernamePassword,\n                    }));\n                    console.log(response);\n                    this.props.history.push(\"/play-game\");\n                }\n            });\n    };\n    keyPress = (e) => {\n        if (e.keyCode === 13) {\n            this.searchForGames();\n        }\n    };\n    searchForGames = () => {\n        this.setState({gamesFound: [], gamesFoundSelected: -1});\n        fetch(`${URL}/search_for_games?game_name=${this.state.searchGameName}`)\n            .then(res => res.json())\n            .then(data => {\n                this.setState({gamesFound: data.games});\n            })\n    };\n\n    render() {\n\n        return (\n            <div className=\"new-game-main\">\n                <ToastContainer/>\n                <ul className=\"nav nav-tabs\">\n                    <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"create_game\"})}>\n                        <div className={`nav-link ${this.state.selectedTab === \"create_game\" ? \"active\" : \"\"}`}>\n                            Créer une partie\n                        </div>\n                    </li>\n                    <li className=\"nav-item cursor\" onClick={() => this.setState({selectedTab: \"join_game\"})}>\n                        <div className={`nav-link ${this.state.selectedTab === \"join_game\" ? \"active\" : \"\"}`}>\n                            Rejoindre une partie\n                        </div>\n                    </li>\n                </ul>\n                {this.state.selectedTab === \"create_game\" && (\n                    <div className=\"create-game-input\">\n                        <form onSubmit={this.submitNewGame}>\n                            <h5>Créer une partie</h5>\n                            <small className=\"form-text text-muted align-self-start\">Nom de la partie</small>\n                            <input required value={this.state.game_name}\n                                   onChange={({target}) => this.setState({game_name: target.value})}\n                                   type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Nom partie\"/>\n                            <small className=\"form-text text-muted align-self-start\">Mot de passe de la partie</small>\n                            <input required value={this.state.game_password}\n                                   onChange={({target}) => this.setState({game_password: target.value})}\n                                   type=\"password\" className=\"form-control mb-2\"\n                                   placeholder=\"Mot de passe\"/>\n                            <small className=\"form-text text-muted align-self-start\">Ton nom</small>\n                            <input required value={this.state.username}\n                                   onChange={({target}) => this.setState({username: target.value})}\n                                   type=\"text\" className=\"form-control mb-2\"\n                                   placeholder=\"Nom\"/>\n                            <small className=\"form-text text-muted align-self-start\">Ton mot de passe</small>\n                            <input required value={this.state.password}\n                                   onChange={({target}) => this.setState({password: target.value})} type=\"password\"\n                                   className=\"form-control mb-2\"\n                                   placeholder=\"Mot de passe\"/>\n                            <button type=\"submit\" className=\"btn btn-primary\">Créer</button>\n                        </form>\n                    </div>\n                )}\n                {this.state.selectedTab === \"join_game\" && (\n                    <div className=\"create-game-input\">\n                        <h5>Rejoindre une partie</h5>\n                        <small className=\"form-text text-muted align-self-start\">Chercher une partie</small>\n                        <div className=\"input-group\">\n                            <input required value={this.state.searchGameName}\n                                   onChange={({target}) => this.setState({searchGameName: target.value})} type=\"text\"\n                                   className=\"form-control\"\n                                   placeholder=\"Search...\"\n                                   onKeyDown={this.keyPress}\n                            />\n                            <div className=\"input-group-append\">\n                                <button onClick={this.searchForGames} className=\"btn btn-outline-secondary\"\n                                        type=\"button\">\n                                    <i className=\"fas fa-search\"/>\n                                </button>\n                            </div>\n                        </div>\n                        {this.state.gamesFound.length > 0 && (\n                            <div className=\"mt-3\">\n                                <h5>Parties trouvées</h5>\n                                <ul className=\"list-group\">\n                                    {this.state.gamesFound.map((game, index) => {\n                                        return (\n                                            <li key={game._id}\n                                                onClick={() => {\n                                                    if (this.state.gamesFoundSelected !== index) {\n                                                        this.setState({\n                                                            gamesFoundSelected: index,\n                                                            joinGamePassword: \"\",\n                                                            joinGameUsername: \"\",\n                                                            joinGameUsernamePassword: \"\",\n                                                        })\n                                                    }\n                                                }}\n                                                className=\"cursor list-group-item\">\n                                                {this.state.gamesFoundSelected !== index && (\n                                                    <div className=\"d-flex justify-content-between align-items-center\">\n                                                        <div className=\"d-flex flex-column\">\n                                                            <div>{game.auth.game_name}</div>\n                                                            <small>Crée par: {game.player_info[0].username}</small>\n                                                        </div>\n                                                        <i className=\"fas fa-arrow-circle-right\"/>\n                                                    </div>\n                                                )}\n                                                {this.state.gamesFoundSelected === index && (\n                                                    <div className=\"\">\n                                                        {game.game_state === \"INVITING_PLAYERS\" && (\n                                                            <div>\n                                                                <small>La partie n'est pas commencé, vous pouvez rejoindre...\n                                                                </small>\n                                                            </div>\n                                                        )}\n                                                        <form onSubmit={this.joinGame}>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Nom de la partie\n                                                            </small>\n                                                            <input required value={game.auth.game_name}\n                                                                   type=\"text\"\n                                                                   readOnly\n                                                                   className=\"form-control\"\n                                                                   placeholder=\"Nom de la partie\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Mot de passe de la partie\n                                                            </small>\n                                                            <input required value={this.state.joinGamePassword}\n                                                                   onChange={({target}) => this.setState({joinGamePassword: target.value})}\n                                                                   type=\"password\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Mot de passe de la partie\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Ton nom\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsername}\n                                                                   onChange={({target}) => this.setState({joinGameUsername: target.value})}\n                                                                   type=\"text\" className=\"form-control mb-2\"\n                                                                   placeholder=\"Ton nom\"/>\n                                                            <small\n                                                                className=\"form-text text-muted align-self-start\">Ton mot de passe\n                                                            </small>\n                                                            <input required value={this.state.joinGameUsernamePassword}\n                                                                   onChange={({target}) => this.setState({joinGameUsernamePassword: target.value})}\n                                                                   type=\"password\"\n                                                                   className=\"form-control mb-2\"\n                                                                   placeholder=\"Mot de passe de la partie\"/>\n                                                            <button type=\"submit\" className=\"btn btn-primary\">Rejoindre\n                                                            </button>\n                                                        </form>\n                                                    </div>\n                                                )}\n                                            </li>\n                                        )\n                                    })}\n                                </ul>\n                            </div>\n                        )}\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(NewGame)));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\n\nclass Player extends Component {\n    render() {\n        return (\n            <div\n                className={`${this.props.moving ? \"player-moving\" : \"player\"} d-flex justify-content-center align-items-center`}\n                style={{backgroundColor: !this.props.moving ? this.props.store.game.player_info[this.props.playerNumber].color : null}}\n            >\n                {this.props.moving && (\n                    <i className=\"fas fa-circle\"/>\n                )}\n                {!this.props.moving && (\n                    <b>{this.props.playerNumber + 1}</b>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Player));\n","import React, {Component} from 'react';\nimport {observer, inject} from 'mobx-react';\nimport Player from './Player';\n\n// import tiles from '../../server/monopoly';\n\nclass Card extends Component {\n    render() {\n        const boxShadow = {};\n        if (this.props.right) {\n            boxShadow.boxShadow = `-5px 0px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.left) {\n            boxShadow.boxShadow = `5px 0px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.top) {\n            boxShadow.boxShadow = `0px 5px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        if (this.props.bottom) {\n            boxShadow.boxShadow = `0px -5px 0px 0px ${this.props.store.game.board[this.props.position].color}`\n        }\n        return (\n            <div\n                // onClick={() => this.props.store.devMoveHere(this.props.position)}\n                style={{\n                    backgroundImage: `url(${this.props.store.game.board[this.props.position].url})`,\n                    ...boxShadow,\n                }}\n                className={`game-tile d-flex flex-wrap align-content-between justify-content-between ${this.props.store.game.board[this.props.position].mortgaged ? \"grey-card\" : \"\"}`}\n                onMouseLeave={this.props.store.clearMousedOverTile}\n                onMouseEnter={() => this.props.store.setMousedOverTile(this.props.position)}\n            >\n                {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.position).map((player, i) => {\n                    return <Player playerNumber={player.id} key={i}/>\n                })}\n                {this.props.store.game.animated_players_move.moves.filter(tileIndex => tileIndex === this.props.position).map((tileIndex, i) => {\n                    return <Player key={i} moving={true}/>\n                })}\n                {this.props.right && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-right\"/>}\n                {this.props.right && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-column left-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"left-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {/*{this.props.bottom && this.props.store.game.board[this.props.position].color && (*/}\n                {/*<div style={{backgroundColor: this.props.store.game.board[this.props.position].color}}*/}\n                {/*className=\"d-flex flex-row top-tiles-color\"/>*/}\n                {/*)}*/}\n                {this.props.bottom && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-bottom\"/>}\n                {this.props.bottom && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-row top-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"top-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {this.props.left && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-left\"/>}\n                {this.props.left && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-column right-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"right-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n                {this.props.top && this.props.store.game.board[this.props.position].owned && <div\n                    style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                    className=\"owned-square-top\"/>}\n                {this.props.top && this.props.store.game.board[this.props.position].owned && (\n                    <div className=\"d-flex flex-row bottom-tiles-upgrade-bar\">\n                        {this.props.store.game.board[this.props.position].upgrades > 0 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 1 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 2 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 3 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                        {this.props.store.game.board[this.props.position].upgrades > 4 &&\n                        <div\n                            style={{backgroundColor: this.props.store.game.player_info[this.props.store.game.board[this.props.position].player].color}}\n                            className=\"bottom-tiles-upgrade-bar-component\"\n                        />\n                        }\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Card));\n","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass NavTabs extends Component {\n    render() {\n        return (\n            <ul className=\"nav nav-tabs\">\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"my_info\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"my_info\" ? \"active\" : \"\"}`}>Mes infos\n                    </div>\n                </li>\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"my_properties\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"my_properties\" ? \"active\" : \"\"}`}>Mes Propriétés\n                    </div>\n                </li>\n                <li className=\"nav-item cursor\" onClick={() => this.props.selectTab({selectedTab: \"trades\"})}>\n                    <div className={`nav-link ${this.props.selectedTab === \"trades\" ? \"active\" : \"\"}`}>Mes échanges\n                    </div>\n                </li>\n                <li className=\"nav-item dropdown cursor\"\n                    onMouseEnter={() => this.props.changeDropDown({dropdownExpanded: true})}\n                    onMouseLeave={() => this.props.changeDropDown({dropdownExpanded: false})}\n                >\n                    <div className=\"nav-link dropdown-toggle\" data-toggle=\"dropdown\" role=\"button\"\n                         aria-haspopup=\"true\" aria-expanded=\"false\">Joueurs\n                    </div>\n                    <div className={`dropdown-menu ${this.props.dropdownExpanded ? \"show\" : \"\"}`}>\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length === 1 && (\n                            <div className=\"dropdown-item\">Pas de joueurs</div>\n                        )}\n                        {this.props.store.game.player_info.filter(player => player.state !== \"OUT\").length > 1 && this.props.store.game.player_info.filter(player => player.state !== \"OUT\").map((player, index) => ({\n                            ...player,\n                            index\n                        })).filter(player => player.username !== this.props.store.gameAuthInfo.username).map(player =>\n                            <div onClick={() => this.props.selectTab({\n                                selectedTab: \"player_info\",\n                                selectedPlayer: player.id,\n                                dropdownExpanded: false,\n                            })} key={player.id} className=\"dropdown-item\">{player.username} - ({player.id + 1})</div>\n                        )}\n                    </div>\n                </li>\n            </ul>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(NavTabs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MyInfoTab extends Component {\n    render() {\n        const [diceOne, diceTwo] = this.props.store.getPlayer.dice;\n        return (\n            <div className=\"info-tab d-flex flex-column\">\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Nom: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.getPlayer.username} - ({this.props.store.playerIndex + 1})</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Case: </span>\n                            <span className=\"flex-fill\">{this.props.store.playerTile.name}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Sortie Prison: </span>\n                            <span className=\"flex-fill\">Non</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Argent: </span>\n                            <span className=\"flex-fill\">${this.props.store.getPlayer.money}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Net: </span>\n                            <span className=\"flex-fill\">${this.props.store.netWorth}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Liquide: </span>\n                            <span className=\"flex-fill\">${this.props.store.liquidWorth}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex flex-row justify-content-center align-items-center dice-content\">\n                    {diceOne === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceOne === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceOne === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceOne === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceOne === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceOne === 6 && <i className=\"fas fa-dice-six\"/>}\n                    <div className=\"space-between-dice\"/>\n                    {diceTwo === 1 && <i className=\"fas fa-dice-one\"/>}\n                    {diceTwo === 2 && <i className=\"fas fa-dice-two\"/>}\n                    {diceTwo === 3 && <i className=\"fas fa-dice-three\"/>}\n                    {diceTwo === 4 && <i className=\"fas fa-dice-four\"/>}\n                    {diceTwo === 5 && <i className=\"fas fa-dice-five\"/>}\n                    {diceTwo === 6 && <i className=\"fas fa-dice-six\"/>}\n\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default inject(\"store\")(observer(MyInfoTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MyPropertiesTab extends Component {\n    render() {\n        return (\n\n            <div className=\"properties-tab d-flex flex-row justify-content-around my-properties-table\">\n                <table className=\"table\">\n                    <thead>\n                    <tr>\n                        <th/>\n                        <th className=\"text-center\" scope=\"col\">Nom</th>\n                        <th className=\"text-center\" scope=\"col\">Loyer</th>\n                        <th className=\"text-center\" scope=\"col\">Améliorations</th>\n                        <th className=\"text-center\" scope=\"col\">Hypothéqué?</th>\n                    </tr>\n                    </thead>\n                    <tbody className=\"\">\n                    {this.props.store.playersProperties(this.props.store.playerIndex).map((property, i) => {\n                        return (\n                            <tr key={i}>\n                                <th scope=\"row\">\n                                    <div className=\"my-properties-pic\" style={{\n                                        backgroundImage: `url(${property.url})`,\n                                    }}/>\n                                </th>\n                                <td className=\"text-center\">{property.name}</td>\n                                <td className=\"text-center\">{property.calculatedRent === parseInt(property.calculatedRent, 10) ? `$${property.calculatedRent}` : property.calculatedRent}</td>\n                                {property.upgrade ?\n                                    <td className=\"text-center upgrade-col\">\n                                        <div className=\"d-flex upgrade-bar\">\n                                            <div\n                                                className={`bar-component bar-component-left ${property.upgrades > 0 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 1 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 2 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 3 ? \"bar-component-filled\" : \"\"}`}/>\n                                            <div\n                                                className={`bar-component ${property.upgrades > 4 ? \"bar-component-filled\" : \"\"}`}/>\n                                        </div>\n                                        <div className=\"d-flex justify-content-center\">\n                                            <button\n                                                disabled={!property.canUpgrade}\n                                                className='btn btn-sm shadow-none'\n                                                style={{backgroundColor: \"transparent\"}}\n                                                onClick={() => this.props.store.upgradeProperty(property.index)}\n                                            >\n                                                <i className=\"far fa-arrow-alt-circle-up mr-2 cursor upgrade-prop\"/>\n                                            </button>\n                                            <button\n                                                disabled={!property.canDowngrade}\n                                                className='btn btn-sm shadow-none'\n                                                style={{backgroundColor: \"transparent\"}}\n                                                onClick={() => this.props.store.downgradeProperty(property.index)}\n                                            >\n                                                <i className=\"far fa-arrow-alt-circle-down ml-2 cursor upgrade-prop\"/>\n                                            </button>\n                                        </div>\n                                    </td>\n                                    :\n                                    <td/>\n                                }\n                                <td className=\"text-center\">\n                                    <input\n                                        disabled={(property.mortgaged && this.props.store.getPlayer.money - property.cost / 2 < 0) || this.props.store.getPlayer.state === \"NOT_TURN\" || !this.props.store.game.board.filter(el => el.group === property.group).every(el => el.upgrades === 0)}\n                                        onChange={() => this.props.store.mortgageProperty(property.index)}\n                                        checked={property.mortgaged} type=\"checkbox\" className=\"double\"\n                                    /> {property.mortgaged ? \"(-)\" : \"(+)\"}{property.cost / 2}\n                                </td>\n                            </tr>\n                        )\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MyPropertiesTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Logs extends Component {\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    componentDidMount() {\n        const div = this.refs.logs;\n        div.scrollTop = div.scrollHeight;\n    }\n\n    render() {\n        return (\n            <div ref=\"logs\" className=\"logs-tab\">\n                {this.props.store.game.logs.length === 0 && (\n                    <div>Pas d'actions...</div>\n                )}\n                {this.props.store.game.logs.map((log, i) => {\n                    let date = new Date(log.time).toLocaleString();\n                    date = date.slice(0, -6) + date.slice(-3, date.length);\n                    return (\n                        <div key={i}>\n                            {date}: {log.log}\n                        </div>\n                    )\n                })}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Logs));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass Actions extends Component {\n    render() {\n        if (this.props.store.game.game_state === \"ENDED\") {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    La partie est finie\n                </div>\n            )\n        }\n        if (this.props.store.game.game_state === \"INVITING_PLAYERS\" && this.props.store.playerIndex === 0) {\n            return (\n                <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                    <button type=\"button\"\n                            className=\"btn btn-primary\"\n                            onClick={this.props.store.startGame}>\n                        Commencer\n                    </button>\n                </div>\n            )\n        }\n        return (\n            <div className=\"actions-tab d-flex flex-row justify-content-center align-items-center\">\n                {this.props.store.playerState !== \"OUT\" && this.props.store.playerState === \"START_TURN\" && this.props.store.getPlayer.jail_turns < 3 && (\n                    <button type=\"button\" onClick={this.props.store.startTurn}\n                            className=\"btn btn-primary\">Jeter les dés\n                    </button>\n                )}\n                {this.props.store.playerState === \"NOT_TURN\" && (\n                    <div>Tour de {this.props.store.currentPlayerTurn.username}.</div>\n                )}\n                {this.props.store.playerState === \"UTILITY_CHANCE_CARD\" && (\n                    <button type=\"button\" onClick={this.props.store.utilityChanceCardPayment}\n                            className=\"btn btn-primary\">Lance pour voir combien tu payes\n                    </button>\n                )}\n                {this.props.store.getPlayer.jail_state && this.props.store.playerState === \"START_TURN\" && (\n                    <button type=\"button\" onClick={this.props.store.payOutOfJail}\n                            className=\"btn btn-primary\">Payer 50\n                    </button>\n                )}\n                {(this.props.store.playerState === \"BUY_TILE\" || this.props.store.playerState === \"BUY_TILE_NO_MONEY\") && (\n                    <div className=\"accept-reject-tile-buy-div d-flex justify-content-center\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <button disabled={this.props.store.playerState === \"BUY_TILE_NO_MONEY\"} type=\"button\"\n                                    className=\"btn btn-primary buy-tile-button text-center\"\n                                    onClick={this.props.store.buyTile}>\n                                Acheter\n                            </button>\n                            <button type=\"button\" className=\"btn btn-primary reject-buy-tile-button\"\n                                    onClick={this.props.store.rejectBuyTile}>\n                                Non\n                            </button>\n                        </div>\n                    </div>\n                )}\n                {this.props.store.playerState === \"INCOME_TAX\" && (\n                    <div>\n                        <button type=\"button\" className=\"btn btn-primary\" onClick={this.props.store.payPercentTax}>Payer\n                            10%\n                        </button>\n                        <button type=\"button\" className=\"btn btn-primary pay-flat-tax-button\"\n                                onClick={this.props.store.payFlatTax}>Payer\n                            $200\n                        </button>\n                    </div>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && (\n                    <button disabled={this.props.store.getPlayer.money < 0} type=\"button\"\n                            onClick={this.props.store.endTurn}\n                            className=\"btn btn-primary\">Fin du tour\n                    </button>\n                )}\n                {this.props.store.playerState === \"END_OF_TURN\" && this.props.store.getPlayer.money < 0 && (\n                    <button type=\"button\" onClick={this.props.store.giveUp}\n                            className=\"btn btn-primary\">Abandonner\n                    </button>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(Actions));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass PlayersTab extends Component {\n    render() {\n        return (\n            <div>\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Nom: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.player_info[this.props.player].username} - ({this.props.player + 1})</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Case: </span>\n                            <span\n                                className=\"flex-fill\">{this.props.store.game.board[this.props.store.game.player_info[this.props.player].position].name}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Sortie prison: </span>\n                            <span className=\"flex-fill\">Non</span>\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Argent: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.game.player_info[this.props.player].money}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Net: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.netWorthOfPlayer(this.props.player)}</span>\n                        </div>\n                        <div className=\"d-flex flex-row info-tab-row\">\n                            <span className=\"info-tab-label\">Liquide: </span>\n                            <span\n                                className=\"flex-fill\">${this.props.store.liquidWorthofPlayer(this.props.player)}</span>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"d-flex justify-content-center\">\n                    <button onClick={() => this.props.selectTab({selectedTab: \"player_trade\"})} type=\"button\"\n                            className=\"btn btn-primary\"\n                            disabled={this.props.store.getPlayer.state === \"NOT_TURN\"}>\n                        Échange\n                    </button>\n                </div>\n                <div\n                    className=\"other-players-properties-tab d-flex flex-row justify-content-around other-players-properties-table\">\n                    <table className=\"table\">\n                        <thead>\n                        <tr>\n                            <th/>\n                            <th className=\"text-center\" scope=\"col\">Nom</th>\n                            <th className=\"text-center\" scope=\"col\">Loyer</th>\n                            <th className=\"text-center\" scope=\"col\">Améliorations</th>\n                            <th className=\"text-center\" scope=\"col\">Hypothéqué?</th>\n                        </tr>\n                        </thead>\n                        <tbody className=\"\">\n                        {this.props.store.playersProperties(this.props.player).map((property, i) => {\n                            return (\n                                <tr key={i}>\n                                    <th scope=\"row\">\n                                        <div className=\"my-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                    </th>\n                                    <td className=\"text-center\">{property.name}</td>\n                                    <td className=\"text-center\">{property.calculatedRent === parseInt(property.calculatedRent, 10) ? `$${property.calculatedRent}` : property.calculatedRent}</td>\n                                    {property.upgrade ?\n                                        <td className=\"text-center upgrade-col\">\n                                            <div className=\"d-flex upgrade-bar-other-player justify-content-center\">\n                                                <div\n                                                    className={`bar-component bar-component-left ${property.upgrades > 0 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 1 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 2 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 3 ? \"bar-component-filled\" : \"\"}`}/>\n                                                <div\n                                                    className={`bar-component ${property.upgrades > 4 ? \"bar-component-filled\" : \"\"}`}/>\n                                            </div>\n                                        </td>\n                                        :\n                                        <td/>\n                                    }\n                                    <td className=\"text-center\">\n                                        <input\n                                            disabled\n                                            checked={property.mortgaged} type=\"checkbox\" className=\"double\"\n                                        />\n                                    </td>\n                                </tr>\n                            )\n                        })}\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(PlayersTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass TradeTab extends Component {\n    proposeTrade = () => {\n        this.props.selectTab({selectedTab: \"my_info\"});\n        this.props.store.createTrade(this.props.player, this.props.store.currentProposingTrade.givenProperties, this.props.store.currentProposingTrade.takenProperties, this.props.store.currentProposingTrade.moneyGiven, this.props.store.currentProposingTrade.moneyTaken);\n        this.props.store.refreshCurrentProposingTrade();\n    };\n\n    render() {\n        const yourCash = this.props.store.getPlayer.money;\n        const playersCash = this.props.store.game.player_info[this.props.player].money;\n        const playerIndex = this.props.store.playerIndex;\n        return (\n            <div className=\"d-flex flex-column text-center\">\n                <div className=\"d-flex flex-row justify-content-around main-trade-content\">\n                    <div className=\"d-flex flex-column text-center\">\n                        <div className=\"trade-money-label\">\n                            <u>Vous donnez {this.props.store.game.player_info[this.props.player].username}</u>\n                        </div>\n                        <div className=\"text-left\">\n                            Votre argent: ${yourCash}\n                        </div>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">$</span>\n                            </div>\n                            <input onChange={({target}) => {\n                                if (target.value > yourCash)\n                                    target.value = yourCash;\n                                this.props.store.setCurrentProposingTrade(\"moneyGiven\", target.value);\n                            }}\n                                   value={this.props.store.currentProposingTrade.moneyGiven === 0 ? \"\" : this.props.store.currentProposingTrade.moneyGiven}\n                                   type=\"number\"\n                                   min={0}\n                                   className=\"form-control\"\n                                   placeholder=\"Argent\"/>\n                        </div>\n                        <div className=\"player-properties-trade\">\n                            {this.props.store.playersProperties(playerIndex).filter(property => !property.hasHousesOnAny).map((property, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                        <div className=\"trade-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                        <div className=\"trade-prop-name\">{property.name}</div>\n                                        <div>\n                                            <input\n                                                onChange={() => {\n                                                    const index = this.props.store.currentProposingTrade.givenProperties.findIndex(el => el === property.index);\n                                                    if (index === -1) {\n                                                        this.props.store.setCurrentProposingTrade(\"givenProperties\", [...this.props.store.currentProposingTrade.givenProperties, property.index]);\n                                                    } else {\n                                                        this.props.store.setCurrentProposingTrade(\"givenProperties\", [...this.props.store.currentProposingTrade.givenProperties.slice(0, index), ...this.props.store.currentProposingTrade.givenProperties.slice(index + 1)]);\n                                                    }\n                                                }}\n                                                type=\"checkbox\" className=\"double\"/>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                    <div className=\"d-flex flex-column text-center\">\n                        <div className=\"trade-money-label\">\n                            <u>Vous obtenez de {this.props.store.game.player_info[this.props.player].username}</u>\n                        </div>\n                        <div className=\"text-left\">\n                            Son argent: ${playersCash}\n                        </div>\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <span className=\"input-group-text\">$</span>\n                            </div>\n                            <input onChange={({target}) => {\n                                if (target.value > playersCash)\n                                    target.value = playersCash;\n                                this.props.store.setCurrentProposingTrade(\"moneyTaken\", target.value);\n                            }}\n                                   value={this.props.store.currentProposingTrade.moneyTaken === 0 ? \"\" : this.props.store.currentProposingTrade.moneyTaken}\n                                   type=\"number\"\n                                   min={0}\n                                   className=\"form-control\"\n                                   placeholder=\"Argent\"/>\n                        </div>\n                        <div className=\"player-properties-trade\">\n                            {this.props.store.playersProperties(this.props.player).map((property, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                        <div className=\"trade-properties-pic\" style={{\n                                            backgroundImage: `url(${property.url})`,\n                                        }}/>\n                                        <div className=\"trade-prop-name\">{property.name}</div>\n                                        <div>\n                                            <input\n                                                onChange={() => {\n                                                    const index = this.props.store.currentProposingTrade.takenProperties.findIndex(el => el === property.index);\n                                                    if (index === -1) {\n                                                        this.props.store.setCurrentProposingTrade(\"takenProperties\", [...this.props.store.currentProposingTrade.takenProperties, property.index]);\n                                                    } else {\n                                                        this.props.store.setCurrentProposingTrade(\"takenProperties\", [...this.props.store.currentProposingTrade.takenProperties.slice(0, index), ...this.props.store.currentProposingTrade.takenProperties.slice(index + 1)]);\n                                                    }\n                                                }}\n                                                type=\"checkbox\" className=\"double\"/>\n                                        </div>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <button\n                        disabled={(this.props.store.currentProposingTrade.moneyTaken === 0 || this.props.store.currentProposingTrade.moneyTaken === \"0\") && (this.props.store.currentProposingTrade.moneyGiven === 0 || this.props.store.currentProposingTrade.moneyGiven === \"0\") && this.props.store.currentProposingTrade.takenProperties.length === 0 && this.props.store.currentProposingTrade.givenProperties.length === 0}\n                        onClick={this.proposeTrade} type=\"button\"\n                        className=\"btn btn-primary\">Proposer un échange\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(TradeTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass TradesTab extends Component {\n    state = {\n        selectedTrade: 0,\n    };\n\n    componentDidMount() {\n        if (this.props.store.game.player_info && this.props.store.game.trades.length > 0) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            this.setState({selectedTrade: firstIndex});\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevState.selectedTrade === -1) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            if (firstIndex !== -1) {\n                this.setState({selectedTrade: firstIndex});\n            }\n        }\n    }\n\n\n    render() {\n        if (this.props.store.game.player_info && this.props.store.game.trades.length > 0) {\n            const playerIndex = this.props.store.playerIndex;\n            const firstIndex = this.props.store.game.trades.findIndex(el => {\n                return (el.initiating_player === playerIndex || el.trading_player === playerIndex) && el.state === \"PROPOSED\";\n            });\n            if (firstIndex === -1 || this.state.selectedTrade === -1) {\n                return <div className=\"text-center\">Pas d'échanges</div>\n            }\n            const initiatingPlayer = this.props.store.game.player_info[this.props.store.game.trades[this.state.selectedTrade].initiating_player];\n            const tradingPlayer = this.props.store.game.player_info[this.props.store.game.trades[this.state.selectedTrade].trading_player];\n            const areYouInitiating = this.props.store.game.trades[this.state.selectedTrade].initiating_player === playerIndex;\n            const rightProperties = areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].taken_properties : this.props.store.game.trades[this.state.selectedTrade].given_properties;\n            const leftProperties = areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_properties : this.props.store.game.trades[this.state.selectedTrade].taken_properties;\n            const initiatingPlayerHasAllProperties = this.props.store.game.trades[this.state.selectedTrade].given_properties.every(index => {\n                const property = this.props.store.game.board[index];\n                const hasHousesOnAny = this.props.store.game.board.filter(el => el.group === this.props.store.game.board[index].group && el.upgrade && el.upgrades > 0).length > 0;\n                return property.player === this.props.store.game.trades[this.state.selectedTrade].initiating_player && !hasHousesOnAny;\n            });\n            const tradingPlayerHasAllProperties = this.props.store.game.trades[this.state.selectedTrade].taken_properties.every(index => {\n                const property = this.props.store.game.board[index];\n                const hasHousesOnAny = this.props.store.game.board.filter(el => el.group === this.props.store.game.board[index].group && el.upgrade && el.upgrades > 0).length > 0;\n                return property.player === this.props.store.game.trades[this.state.selectedTrade].trading_player && !hasHousesOnAny;\n            });\n            return (\n                <div className=\"d-flex flex-row justify-content-around\">\n                    <div className=\"d-flex flex-column text-center\">\n                        <u>Échanges:</u>\n                        <ul ref=\"trades\" className=\"list-group pending-trades\">\n                            {this.props.store.game.trades.map((trade, i) => ({\n                                ...trade,\n                                index: i\n                            })).filter(trade => trade.state === \"PROPOSED\" && (trade.initiating_player === playerIndex || trade.trading_player === playerIndex)).map((trade, i) => {\n                                return (\n                                    <li key={i}\n                                        onClick={() => this.setState({selectedTrade: trade.index})}\n                                        className={`list-group-item list-group-item-action ${trade.index === this.state.selectedTrade ? \"active\" : \"\"}`}>\n                                        De {this.props.store.game.player_info[trade.initiating_player].username}\n                                    </li>\n                                )\n                            })}\n                        </ul>\n                    </div>\n                    <div className=\"d-flex flex-column\">\n                        <div className=\"d-flex flex-column justify-content-center align-items-center\">\n                            <div className=\"d-flex flex-row justify-content-around main-trade-content\">\n                                <div className=\"d-flex flex-column text-center trade-view-left\">\n                                    <div className=\"trade-money-label\">\n                                        <u>{areYouInitiating ? `You give to ${tradingPlayer.username}` : `You give to ${initiatingPlayer.username}`}</u>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">$</span>\n                                        </div>\n                                        <input type=\"number\"\n                                               readOnly\n                                               value={areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_money : this.props.store.game.trades[this.state.selectedTrade].taken_money}\n                                               className=\"form-control\"\n                                               placeholder=\"Trade Money\"/>\n                                    </div>\n                                    <div className=\"player-properties-trade\">\n                                        {leftProperties.map((i) => {\n                                            const property = this.props.store.game.board[i];\n                                            return (\n                                                <div key={i}\n                                                     className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                                    <div className=\"trade-properties-pic\" style={{\n                                                        backgroundImage: `url(${property.url})`,\n                                                    }}/>\n                                                    <div className=\"trade-prop-name\">{property.name}</div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                                <div className=\"d-flex flex-column text-center trade-view-right\">\n                                    <div className=\"trade-money-label\">\n                                        <u>{areYouInitiating ? `You get from ${tradingPlayer.username}` : `You get from ${initiatingPlayer.username}`}</u>\n                                    </div>\n                                    <div className=\"input-group\">\n                                        <div className=\"input-group-prepend\">\n                                            <span className=\"input-group-text\">$</span>\n                                        </div>\n                                        <input type=\"number\"\n                                               readOnly\n                                               value={!areYouInitiating ? this.props.store.game.trades[this.state.selectedTrade].given_money : this.props.store.game.trades[this.state.selectedTrade].taken_money}\n                                               className=\"form-control\"\n                                               placeholder=\"Trade Money\"/>\n                                    </div>\n                                    <div className=\"player-properties-trade\">\n                                        {rightProperties.map((i) => {\n                                            const property = this.props.store.game.board[i];\n                                            return (\n                                                <div key={i}\n                                                     className=\"trade-row d-flex flex-row justify-content-between align-items-center\">\n                                                    <div className=\"trade-properties-pic\" style={{\n                                                        backgroundImage: `url(${property.url})`,\n                                                    }}/>\n                                                    <div className=\"trade-prop-name\">{property.name}</div>\n                                                </div>\n                                            )\n                                        })}\n                                    </div>\n                                </div>\n                            </div>\n                            <div>\n                                {playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player &&\n                                (\n                                    <button\n                                        disabled={this.props.store.game.player_info[playerIndex].state === \"NOT_TURN\" || !tradingPlayerHasAllProperties || !initiatingPlayerHasAllProperties || tradingPlayer.money < this.props.store.game.trades[this.state.selectedTrade].taken_money || initiatingPlayer.money < this.props.store.game.trades[this.state.selectedTrade].given_money}\n                                        onClick={() => {\n                                            this.props.store.acceptTrade(this.state.selectedTrade);\n                                            this.setState({selectedTrade: firstIndex});\n                                            this.refs.trades.scrollTop = 0;\n                                        }} type=\"button\"\n                                        className=\"btn btn-primary\"\n                                        style={{marginRight: 10}}\n                                    >Accepter\n                                    </button>\n                                )}\n                                <button\n                                    disabled={this.props.store.game.player_info[playerIndex].state === \"NOT_TURN\"}\n                                    onClick={() => {\n                                        playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player ? this.props.store.rejectTrade(this.state.selectedTrade) : this.props.store.cancelTrade(this.state.selectedTrade);\n                                        this.setState({selectedTrade: firstIndex});\n                                        this.refs.trades.scrollTop = 0;\n                                    }}\n                                    type=\"button\"\n                                    className=\"btn btn-primary\">{`${playerIndex !== this.props.store.game.trades[this.state.selectedTrade].initiating_player ? \"Reject Trade\" : \"Cancel Trade\"}`}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            );\n        } else {\n            return (<div className=\"text-center\">Pas d'échanges</div>);\n        }\n    }\n}\n\nexport default inject(\"store\")(observer(TradesTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\n\nclass MousedOverTileTab extends Component {\n    state = {};\n\n    render() {\n        const tile = this.props.store.game.board[this.props.store.mousedOverTile];\n        const playersOnTile = this.props.store.game.player_info.map((player, i) => ({\n            ...player,\n            index: i\n        })).filter(player => player.state !== \"OUT\").filter(player => player.position === this.props.store.mousedOverTile);\n        let relatedTiles = [];\n        if (tile.type === \"rr\" || tile.type === \"utility\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.type === this.props.store.game.board[this.props.store.mousedOverTile].type && i !== this.props.store.mousedOverTile);\n        } else if (tile.type === \"property\") {\n            relatedTiles = this.props.store.game.board.filter((tile, i) => tile.group === this.props.store.game.board[this.props.store.mousedOverTile].group && i !== this.props.store.mousedOverTile);\n        }\n        return (\n            <div className=\"d-flex flex-column align-items-center justify-content-center tile-info-container\">\n                <div className=\"d-flex flex-row\">\n                    <div className=\"d-flex flex-column align-items-center justify-content-center\">\n                        <div className=\"tile-info-image-div\" style={{\n                            backgroundImage: `url(${tile.url})`,\n                        }}/>\n                        <div className=\"tile-info-name\">\n                            {tile.name}\n                        </div>\n                    </div>\n                    {(tile.type === \"property\" || tile.type === \"rr\" || tile.type === \"utility\") && (\n                        <div className=\"d-flex flex-row align-items-center justify-content-center\">\n                            {relatedTiles.map((relTile, i) => {\n                                return (\n                                    <div key={i}\n                                         className=\"d-flex flex-column align-items-center justify-content-center\">\n                                        <div className=\"rel-tile-info-image-div\" style={{\n                                            backgroundImage: `url(${relTile.url})`,\n                                        }}/>\n                                    </div>\n                                )\n                            })}\n                        </div>\n                    )}\n                </div>\n                {(tile.type === \"chance\" || tile.type === \"chest\") && (\n                    <div>\n                        Atteri ici ou pioche une carte\n                    </div>\n                )}\n                {(tile.type === \"go\") && (\n                    <div>\n                        Passe ou atteri et gagne $200.\n                    </div>\n                )}\n                {(tile.type === \"lux-tax\") && (\n                    <div>\n                        Paye $75.\n                    </div>\n                )}\n                {(tile.type === \"income-tax\") && (\n                    <div>\n                        Paye $200 ou 10% de ton revenu net\n                    </div>\n                )}\n                {(tile.type === \"property\" || tile.type === \"utility\" || tile.type === \"rr\") && (\n                    <div className=\"d-flex flex-row tile-info-property justify-content-between\">\n                        <div className=\"d-flex flex-column tile-info-rents\">\n                            <div className=\"d-flex justify-content-between\">\n                                <div>Prix:</div>\n                                <div>${tile.cost}</div>\n                            </div>\n                            {tile.owned && (\n                                <div className=\"d-flex justify-content-between\">\n                                    <div>Loyer actuel:</div>\n                                    <div>${this.props.store.calcRentCostTile(this.props.store.mousedOverTile, true)}</div>\n                                </div>\n                            )}\n                            <div className=\"d-flex justify-content-between\">\n                                <div>Loyer de base:</div>\n                                <div>${this.props.store.calcRentCostTile(this.props.store.mousedOverTile, true)}</div>\n                            </div>\n                        </div>\n                        <div className=\"d-flex flex-column justify-content-between tile-info-upgrades\">\n                            {tile.type === \"property\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Coût de financement:</div>\n                                        <div>${tile.upgrade}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>1st Round:</div>\n                                        <div>${tile.rent[1]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>2nd Round:</div>\n                                        <div>${tile.rent[2]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>3rd Round:</div>\n                                        <div>${tile.rent[3]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>4th Round:</div>\n                                        <div>${tile.rent[4]}</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>5th Round:</div>\n                                        <div>${tile.rent[5]}</div>\n                                    </div>\n                                </div>\n                            )}\n                            {tile.type === \"rr\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Un propriétaire:</div>\n                                        <div>$25</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Deux propriétaires:</div>\n                                        <div>$50</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Trois propriétaires:</div>\n                                        <div>$100</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Quatre propriétaires:</div>\n                                        <div>$200</div>\n                                    </div>\n                                </div>\n                            )}\n                            {tile.type === \"utility\" && (\n                                <div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Un propriétaire:</div>\n                                        <div>$Dé×4</div>\n                                    </div>\n                                    <div className=\"d-flex justify-content-between\">\n                                        <div>Deux propriétaires:</div>\n                                        <div>$Dé×10</div>\n                                    </div>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                )}\n                <div className=\"d-flex flex-column mt-3 players-on-tile\">\n                    {playersOnTile.length > 0 ?\n                        <div>\n                            <span>Joueurs sur la case:</span>\n                            <ul>\n                                {playersOnTile.map((player, i) => {\n                                    return <li key={i}>{player.username} - ({player.index + 1})</li>\n                                })}\n                            </ul>\n                        </div>\n                        :\n                        <span>Pas de joueur ici.</span>\n                    }\n                    {tile.owned ?\n                        <div>\n                            <span>Appartient à: {this.props.store.game.player_info[tile.player].username}</span>\n                        </div>\n                        :\n                        null\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MousedOverTileTab));","import React, {Component} from 'react';\nimport {inject, observer} from \"mobx-react\";\nimport NavTabs from './NavTabs';\nimport MyInfoTab from './MyInfoTab';\nimport MyPropertiesTab from './MyPropertiesTab';\nimport Logs from './Logs';\nimport Actions from './Actions';\nimport PlayersTab from './PlayersTab';\nimport TradeTab from './TradeTab';\nimport TradesTab from './TradesTab';\nimport MousedOverTileTab from './MousedOverTileTab';\n\nclass MainView extends Component {\n    state = {\n        dropdownExpanded: false,\n        selectedTab: \"my_info\",\n        selectedPlayer: 1,\n    };\n\n    selectTab = (state) => {\n        this.setState(state);\n    };\n    changeDropDown = (state) => {\n        this.setState(state);\n    };\n\n    render() {\n        return (\n            <div className=\"main-view\">\n                {this.props.store.game && this.props.store.game.game_state !== \"NOT_STARTED\" &&\n                <div className=\"main-view-content\">\n                    {this.props.store.mousedOverTile !== null && (\n                        <MousedOverTileTab/>\n                    )}\n                    {this.props.store.mousedOverTile === null && (\n                        <>\n                            <NavTabs\n                                dropdownExpanded={this.state.dropdownExpanded}\n                                changeDropDown={this.changeDropDown}\n                                selectTab={this.selectTab}\n                                selectedTab={this.state.selectedTab}\n                            />\n                            {this.state.selectedTab === \"my_info\" && (\n                                <>\n                                    <MyInfoTab/>\n                                    <Actions/>\n                                    <Logs/>\n                                </>\n                            )}\n                            {this.state.selectedTab === \"my_properties\" && (\n                                <MyPropertiesTab/>\n                            )}\n                            {this.state.selectedTab === \"player_info\" && (\n                                <PlayersTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                            {this.state.selectedTab === \"player_trade\" && (\n                                <TradeTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                            {this.state.selectedTab === \"trades\" && (\n                                <TradesTab selectTab={this.selectTab} player={this.state.selectedPlayer}/>\n                            )}\n                        </>\n                    )}\n\n                </div>\n                }\n            </div>\n        );\n    }\n}\n\nexport default inject(\"store\")(observer(MainView));","import React, {Component} from 'react';\nimport Card from \"./Card\";\nimport MainView from \"./middleScreen/MainView\";\nimport \"./App.css\";\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\n\nclass Board extends Component {\n    componentDidMount() {\n        let gameInfo = localStorage.getItem(\"previous_game\");\n        if (!gameInfo) {\n            this.props.history.push(\"/start\");\n            return;\n        }\n        gameInfo = JSON.parse(gameInfo);\n        this.props.store.setGameAuthInfo(gameInfo);\n        this.props.store.connectToGame();\n    }\n\n    render() {\n        return (\n            this.props.store.inGame ? <div\n                    style={{outline: `2px solid ${this.props.store.getPlayer.state !== \"NOT_TURN\" ? \"#61c86a\" : \"#c8464b\"}`}}\n                    className=\"d-flex flex-column main-box\">\n                    <MainView/>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={20}/>\n                        <Card bottom={true} position={21}/>\n                        <div/>\n                        <Card bottom={true} position={22}/>\n                        <div/>\n                        <Card bottom={true} position={23}/>\n                        <Card bottom={true} position={24}/>\n                        <Card bottom={true} position={25}/>\n                        <Card bottom={true} position={26}/>\n                        <Card bottom={true} position={27}/>\n                        <Card bottom={true} position={28}/>\n                        <Card bottom={true} position={29}/>\n                        <Card position={30}/>\n                    </div>\n                    <div className=\"main-row-here d-flex flex-row justify-content-between\">\n                        <Card right={true} position={19}/>\n                        <Card left={true} position={31}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={18}/>\n                        <Card left={true} position={32}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={17}/>\n                        <Card left={true} position={33}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={16}/>\n                        <Card left={true} position={34}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={15}/>\n                        <Card left={true} position={35}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={14}/>\n                        <Card left={true} position={36}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={13}/>\n                        <Card left={true} position={37}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={12}/>\n                        <Card left={true} position={38}/>\n                    </div>\n                    <div className=\"d-flex flex-row justify-content-between\">\n                        <Card right={true} position={11}/>\n                        <Card left={true} position={39}/>\n                    </div>\n                    <div className=\"d-flex flex-row\">\n                        <Card position={10}/>\n                        <Card top={true} position={9}/>\n                        <Card top={true} position={8}/>\n                        <Card top={true} position={7}/>\n                        <Card top={true} position={6}/>\n                        <Card top={true} position={5}/>\n                        <Card top={true} position={4}/>\n                        <Card top={true} position={3}/>\n                        <Card top={true} position={2}/>\n                        <Card top={true} position={1}/>\n                        <Card position={0}/>\n                    </div>\n                </div>\n                :\n                <div style={{margin: \"auto\", textAlign: \"center\", fontSize: 80}}><i\n                    className=\"fas fa-spinner  fa-spin\"/></div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(Board)));\n","import React, {Component} from 'react';\nimport \"./App.css\";\nimport {inject, observer} from \"mobx-react\";\nimport {withRouter} from 'react-router-dom';\nimport Board from \"./Board\"\n\n\nclass MainApp extends Component {\n    state = {\n        selectedTab: this.props.history.location.pathname\n    };\n\n    render() {\n        return (\n            <div className=\"main d-flex flex-column\">\n                <Board/>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(inject(\"store\")(observer(MainApp)));\n","import React, {Component} from 'react';\nimport NewGame from \"./NewGame\";\nimport MainApp from \"./MainApp\";\nimport {Switch, Route, Redirect} from 'react-router-dom';\n\nconst RedirectHome = () => {\n    return (\n        <Redirect to=\"/start\"/>\n    )\n};\n\nclass App extends Component {\n    render() {\n        return (\n            <Switch>\n                <Route exact path=\"/play-game\" component={MainApp}/>\n                <Route exact path=\"/start\" component={NewGame}/>\n                <Route path=\"/\" component={RedirectHome}/>\n            </Switch>\n        );\n    }\n}\n\nexport default App;\n","import {decorate, configure, observable, action, computed, runInAction} from 'mobx'\n// import tiles from '../../../server/monopoly';\nimport io from 'socket.io-client';\n\nconfigure({enforceActions: \"observed\"});\nconst URL = process.env.REACT_APP_URL ? process.env.REACT_APP_URL : 'https://monopoly.cassimkhouani.com';\n\nclass Store {\n    socket = io(`${URL}/`, {forceNew: true});\n    mousedOverTile = null;\n    game = {};\n    selectedTab = \"my_info\";\n    gameAuthInfo = {};\n    connectToGame = () => {\n        this.socket.emit('join_game', this.gameAuthInfo);\n    };\n    setGameAuthInfo = (gameInfo) => {\n        this.gameAuthInfo = gameInfo;\n    };\n    updatePlayerJailRolls = (playerIndex) => {\n        this.socket.emit(\"update_player_jail_rolls\", {\n            game_id: this.gameAuthInfo.game_id,\n            jail_turns: this.game.player_info[playerIndex].jail_turns,\n            player_index: playerIndex,\n        });\n    };\n    startTurn = () => {\n        if (!this.playerJailState) {\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            this.movePlayer();\n            this.checkTile();\n        } else {\n            const playerIndex = this.playerIndex;\n            this.setPlayerState(\"ROLLING\");\n            this.rollDice();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setJailState(false);\n                this.syncPlayerJailState();\n                this.game.player_info[playerIndex].jail_turns = 0;\n            } else {\n                this.game.player_info[playerIndex].jail_turns += 1;\n            }\n            this.updatePlayerJailRolls(playerIndex);\n            this.setPlayerState(\"END_OF_TURN\");\n            this.syncPlayerState();\n        }\n    };\n    updatePlayerMoney = (playerIndex) => {\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n    payOutOfJail = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 50;\n        this.updatePlayerMoney(playerIndex);\n        this.setJailState(false);\n        this.syncPlayerJailState();\n        this.game.player_info[playerIndex].jail_turns = 0;\n        this.updatePlayerJailRolls(playerIndex);\n        if (this.getPlayer.jail_turns === 3) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    movePlayerDev = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = position;\n    };\n    movePlayerToTile = (position) => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = this.game.player_info[playerIndex].position;\n        while (this.circularAdd(i, 0, 39) !== this.circularAdd(position, 0, 39)) {\n            this.game.animated_players_move.moves.push(this.circularAdd(i, 1, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 100);\n        this.game.player_info[playerIndex].position = position;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: position,\n            player_index: playerIndex,\n        });\n    };\n    devMoveHere = (tile_position) => {\n        this.setPlayerState(\"ROLLING\");\n        this.rollDice();\n        this.movePlayerDev(tile_position);\n        this.checkTile();\n    };\n    mergeTradeData = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.player_info[trade.initiating_player].money -= parseInt(trade.given_money);\n        this.game.player_info[trade.initiating_player].money += parseInt(trade.taken_money);\n        this.game.player_info[trade.trading_player].money += parseInt(trade.given_money);\n        this.game.player_info[trade.trading_player].money -= parseInt(trade.taken_money);\n        trade.given_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.trading_player;\n        });\n        trade.taken_properties.forEach(propIndex => {\n            this.game.board[propIndex].player = trade.initiating_player;\n        });\n    };\n    acceptTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.mergeTradeData(tradeIndex);\n        this.game.trades[tradeIndex].state = \"ACCEPTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} a accepté un échange de ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"accept_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n            trade,\n        });\n\n    };\n    rejectTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"REJECTED\";\n        this.addToLog(`${this.game.player_info[trade.trading_player].username} a rejeté un échange de ${this.game.player_info[trade.initiating_player].username}`);\n        this.socket.emit(\"reject_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    cancelTrade = (tradeIndex) => {\n        const trade = this.game.trades[tradeIndex];\n        this.game.trades[tradeIndex].state = \"CANCELED\";\n        this.addToLog(`${this.game.player_info[trade.initiating_player].username} a annulé un échange de ${this.game.player_info[trade.trading_player].username}`);\n        this.socket.emit(\"cancel_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade_index: tradeIndex,\n        });\n    };\n    giveUp = () => {\n        const playerIndex = this.playerIndex;\n        this.addToLog(`${this.game.player_info[playerIndex].username} a arrêté.`);\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[playerIndex].state = \"OUT\";\n        if (this.game.player_info.filter(player => player.state !== \"OUT\").length === 1) {\n            const winningPlayer = this.game.player_info.find(player => player.state !== \"OUT\");\n            this.socket.emit(\"end_game\", {\n                game_id: this.gameAuthInfo.game_id,\n                winning_player: winningPlayer,\n            });\n            this.game.game_state = \"ENDED\";\n        } else {\n            const newBoard = this.game.board.map(tile => {\n                if (tile.player === playerIndex) {\n                    return {\n                        ...tile,\n                        owned: false,\n                        player: null,\n                        mortgaged: false,\n                        upgrades: 0,\n                    }\n                } else {\n                    return tile;\n                }\n            });\n            this.game.board = newBoard;\n            this.socket.emit(\"player_gives_up\", {\n                game_id: this.gameAuthInfo.game_id,\n                player_index: playerIndex,\n                next_player: newCurrentPlayer,\n                new_board: newBoard,\n            });\n        }\n    };\n    createTrade = (tradingPlayer, givenProperties, takenProperties, givenMoney, takenMoney) => {\n        this.selectedTab = \"my_info\";\n        const initiatingPlayer = this.playerIndex;\n        const trade = {\n            initiating_player: initiatingPlayer,\n            trading_player: tradingPlayer,\n            given_properties: givenProperties,\n            taken_properties: takenProperties,\n            given_money: givenMoney,\n            taken_money: takenMoney,\n            state: \"PROPOSED\",\n        };\n        this.addToLog(`${this.game.player_info[initiatingPlayer].username} a commencé un échange avec ${this.game.player_info[tradingPlayer].username}`);\n        this.game.trades.push(trade);\n        this.socket.emit(\"create_trade\", {\n            game_id: this.gameAuthInfo.game_id,\n            trade\n        });\n    };\n    payPlayer = () => {\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        const rent = this.calcRentCostTile(this.game.player_info[givingPlayer].position, false);\n        this.addToLog(`${this.getPlayer.username} paye ${this.game.player_info[receivingPlayer].username} $${rent} pour avoir visité ${this.playerTile.name}.`);\n        this.game.player_info[receivingPlayer].money += rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].money -= rent * this.getPlayer.pay_multiplier;\n        this.game.player_info[givingPlayer].pay_multiplier = 1;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n    };\n    addToLog = (log) => {\n        const newLog = {log: log, time: new Date()};\n        this.game.logs.push(newLog);\n        this.socket.emit(\"add_log\", {\n            game_id: this.gameAuthInfo.game_id,\n            log: newLog,\n        });\n    };\n    checkTile = () => {\n        const tile = this.game.board[this.getPlayer.position];\n        const playerIndex = this.playerIndex;\n        if (this.getPlayer.dice[0] !== this.getPlayer.dice[1]) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.checkAndUpdateDoublesRolled(playerIndex);\n        }\n        if (this.getPlayer.jail_state) {\n            return;\n        }\n        this.addToLog(`${this.getPlayer.username} a fait ${this.diceSum} (${this.getPlayer.dice[0]} - ${this.getPlayer.dice[1]}) et il est chez ${tile.name}.`);\n        this.checkIfPlayerPassedGo();\n        if (tile.owned && tile.player !== playerIndex) {\n            this.payPlayer();\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        } else if (!tile.owned && (tile.type === \"property\" || tile.type === \"rr\" || tile.type === \"utility\")) {\n            if (this.getPlayer.money < this.game.board[this.getPlayer.position].cost) {\n                this.setPlayerState(\"BUY_TILE_NO_MONEY\");\n            } else {\n                this.setPlayerState(\"BUY_TILE\");\n            }\n        } else if (tile.type === \"lux-tax\") {\n            this.payLuxuryTax();\n        } else if (tile.type === \"chance\" || tile.type === \"chest\") {\n            this.handleModifierCard(tile.type);\n        } else if (tile.type === \"income-tax\") {\n            this.setPlayerState(\"INCOME_TAX\");\n        } else if (tile.type === \"go-to-jail\") {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.updatePlayerDoublesRolled(playerIndex);\n            this.goToJail(playerIndex);\n            this.addToLog(`${this.getPlayer.username} a colle avec melissa :(`);\n        } else {\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n        }\n        this.syncPlayerState();\n    };\n    utilityChanceCardPayment = () => {\n        const roll = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1\n        ];\n        const rent = (roll[0] + roll[1]) * 10;\n        const receivingPlayer = this.playerTile.player;\n        const givingPlayer = this.playerIndex;\n        this.game.player_info[receivingPlayer].money += rent;\n        this.game.player_info[givingPlayer].money -= rent;\n        this.socket.emit(\"process_transaction\", {\n            game_id: this.gameAuthInfo.game_id,\n            giving_player: givingPlayer,\n            receiving_player: receivingPlayer,\n            giving_player_money: this.game.player_info[givingPlayer].money,\n            receiving_player_money: this.game.player_info[receivingPlayer].money,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    handleModifierCard = (type) => {\n        const playerIndex = this.playerIndex;\n        let newCardIndex = 0;\n        let newCard = {};\n        if (type === \"chance\") {\n            newCardIndex = this.game.last_chance_card + 1 === this.game.chance.length ? 0 : this.game.last_chance_card + 1;\n            this.game.last_chance_card = newCardIndex;\n            newCard = this.game.chance[newCardIndex];\n        } else {\n            newCardIndex = this.game.last_chest_card + 1 === this.game.chest.length ? 0 : this.game.last_chest_card + 1;\n            this.game.last_chest_card = newCardIndex;\n            newCard = this.game.chest[newCardIndex];\n        }\n        this.addToLog(`${this.getPlayer.username} a pris: ${newCard.name}`);\n        if (newCard.type === \"simple_move\") {\n            if (newCard.position === 0) {\n                this.playerPassedGoMoneyIncrease();\n            } else if (this.getPlayer.position > newCard.position) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(newCard.position);\n            this.checkTile();\n        } else if (newCard.type === \"nearest_utility\") {\n            const utility = this.findNearestType(\"utility\");\n            if (this.getPlayer.position > utility) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(utility);\n\n            if (this.game.board[utility].owned && this.game.board[utility].player !== playerIndex) {\n                this.setPlayerState(\"UTILITY_CHANCE_CARD\");\n                this.syncPlayerState();\n            } else {\n                this.checkTile();\n            }\n        } else if (newCard.type === \"nearest_rr\") {\n            this.game.player_info[playerIndex].pay_multiplier = 2;\n            const rail_road = this.findNearestType(\"rr\");\n            if (this.getPlayer.position > rail_road) {\n                this.playerPassedGoMoneyIncrease();\n            }\n            this.movePlayerToTile(rail_road);\n            this.checkTile();\n        } else if (newCard.type === \"simple_bank_pay\") {\n            this.game.player_info[playerIndex].money += newCard.amount;\n            this.updatePlayerMoney(playerIndex);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        } else if (newCard.type === \"move_amount\") {\n            this.movePlayerToTile(this.getPlayer.position + newCard.amount);\n            this.checkTile();\n        } else if (newCard.type === \"go_to_jail\") {\n            this.goToJail(playerIndex);\n        } else if (newCard.type === \"pay_all_players\") {\n            this.payAllPlayers(newCard.amount);\n            if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n                this.setPlayerState(\"START_TURN\");\n            } else {\n                this.setPlayerState(\"END_OF_TURN\");\n            }\n            this.syncPlayerState();\n        }\n\n        if (type === \"chance\") {\n            this.socket.emit(\"increase_chance_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chance_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        } else {\n            this.socket.emit(\"increase_chest_card\", {\n                game_id: this.gameAuthInfo.game_id,\n                last_chest_card: newCardIndex,\n                player_index: playerIndex,\n                pay_multiplier: this.game.player_info[playerIndex].pay_multiplier,\n            });\n        }\n    };\n    payAllPlayers = (amount) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money = this.game.player_info[playerIndex].money - (amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n        this.game.player_info.forEach((player, index) => {\n            if (index !== playerIndex) {\n                player.money += amount;\n            }\n        });\n        this.socket.emit(\"pay_all_players\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            amount: amount,\n        });\n    };\n    findNearestType = (type) => {\n        let nearest = this.game.board.findIndex((tile, index) => {\n            if (index < this.getPlayer.position) {\n                return false;\n            }\n            return tile.type === type;\n        });\n        if (nearest === -1) { // no utilities in front\n            nearest = this.game.board.findIndex((tile) => {\n                return tile.type === type;\n            });\n        }\n        return nearest;\n    };\n    payLuxuryTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 75;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} paye $75 pour s'enfuir de colle :O`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payPercentTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= Math.ceil(this.netWorth * .10);\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} choisi de payer 10% de son revenu net (${Math.ceil(this.netWorth * .10)}).`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    payFlatTax = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= 200;\n        this.updatePlayerMoney(playerIndex);\n        this.addToLog(`${this.getPlayer.username} choisi de payer $200 dollars.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    goToJail = (playerIndex) => {\n        this.game.player_info[playerIndex].position = 10;\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: 10,\n            player_index: playerIndex,\n        });\n        this.setJailState(true);\n        this.syncPlayerJailState();\n        this.setPlayerState(\"END_OF_TURN\");\n    };\n    checkAndUpdateDoublesRolled = (playerIndex) => {\n        this.game.player_info[playerIndex].doubles_rolled += 1;\n        if (this.game.player_info[playerIndex].doubles_rolled === 3) {\n            this.game.player_info[playerIndex].doubles_rolled = 0;\n            this.goToJail(playerIndex);\n        } else {\n            // this.setPlayerState(\"START_TURN\");\n        }\n        this.updatePlayerDoublesRolled(playerIndex);\n    };\n    updatePlayerDoublesRolled = (playerIndex) => {\n        this.socket.emit(\"update_players_doubles\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            doubles_rolled: this.getPlayer.doubles_rolled,\n        });\n    };\n\n    playerPassedGoMoneyIncrease = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += 200;\n        this.addToLog(`${this.getPlayer.username} passe GO et gagne $200!`);\n        this.socket.emit(\"update_player_money\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n    };\n    checkIfPlayerPassedGo = () => {\n        if (this.getPlayer.position - this.diceSum < 0) { //passed or on go\n            this.playerPassedGoMoneyIncrease();\n        }\n    };\n    syncPlayerJailState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_jail_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            jail_state: this.playerJailState,\n        });\n    };\n    syncPlayerState = () => {\n        const playerIndex = this.playerIndex;\n        this.socket.emit(\"sync_player_state\", {\n            game_id: this.gameAuthInfo.game_id,\n            player_index: playerIndex,\n            state: this.playerState,\n        });\n    };\n    buyTile = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[this.getPlayer.position].cost;\n        this.game.board[this.getPlayer.position].owned = true;\n        this.game.board[this.getPlayer.position].player = playerIndex;\n        this.addToLog(`${this.getPlayer.username} achète ${this.playerTile.name} pour $${this.playerTile.cost}.`);\n        this.socket.emit(\"buy_tile\", {\n            game_id: this.gameAuthInfo.game_id,\n            tile_index: this.getPlayer.position,\n            tile_bought: this.game.board[this.getPlayer.position],\n            player_money: this.game.player_info[playerIndex].money,\n            player_index: playerIndex,\n        });\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.syncPlayerState();\n    };\n    rejectBuyTile = () => {\n        this.addToLog(`${this.getPlayer.username} refuse de payer ${this.playerTile.name}. Enchères.`);\n        if (this.getPlayer.dice[0] === this.getPlayer.dice[1]) {\n            this.setPlayerState(\"START_TURN\");\n        } else {\n            this.setPlayerState(\"END_OF_TURN\");\n        }\n        this.socket.emit('initiate_auction', {\n            game_id: this.gameAuthInfo.game_id,\n            tile: this.getPlayer.position,\n        });\n        this.game.auction = true;\n        this.game.auction_tile = this.getPlayer.position;\n        this.syncPlayerState();\n    };\n    endTurn = () => {\n        this.refreshCurrentProposingTrade();\n        this.setPlayerState(\"NOT_TURN\");\n        const playerIndex = this.playerIndex;\n        let newCurrentPlayer = this.findNextPlayerInGame(playerIndex);\n        this.game.player_info[newCurrentPlayer].state = \"START_TURN\";\n        this.socket.emit('end_turn', {\n            game_id: this.gameAuthInfo.game_id,\n            next_player: newCurrentPlayer,\n            old_player: playerIndex,\n        });\n    };\n    startGame = () => {\n        this.game.game_state = \"STARTED\";\n        this.socket.emit('start_game', {\n            game_id: this.gameAuthInfo.game_id,\n        });\n    };\n    movePlayer = () => {\n        const playerIndex = this.playerIndex;\n        this.game.animated_players_move = {player: -1, moves: []};\n        let i = 0;\n        while (i <= this.diceSum) {\n            this.game.animated_players_move.moves.push(this.circularAdd(this.game.player_info[playerIndex].position, i, 39));\n            i += 1;\n        }\n        this.socket.emit('move_player_animation', {\n            game_id: this.gameAuthInfo.game_id,\n            animated_players_move: this.game.animated_players_move,\n        });\n        const movingPlayer = setInterval(() => {\n            runInAction(() => {\n                this.game.animated_players_move.moves.shift();\n                if (this.game.animated_players_move.moves.length === 0) {\n                    clearInterval(movingPlayer);\n                }\n            });\n        }, 200);\n        this.game.player_info[playerIndex].position = this.circularAdd(this.game.player_info[playerIndex].position, this.diceSum, 39);\n        this.socket.emit(\"move\", {\n            game_id: this.gameAuthInfo.game_id,\n            new_position: this.game.player_info[playerIndex].position,\n            player_index: playerIndex,\n        });\n    };\n    upgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money -= this.game.board[index].upgrade;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades += 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n    downgradeProperty = (index) => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].money += this.game.board[index].upgrade / 2;\n        this.updatePlayerMoney(playerIndex);\n        this.game.board[index].upgrades -= 1;\n        this.socket.emit('tile_upgrade', {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: index,\n            upgrades: this.game.board[index].upgrades,\n        });\n    };\n\n    constructor() {\n        this.socket.on(\"game_info\", (data) => {\n            console.log(\"game info\", data);\n            if (data) {\n                this.setGameInfo(data);\n            }\n        });\n        this.socket.on('reconnect', () => {\n            console.log(\"reconnecting\");\n            this.connectToGame();\n        });\n        this.socketActions();\n\n    }\n\n    socketActions = () => {\n        this.socket.on(\"player_moved\", data => {\n            console.log(\"player_moved\", data);\n            runInAction(() => {\n                this.game.player_info[data.player].position = data.position;\n            });\n        });\n        this.socket.on(\"tile_bought\", data => {\n            console.log(\"tile_bought\", data);\n            runInAction(() => {\n                this.game.player_info[data.player.player_index].money = data.player.player_money;\n                this.game.board[data.tile.tile_index] = data.tile.tile;\n            });\n        });\n        this.socket.on(\"player_money_updated\", data => {\n            console.log(\"player_money_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = data.player_money;\n            });\n        });\n        this.socket.on(\"turn_ended\", data => {\n            console.log(\"turn_ended\", data);\n            runInAction(() => {\n                if (data.next_player === this.playerIndex) {\n                    if (this.game.player_info[this.playerIndex].state === \"OUT\") {\n                        this.endTurn();\n                    } else {\n                        this.game.player_info[data.next_player].state = \"START_TURN\";\n                        this.game.player_info[data.old_player].state = \"NOT_TURN\";\n                        const notification = new Notification(\"Your turn!\");\n                        notification.onclick = () => {\n                            window.focus();\n                        };\n                    }\n                }\n            });\n        });\n        this.socket.on(\"sync_player_jail_state_synced\", data => {\n            console.log(\"sync_player_jail_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_state = data.jail_state;\n            });\n        });\n        this.socket.on(\"update_player_jail_rolls_updated\", data => {\n            console.log(\"update_player_jail_rolls_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].jail_turns = data.jail_turns;\n            });\n        });\n        this.socket.on(\"transaction_processed\", data => {\n            console.log(\"transaction_processed\", data);\n            runInAction(() => {\n                this.game.player_info[data.giving_player].money = data.giving_player_money;\n                this.game.player_info[data.giving_player].pay_multiplier = 1;\n                this.game.player_info[data.receiving_player].money = data.receiving_player_money;\n            });\n        });\n        this.socket.on(\"players_doubles_updated\", data => {\n            console.log(\"players_doubles_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].doubles_rolled = data.doubles_rolled;\n            });\n        });\n        this.socket.on(\"dice_roll_updated\", data => {\n            console.log(\"dice_roll_updated\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].dice = data.dice;\n            });\n        });\n        this.socket.on(\"player_state_synced\", data => {\n            console.log(\"player_state_synced\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = data.state;\n            });\n        });\n        this.socket.on(\"chest_card_increased\", data => {\n            console.log(\"chest_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chest_card = data.last_chest_card;\n            });\n        });\n        this.socket.on(\"chance_card_increased\", data => {\n            console.log(\"chance_card_increased\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].pay_multiplier = data.pay_multiplier;\n                this.game.last_chance_card = data.last_chance_card;\n            });\n        });\n        this.socket.on(\"property_mortgaged\", data => {\n            console.log(\"property_mortgaged\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].mortgaged = data.mortgage_value;\n            });\n        });\n        this.socket.on(\"tile_upgraded\", data => {\n            console.log(\"tile_upgraded\", data);\n            runInAction(() => {\n                this.game.board[data.property_index].upgrades = data.upgrades;\n            });\n        });\n        this.socket.on(\"trade_accepted\", data => {\n            console.log(\"trade_accepted\", data);\n            this.mergeTradeData(data.trade_index);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"ACCEPTED\";\n            });\n        });\n        this.socket.on(\"trade_rejected\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"REJECTED\";\n            });\n        });\n        this.socket.on(\"auction_initiated\", data => {\n            console.log(\"trade_rejected\", data);\n            runInAction(() => {\n                this.game.auction = true;\n                this.game.auction_tile = data.tile;\n            });\n        });\n        this.socket.on(\"trade_canceled\", data => {\n            console.log(\"trade_canceled\", data);\n            runInAction(() => {\n                this.game.trades[data.trade_index].state = \"CANCELED\";\n            });\n        });\n        this.socket.on(\"trade_created\", data => {\n            console.log(\"trade_created\", data);\n            runInAction(() => {\n                this.game.trades.push(data.trade);\n            });\n        });\n        this.socket.on(\"log_added\", data => {\n            console.log(\"log_added\", data);\n            runInAction(() => {\n                this.game.logs.push(data.log);\n            });\n        });\n        this.socket.on(\"game_started\", data => {\n            console.log(\"game_started\", data);\n            runInAction(() => {\n                this.game.game_state = \"STARTED\";\n            });\n        });\n        this.socket.on(\"player_gave_up\", data => {\n            console.log(\"player_gave_up\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].state = \"OUT\";\n                this.game.player_info[data.next_player].state = \"START_TURN\";\n                this.game.board = data.new_board;\n            });\n        });\n        this.socket.on(\"game_ended\", data => {\n            console.log(\"game_ended\", data);\n            runInAction(() => {\n                this.game.game_state = \"ENDED\";\n            });\n        });\n        this.socket.on(\"animated_players_moved\", data => {\n            console.log(\"animated_players_moved\", data);\n            runInAction(() => {\n                this.game.animated_players_move = data.animated_players_move;\n                const movingPlayer = setInterval(() => {\n                    runInAction(() => {\n                        this.game.animated_players_move.moves.shift();\n                        if (this.game.animated_players_move.moves.length === 0) {\n                            clearInterval(movingPlayer);\n                        }\n                    });\n                }, 200);\n            });\n        });\n        this.socket.on(\"pay_all_players_payed\", data => {\n            console.log(\"pay_all_players_payed\", data);\n            runInAction(() => {\n                this.game.player_info[data.player_index].money = this.game.player_info[data.player_index].money - (data.amount * (this.game.player_info.filter(player => player.state !== \"OUT\").length - 1));\n                this.game.player_info.forEach((player, index) => {\n                    if (index !== data.player_index) {\n                        player.money += data.amount;\n                    }\n                });\n            });\n        });\n    };\n    setGameInfo = (data) => {\n        this.game = data\n    };\n    setMousedOverTile = (tile) => {\n        this.mousedOverTile = tile;\n    };\n    clearMousedOverTile = () => {\n        this.mousedOverTile = null;\n    };\n\n    rollDice = () => {\n        const playerIndex = this.playerIndex;\n        this.game.player_info[playerIndex].dice = [\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n            Math.floor(Math.random() * Math.floor(6)) + 1,\n        ];\n        this.socket.emit(\"update_dice_roll\", {\n            game_id: this.gameAuthInfo.game_id,\n            dice: this.game.player_info[playerIndex].dice,\n            player_index: playerIndex,\n        });\n    };\n    calcRentCostTile = (tileIndex, preDiceRoll) => {\n        const tile = this.game.board[tileIndex];\n        if (tile.type === \"rr\") {\n            let numOwns = this.game.board.filter(el => el.type === \"rr\" && el.player === tile.player).length;\n            return tile.base_rent * Math.pow(2, numOwns - 1);\n        } else if (tile.type === \"property\") {\n            if (tile.mortgaged) {\n                return 0;\n            }\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            let noneMortgaged = this.game.board.filter(el => el.group === tile.group).every(el => !el.mortgaged);\n            if (ownsAll && noneMortgaged) {\n                if (tile.upgrades > 0) {\n                    return tile.rent[tile.upgrades];\n                }\n                return tile.rent[0] * 2;\n            } else {\n                return tile.rent[0];\n            }\n        } else if (tile.type === \"utility\") {\n            let ownsAll = this.game.board.filter(el => el.group === tile.group && el.player !== tile.player).length === 0;\n            if (!ownsAll) {\n                if (preDiceRoll) {\n                    return \"Dé×4\";\n                }\n                return this.diceSum * 4;\n            } else {\n                if (preDiceRoll) {\n                    return \"Dé×10\";\n                }\n                return this.diceSum * 10;\n            }\n        }\n    };\n    mortgageProperty = (property) => {\n        const playerIndex = this.playerIndex;\n        if (this.game.board[property].mortgaged) {\n            this.game.player_info[playerIndex].money -= this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        } else {\n            this.game.player_info[playerIndex].money += this.game.board[property].cost / 2;\n            this.updatePlayerMoney(playerIndex);\n        }\n        this.game.board[property].mortgaged = !this.game.board[property].mortgaged;\n        this.socket.emit(\"mortgage_property\", {\n            game_id: this.gameAuthInfo.game_id,\n            property_index: property,\n            mortgage_value: this.game.board[property].mortgaged,\n        });\n    };\n    circularAdd = (val, num, max) => {\n        if (val + num > max) {\n            num = num - (max - val);\n            return num - 1;\n        } else {\n            return val + num;\n        }\n    };\n\n    get diceSum() {\n        return this.getPlayer.dice[0] + this.getPlayer.dice[1];\n    }\n\n    get playerTile() {\n        return this.game.board[this.getPlayer.position];\n    }\n\n    get getPlayer() {\n        return this.game.player_info[this.playerIndex];\n    }\n\n    get inGame() {\n        if (!this.game.player_info) {\n            return false;\n        } else if (this.playerIndex === -1) {\n            return false;\n        } else {\n            return true\n        }\n    }\n\n    setPlayerState = (state) => {\n        this.game.player_info[this.playerIndex].state = state;\n    };\n    setJailState = (state) => {\n        this.game.player_info[this.playerIndex].jail_state = state;\n    };\n\n    get playerState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return \"NOT_TURN\";\n        // } else {\n        return this.getPlayer.state;\n        // }\n    }\n\n    get playerJailState() {\n        // if (this.gameState === \"NOT_STARTED\") {\n        //     return false;\n        // } else {\n        return this.getPlayer.jail_state;\n        // }\n    }\n\n    netWorthOfPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    };\n    liquidWorthofPlayer = (playerIndex) => {\n        if (!this.game.player_info) {\n            return 0\n        }\n        let worth = this.game.player_info[playerIndex].money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    };\n\n    get netWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * tile.upgrade;\n                }\n            }\n        });\n        return worth;\n    }\n\n    get liquidWorth() {\n        const playerIndex = this.playerIndex;\n        let worth = this.getPlayer.money;\n        this.game.board.forEach(tile => {\n            if (tile.owned && tile.player === playerIndex) {\n                worth += tile.cost / 2;\n                if (tile.upgrades) {\n                    worth += tile.upgrades * (tile.upgrade / 2);\n                }\n            }\n        });\n        return worth;\n    }\n\n    playersProperties = (playerIndex) => {\n        const player = this.game.player_info[playerIndex];\n        return this.game.board\n            .map((tile, i) => {\n                let ownsAll = this.game.board.filter(el => el.group === this.game.board[i].group && el.player !== this.game.board[i].player).length === 0;\n                let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => !el.mortgaged);\n                let offByOneUp = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades > el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades < el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                let offByOneDown = this.game.board.filter(el => el.group === this.game.board[i].group).every(el => {\n                    if (tile.upgrades < el.upgrades) {\n                        return false;\n                    }\n                    return tile.upgrades > el.upgrades || tile.upgrades === el.upgrades;\n\n                });\n                const hasHousesOnAny = this.game.board.filter(el => el.group === this.game.board[i].group && el.upgrade && el.upgrades > 0).length > 0;\n                const canUpgrade = offByOneUp && ownsAll && noneMortgaged && this.game.board[i].upgrades < 5 && player.money >= this.game.board[i].upgrade;\n                const canDowngrade = offByOneDown && ownsAll && noneMortgaged && this.game.board[i].upgrades > 0;\n                let calculatedRent = this.calcRentCostTile(i, true);\n                return {...tile, index: i, canUpgrade, canDowngrade, calculatedRent, ownsAll, hasHousesOnAny}\n            })\n            .filter(tile => {\n                return tile.owned && tile.player === playerIndex;\n            })\n            .sort((a, b) => {\n                return a.group === b.group ? a.cost < b.cost ? 1 : -1 : a.type === b.type ? a.group < b.group ? -1 : 1 : a.type < b.type ? -1 : 1\n            });\n    };\n\n    get playerIndex() {\n        if (!this.game.player_info) {\n            return null;\n        }\n        return this.game.player_info.findIndex(el => el.username === this.gameAuthInfo.username);\n    }\n\n    canUpgrade = (propertyIndex) => {\n        let ownsAll = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group && el.player !== this.game.board[propertyIndex].player).length === 0;\n        let noneMortgaged = this.game.board.filter(el => el.group === this.game.board[propertyIndex].group).every(el => !el.mortgaged);\n        return ownsAll && noneMortgaged && this.game.board[propertyIndex].upgrades < 3 && this.getPlayer.money >= this.game.board[propertyIndex].upgrade;\n    };\n\n    get currentPlayerTurn() {\n        const player = this.game.player_info.find(player => (player.state !== \"NOT_TURN\" && player.state !== \"OUT\"));\n        return player || {};\n    }\n\n    findNextPlayerInGame = (playerIndex) => {\n        for (let i = playerIndex; i < this.game.player_info.length * 3; i++) {\n            const player = this.game.player_info[(i % this.game.player_info.length + this.game.player_info.length) % this.game.player_info.length];\n            if (player.state !== \"OUT\" && player.id !== playerIndex) {\n                return player.id\n            }\n        }\n    };\n    refreshCurrentProposingTrade = () => {\n        this.currentProposingTrade = {\n            moneyGiven: 0,\n            moneyTaken: 0,\n            givenProperties: [],\n            takenProperties: [],\n        }\n    };\n    setCurrentProposingTrade = (key, val) => {\n        this.currentProposingTrade[key] = val;\n    };\n    currentProposingTrade = {\n        moneyGiven: 0,\n        moneyTaken: 0,\n        givenProperties: [],\n        takenProperties: [],\n    }\n}\n\ndecorate(Store, {\n    players: observable,\n    game: observable,\n    currentProposingTrade: observable,\n    // gameState: observable,\n    mousedOverTile: observable,\n    selectedTab: observable,\n    gameAuthInfo: observable,\n    diceSum: computed,\n    playerState: computed,\n    inGame: computed,\n    playerJailState: computed,\n    getPlayer: computed,\n    playerTile: computed,\n    netWorth: computed,\n    liquidWorth: computed,\n    playerIndex: computed,\n    currentPlayerTurn: computed,\n    rollDice: action,\n    refreshCurrentProposingTrade: action,\n    setCurrentProposingTrade: action,\n    setPlayerState: action,\n    movePlayerToTile: action,\n    checkTile: action,\n    payPercentTax: action,\n    payFlatTax: action,\n    goToJail: action,\n    utilityChanceCardPayment: action,\n    checkAndUpdateDoublesRolled: action,\n    setJailState: action,\n    clearMousedOverTile: action,\n    setMousedOverTile: action,\n    setUsername: action,\n    mortgageProperty: action,\n    setGameInfo: action,\n    createTrade: action,\n    payOutOfJail: action,\n    payLuxuryTax: action,\n    connectedFromNew: action,\n    movePlayerDev: action,\n    movePlayer: action,\n    payPlayer: action,\n    buyTile: action,\n    mergeTradeData: action,\n    acceptTrade: action,\n    addToLog: action,\n    startTurn: action,\n    payAllPlayers: action,\n    endTurn: action,\n    handleModifierCard: action,\n    upgradeProperty: action,\n    giveUp: action,\n    rejectTrade: action,\n    rejectBuyTile: action,\n    cancelTrade: action,\n    setGameAuthInfo: action,\n    downgradeProperty: action,\n    checkIfPlayerPassedGo: action,\n    playerPassedGoMoneyIncrease: action,\n    socketActions: action,\n    connectToGame: action,\n    startGame: action,\n});\n\nexport default new Store();","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {Provider} from 'mobx-react';\nimport {BrowserRouter} from 'react-router-dom';\nimport store from './store/Store';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <Provider store={store}>\n        <BrowserRouter>\n            <App/>\n        </BrowserRouter>\n    </Provider>\n    , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nNotification.requestPermission().then(function (result) {\n});\nserviceWorker.unregister();\n"],"sourceRoot":""}